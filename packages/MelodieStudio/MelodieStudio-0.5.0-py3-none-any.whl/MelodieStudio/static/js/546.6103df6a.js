(self["webpackChunkMelodieStudio"]=self["webpackChunkMelodieStudio"]||[]).push([[546],{6938:function(e,t,o){"use strict";o.r(t);var n=o(8081),a=o.n(n),i=o(3645),r=o.n(i),l=r()(a());l.push([e.id,".home{line-height:24px;height:100%}.height{height:999px}.fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}",""]),t["default"]=l},1546:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return y}});var n=o(6252),a={class:"home"},i=(0,n._)("h2",null,"Welcome to Melody Studio!",-1),r=(0,n._)("p",null," Melody Studio is a web-based toolbox for agent-based modelling together with Melodie. Now MelodyStudio has integrated the following functions: ",-1),l=(0,n.Uk)("Database Browser"),u=(0,n.Uk)(" to browse your database. "),d=(0,n.Uk)("Project Creator"),s=(0,n.Uk)(" to create a new project from a template. "),c=(0,n._)("p",null,"Happy Modelling!",-1),p=(0,n._)("div",{style:{position:"absolute",bottom:"0px","font-size":"12px"}},[(0,n._)("p",null,"Powered by: Vue-Onepiece-Admin by Mstian ")],-1);function f(e,t,o,f,h,v){var b=(0,n.up)("el-button");return(0,n.wg)(),(0,n.iD)("div",a,[i,(0,n._)("div",null,[r,(0,n._)("li",null,[(0,n.Wm)(b,{onClick:t[0]||(t[0]=function(e){return f.jumpToInner("tools/dbBrowser")})},{default:(0,n.w5)((function(){return[l]})),_:1}),u]),(0,n._)("li",null,[(0,n.Wm)(b,{onClick:t[1]||(t[1]=function(e){return f.jumpToInner("tools/projectCreator")})},{default:(0,n.w5)((function(){return[d]})),_:1}),s]),c]),p])}var h=o(2262),v=o(9700),b=o.n(v),m=o(2201),w=o(7616),_={setup:function(){var e=(0,w.F)(),t=(0,m.tv)(),o=(0,h.qj)(b()),a=(0,h.qj)({title:"APP_PRODUCTION"}),i=(0,h.qj)({data:{}});function r(e){t.push({path:"/".concat(e)})}return(0,n.JJ)("obj",a),{envName:a,variables:o,themeApi:e,jumpToInner:r,mockData:i}}},g=(o(6674),o(3744));const k=(0,g.Z)(_,[["render",f]]);var y=k},6674:function(e,t,o){var n=o(6938);n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals);var a=o(4402).Z;a("5066c7e6",n,!0,{sourceMap:!1,shadowMode:!1})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
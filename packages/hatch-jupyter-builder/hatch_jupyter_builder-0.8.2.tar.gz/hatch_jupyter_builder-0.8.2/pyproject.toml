[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "hatch-jupyter-builder"
dynamic = ["version"]
description = 'A hatch plugin to help build Jupyter packages'
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = ["jupyter", "jupyterlab", "hatch"]
authors = [
  { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["hatchling>=1.5"]

[project.urls]
Documentation = "https://github.com/jupyterlab/hatch-jupyter-builder#readme"
Issues = "https://github.com/jupyterlab/hatch-jupyter-builder/issues"
Source = "https://github.com/jupyterlab/hatch-jupyter-builder"

[project.optional-dependencies]
test = ["pytest", "pytest-mock", "hatch", "pytest-cov", "tomli", "twine"]
docs = ["pydata-sphinx-theme", "myst-parser", "hatch_jupyter_builder"]

[project.scripts]
hatch-jupyter-builder = 'hatch_jupyter_builder.cli:run'

[project.entry-points.hatch]
jupyter = "hatch_jupyter_builder.hooks"

[tool.hatch.version]
path = "hatch_jupyter_builder/__init__.py"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "python -m pytest -vv -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov hatch_jupyter_builder --cov-branch --cov-report term-missing:skip-covered {args}"

[tool.hatch.envs.migration]
features = ["test"]
dependencies = ["pytest-xdist[psutil]"]
[tool.hatch.envs.migration.scripts]
test = "python -m pytest -n auto -vv --migration-tests True"

[tool.hatch.envs.typing]
features = ["test"]
dependencies = ["mypy>=0.990"]
[tool.hatch.envs.typing.scripts]
test = "mypy --install-types --non-interactive {args:hatch_jupyter_builder/**/*.py tests/*.py}"

[tool.hatch.envs.lint]
dependencies = [
  "black>=22.6.0",
  "mdformat>0.7",
  "ruff==0.0.177",
]
[tool.hatch.envs.lint.scripts]
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
  "mdformat --check {args:docs/source *.md}"
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "mdformat {args:docs/source *.md}"
]

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]
norecursedirs = "tests/data/*"
filterwarnings = [
  "error"
]

[tool.coverage.run]
omit = [
   "hatch_jupyter_builder/cli.py",
   "hatch_jupyter_builder/migrate/*",
   "hatch_jupyter_builder/compare_migrated/*"
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
exclude = ["tests/data/**/*.*"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
  "A", "B", "C", "E", "F", "FBT", "I", "N", "Q", "RUF", "S", "T",
  "UP", "W", "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Use of `assert` detected
  "S101",
  # Line too long
  "E501",
  # Relative imports are banned
  "TID252",
  # Boolean ... in function definition
  "FBT001",
  "FBT002",
  # Module level import not at top of file
  "E402",
  # A001/A002/A003 .. is shadowing a python builtin
  "A001",
  "A002",
  "A003",
  # Possible hardcoded password
  "S105",
  "S106",
  # Variable `xxx` in function should be lowercase
  "N806",
  # Exception name `KernelSessionRecordConflict` should be named with an Error suffix
  "N818",
]
unfixable = [
  # Don't touch print statements
  "T201",
  # Don't touch unused imports
  "F401",
  # Don't touch noqa lines
  "RUF100",
]

[tool.ruff.per-file-ignores]
# B011 Do not call assert False since python -O removes these calls
# F841 local variable 'foo' is assigned to but never used
# C408 Unnecessary `dict` call
# E402 Module level import not at top of file
# T201 `print` found
"tests/*" = ["B011", "F841", "C408", "E402", "T201"]

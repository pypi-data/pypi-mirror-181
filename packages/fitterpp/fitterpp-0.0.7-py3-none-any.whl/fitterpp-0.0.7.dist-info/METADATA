Metadata-Version: 2.1
Name: fitterpp
Version: 0.0.7
Summary: Fitter parameters for an SBML model
Author-email: Joseph Hellerstein <joseph.hellerstein@gmail.com>
License: MIT License
        
        Copyright (c) 2022 Model Engineering
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/ModelEngineering/fitterpp
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jupyterlab
Requires-Dist: lhsmdu
Requires-Dist: lmfit
Requires-Dist: matplotlib
Requires-Dist: nose
Requires-Dist: numpy
Requires-Dist: pandas


# fitterpp: Simplified Parameter Fitting With Advanced Capabilities

fitterpp (pronounced "fitter plus plus") extends the capabilities of ``lmfit`` in several ways:

1. simplifies parameter fitting by automating the calculation of residuals;

2. ensures that the parameters reported have the smallest residual sum of squares;

3. provides for running several fitting algorithm in succession;

4. reports statistics on the runtime and quality of parameter fits.

For more details, see 
[readthedocs](https://fitterpp.readthedocs.io/en/latest/
).

# Version History
* 0.0.6
  * Fix pyproject.toml
* 0.0.4
  * Migrated setup to pyproject.toml 
* 0.0.3 
  * dictToParameter can set initial value to random in [min, max]
  * method_names can be strings or a FitterppMethod
  * latin cube index to compute across a latin cube
* 0.0.2 7/22/2022.
    User function must be self-describing, optionally returning a dataframe
* 0.0.1 7/19/2022. First release.

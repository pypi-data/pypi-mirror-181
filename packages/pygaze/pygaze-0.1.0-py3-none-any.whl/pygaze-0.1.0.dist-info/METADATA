Metadata-Version: 2.1
Name: pygaze
Version: 0.1.0
Summary: pygaze is a gaze estimation framework for python based on eth-xgaze.
Home-page: https://github.com/padmalcom/pygaze
Author: Jonas Freiknecht
Author-email: j.freiknecht@googlemail.com
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: loguru (>=0.6.0)
Requires-Dist: mediapipe (>=0.9.0.1)
Requires-Dist: omegaconf (>=2.3.0)
Requires-Dist: scipy (>=1.9.3)
Requires-Dist: timm (>=0.6.12)
Requires-Dist: torch (>=1.13.0)

# pygaze
pygaze is a wrapper for the outstanding work of [pytorch_mpiigaze_demo](https://github.com/hysts/pytorch_mpiigaze_demo) and [eth-xgaze](https://ait.ethz.ch/projects/2020/ETH-XGaze/) to provide an api to estimate the gaze of humans.

<a href="https://www.buymeacoffee.com/padmalcom" target="_blank"><img src="https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee" height="41" width="174"></a>

## API
- First create an instance of *PyGaze*.
- Call *predict* on the instance to get a list of faces in the image and a gaze vector.

## Example usage
```python
from pygaze import PyGaze
import cv2

image = cv2.imread("jonas.jpg")
pg = PyGaze()
print(pg.predict(image))
```

## Todo
- Add a flag to *predict()* to pass already detected faces in an image.
- Add a function *render(img, face)* to draw the predicted gaze to an image.
- Add examples for realtime and image prediction.

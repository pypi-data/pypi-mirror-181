# coding: utf-8

"""
    Web API Swagger specification

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import
import os
import sys
import unittest
import warnings
import shutil

ABSPATH = os.path.abspath(os.path.realpath(os.path.dirname(__file__)) + "/..")
sys.path.append(ABSPATH)
import asposecellscloud
from asposecellscloud.rest import ApiException
from asposecellscloud.apis.cells_api import CellsApi
import AuthUtil
from asposecellscloud.models import FileInfo

from datetime import datetime
global_api = None

class TestOne(unittest.TestCase):
    """ CellsWorkbookApi unit test stubs """

    def setUp(self):
        warnings.simplefilter('ignore', ResourceWarning)
        global global_api
        if global_api is None:
           global_api = asposecellscloud.apis.cells_api.CellsApi(AuthUtil.GetClientId(),AuthUtil.GetClientSecret(),"v3.0",AuthUtil.GetBaseUrl())
        self.api = global_api

    def tearDown(self):
        pass

    def test_convert_docx_call(self):
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_docx( fullfilename)
        pass
    def test_convert_pdf_call(self):
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_pdf( fullfilename)
        pass
    def test_convert_png_call(self):    
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_png( fullfilename)
        pass
    def test_convert_pptx_call(self):
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_pptx( fullfilename)
        pass
    def test_convert_html_call(self):
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_html( fullfilename)
        pass
    def test_convert_markdown_call(self):    
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_markdown( fullfilename)
        pass
    def test_convert_json_call(self):    
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_json( fullfilename)
        pass
    def test_convert_sql_call(self):    
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_sql( fullfilename)
        pass
    def test_convert_csv_call(self):    
        fullfilename = os.path.dirname(os.path.realpath(__file__)) + "/../TestData/" + "Book1.xlsx"
        result = self.api.post_convert_workbook_to_csv( fullfilename)
        pass        
if __name__ == '__main__':
    unittest.main()

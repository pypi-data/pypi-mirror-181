"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright: Ankitects Pty Ltd and contributors
License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
"""
import anki.cards_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CardStatsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class StatsRevlogEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TIME_FIELD_NUMBER: builtins.int
        REVIEW_KIND_FIELD_NUMBER: builtins.int
        BUTTON_CHOSEN_FIELD_NUMBER: builtins.int
        INTERVAL_FIELD_NUMBER: builtins.int
        EASE_FIELD_NUMBER: builtins.int
        TAKEN_SECS_FIELD_NUMBER: builtins.int
        time: builtins.int
        review_kind: global___RevlogEntry.ReviewKind.ValueType
        button_chosen: builtins.int
        interval: builtins.int
        """seconds"""
        ease: builtins.int
        """per mill"""
        taken_secs: builtins.float
        def __init__(
            self,
            *,
            time: builtins.int = ...,
            review_kind: global___RevlogEntry.ReviewKind.ValueType = ...,
            button_chosen: builtins.int = ...,
            interval: builtins.int = ...,
            ease: builtins.int = ...,
            taken_secs: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["button_chosen", b"button_chosen", "ease", b"ease", "interval", b"interval", "review_kind", b"review_kind", "taken_secs", b"taken_secs", "time", b"time"]) -> None: ...

    REVLOG_FIELD_NUMBER: builtins.int
    CARD_ID_FIELD_NUMBER: builtins.int
    NOTE_ID_FIELD_NUMBER: builtins.int
    DECK_FIELD_NUMBER: builtins.int
    ADDED_FIELD_NUMBER: builtins.int
    FIRST_REVIEW_FIELD_NUMBER: builtins.int
    LATEST_REVIEW_FIELD_NUMBER: builtins.int
    DUE_DATE_FIELD_NUMBER: builtins.int
    DUE_POSITION_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    EASE_FIELD_NUMBER: builtins.int
    REVIEWS_FIELD_NUMBER: builtins.int
    LAPSES_FIELD_NUMBER: builtins.int
    AVERAGE_SECS_FIELD_NUMBER: builtins.int
    TOTAL_SECS_FIELD_NUMBER: builtins.int
    CARD_TYPE_FIELD_NUMBER: builtins.int
    NOTETYPE_FIELD_NUMBER: builtins.int
    @property
    def revlog(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CardStatsResponse.StatsRevlogEntry]: ...
    card_id: builtins.int
    note_id: builtins.int
    deck: builtins.str
    added: builtins.int
    """Unix timestamps"""
    first_review: builtins.int
    latest_review: builtins.int
    due_date: builtins.int
    due_position: builtins.int
    interval: builtins.int
    """days"""
    ease: builtins.int
    """per mill"""
    reviews: builtins.int
    lapses: builtins.int
    average_secs: builtins.float
    total_secs: builtins.float
    card_type: builtins.str
    notetype: builtins.str
    def __init__(
        self,
        *,
        revlog: collections.abc.Iterable[global___CardStatsResponse.StatsRevlogEntry] | None = ...,
        card_id: builtins.int = ...,
        note_id: builtins.int = ...,
        deck: builtins.str = ...,
        added: builtins.int = ...,
        first_review: builtins.int | None = ...,
        latest_review: builtins.int | None = ...,
        due_date: builtins.int | None = ...,
        due_position: builtins.int | None = ...,
        interval: builtins.int = ...,
        ease: builtins.int = ...,
        reviews: builtins.int = ...,
        lapses: builtins.int = ...,
        average_secs: builtins.float = ...,
        total_secs: builtins.float = ...,
        card_type: builtins.str = ...,
        notetype: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_due_date", b"_due_date", "_due_position", b"_due_position", "_first_review", b"_first_review", "_latest_review", b"_latest_review", "due_date", b"due_date", "due_position", b"due_position", "first_review", b"first_review", "latest_review", b"latest_review"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_due_date", b"_due_date", "_due_position", b"_due_position", "_first_review", b"_first_review", "_latest_review", b"_latest_review", "added", b"added", "average_secs", b"average_secs", "card_id", b"card_id", "card_type", b"card_type", "deck", b"deck", "due_date", b"due_date", "due_position", b"due_position", "ease", b"ease", "first_review", b"first_review", "interval", b"interval", "lapses", b"lapses", "latest_review", b"latest_review", "note_id", b"note_id", "notetype", b"notetype", "reviews", b"reviews", "revlog", b"revlog", "total_secs", b"total_secs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_due_date", b"_due_date"]) -> typing_extensions.Literal["due_date"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_due_position", b"_due_position"]) -> typing_extensions.Literal["due_position"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_first_review", b"_first_review"]) -> typing_extensions.Literal["first_review"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_latest_review", b"_latest_review"]) -> typing_extensions.Literal["latest_review"] | None: ...

global___CardStatsResponse = CardStatsResponse

@typing_extensions.final
class GraphsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEARCH_FIELD_NUMBER: builtins.int
    DAYS_FIELD_NUMBER: builtins.int
    search: builtins.str
    days: builtins.int
    def __init__(
        self,
        *,
        search: builtins.str = ...,
        days: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["days", b"days", "search", b"search"]) -> None: ...

global___GraphsRequest = GraphsRequest

@typing_extensions.final
class GraphsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CARDS_FIELD_NUMBER: builtins.int
    REVLOG_FIELD_NUMBER: builtins.int
    DAYS_ELAPSED_FIELD_NUMBER: builtins.int
    NEXT_DAY_AT_SECS_FIELD_NUMBER: builtins.int
    SCHEDULER_VERSION_FIELD_NUMBER: builtins.int
    LOCAL_OFFSET_SECS_FIELD_NUMBER: builtins.int
    @property
    def cards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[anki.cards_pb2.Card]: ...
    @property
    def revlog(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RevlogEntry]: ...
    days_elapsed: builtins.int
    next_day_at_secs: builtins.int
    """Based on rollover hour"""
    scheduler_version: builtins.int
    local_offset_secs: builtins.int
    """/ Seconds to add to UTC timestamps to get local time."""
    def __init__(
        self,
        *,
        cards: collections.abc.Iterable[anki.cards_pb2.Card] | None = ...,
        revlog: collections.abc.Iterable[global___RevlogEntry] | None = ...,
        days_elapsed: builtins.int = ...,
        next_day_at_secs: builtins.int = ...,
        scheduler_version: builtins.int = ...,
        local_offset_secs: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cards", b"cards", "days_elapsed", b"days_elapsed", "local_offset_secs", b"local_offset_secs", "next_day_at_secs", b"next_day_at_secs", "revlog", b"revlog", "scheduler_version", b"scheduler_version"]) -> None: ...

global___GraphsResponse = GraphsResponse

@typing_extensions.final
class GraphPreferences(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Weekday:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _WeekdayEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GraphPreferences._Weekday.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SUNDAY: GraphPreferences._Weekday.ValueType  # 0
        MONDAY: GraphPreferences._Weekday.ValueType  # 1
        FRIDAY: GraphPreferences._Weekday.ValueType  # 5
        SATURDAY: GraphPreferences._Weekday.ValueType  # 6

    class Weekday(_Weekday, metaclass=_WeekdayEnumTypeWrapper): ...
    SUNDAY: GraphPreferences.Weekday.ValueType  # 0
    MONDAY: GraphPreferences.Weekday.ValueType  # 1
    FRIDAY: GraphPreferences.Weekday.ValueType  # 5
    SATURDAY: GraphPreferences.Weekday.ValueType  # 6

    CALENDAR_FIRST_DAY_OF_WEEK_FIELD_NUMBER: builtins.int
    CARD_COUNTS_SEPARATE_INACTIVE_FIELD_NUMBER: builtins.int
    BROWSER_LINKS_SUPPORTED_FIELD_NUMBER: builtins.int
    FUTURE_DUE_SHOW_BACKLOG_FIELD_NUMBER: builtins.int
    calendar_first_day_of_week: global___GraphPreferences.Weekday.ValueType
    card_counts_separate_inactive: builtins.bool
    browser_links_supported: builtins.bool
    future_due_show_backlog: builtins.bool
    def __init__(
        self,
        *,
        calendar_first_day_of_week: global___GraphPreferences.Weekday.ValueType = ...,
        card_counts_separate_inactive: builtins.bool = ...,
        browser_links_supported: builtins.bool = ...,
        future_due_show_backlog: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser_links_supported", b"browser_links_supported", "calendar_first_day_of_week", b"calendar_first_day_of_week", "card_counts_separate_inactive", b"card_counts_separate_inactive", "future_due_show_backlog", b"future_due_show_backlog"]) -> None: ...

global___GraphPreferences = GraphPreferences

@typing_extensions.final
class RevlogEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ReviewKind:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ReviewKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RevlogEntry._ReviewKind.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEARNING: RevlogEntry._ReviewKind.ValueType  # 0
        REVIEW: RevlogEntry._ReviewKind.ValueType  # 1
        RELEARNING: RevlogEntry._ReviewKind.ValueType  # 2
        FILTERED: RevlogEntry._ReviewKind.ValueType  # 3
        """Recent Anki versions only use this when rescheduling disabled"""
        MANUAL: RevlogEntry._ReviewKind.ValueType  # 4

    class ReviewKind(_ReviewKind, metaclass=_ReviewKindEnumTypeWrapper): ...
    LEARNING: RevlogEntry.ReviewKind.ValueType  # 0
    REVIEW: RevlogEntry.ReviewKind.ValueType  # 1
    RELEARNING: RevlogEntry.ReviewKind.ValueType  # 2
    FILTERED: RevlogEntry.ReviewKind.ValueType  # 3
    """Recent Anki versions only use this when rescheduling disabled"""
    MANUAL: RevlogEntry.ReviewKind.ValueType  # 4

    ID_FIELD_NUMBER: builtins.int
    CID_FIELD_NUMBER: builtins.int
    USN_FIELD_NUMBER: builtins.int
    BUTTON_CHOSEN_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    LAST_INTERVAL_FIELD_NUMBER: builtins.int
    EASE_FACTOR_FIELD_NUMBER: builtins.int
    TAKEN_MILLIS_FIELD_NUMBER: builtins.int
    REVIEW_KIND_FIELD_NUMBER: builtins.int
    id: builtins.int
    cid: builtins.int
    usn: builtins.int
    button_chosen: builtins.int
    interval: builtins.int
    last_interval: builtins.int
    ease_factor: builtins.int
    taken_millis: builtins.int
    review_kind: global___RevlogEntry.ReviewKind.ValueType
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        cid: builtins.int = ...,
        usn: builtins.int = ...,
        button_chosen: builtins.int = ...,
        interval: builtins.int = ...,
        last_interval: builtins.int = ...,
        ease_factor: builtins.int = ...,
        taken_millis: builtins.int = ...,
        review_kind: global___RevlogEntry.ReviewKind.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["button_chosen", b"button_chosen", "cid", b"cid", "ease_factor", b"ease_factor", "id", b"id", "interval", b"interval", "last_interval", b"last_interval", "review_kind", b"review_kind", "taken_millis", b"taken_millis", "usn", b"usn"]) -> None: ...

global___RevlogEntry = RevlogEntry

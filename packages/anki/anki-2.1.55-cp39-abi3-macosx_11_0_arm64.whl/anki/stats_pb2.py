# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/stats.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import cards_pb2 as anki_dot_cards__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x61nki/stats.proto\x12\nanki.stats\x1a\x12\x61nki/generic.proto\x1a\x10\x61nki/cards.proto\"\xf3\x04\n\x11\x43\x61rdStatsResponse\x12>\n\x06revlog\x18\x01 \x03(\x0b\x32..anki.stats.CardStatsResponse.StatsRevlogEntry\x12\x0f\n\x07\x63\x61rd_id\x18\x02 \x01(\x03\x12\x0f\n\x07note_id\x18\x03 \x01(\x03\x12\x0c\n\x04\x64\x65\x63k\x18\x04 \x01(\t\x12\r\n\x05\x61\x64\x64\x65\x64\x18\x05 \x01(\x03\x12\x19\n\x0c\x66irst_review\x18\x06 \x01(\x03H\x00\x88\x01\x01\x12\x1a\n\rlatest_review\x18\x07 \x01(\x03H\x01\x88\x01\x01\x12\x15\n\x08\x64ue_date\x18\x08 \x01(\x03H\x02\x88\x01\x01\x12\x19\n\x0c\x64ue_position\x18\t \x01(\x05H\x03\x88\x01\x01\x12\x10\n\x08interval\x18\n \x01(\r\x12\x0c\n\x04\x65\x61se\x18\x0b \x01(\r\x12\x0f\n\x07reviews\x18\x0c \x01(\r\x12\x0e\n\x06lapses\x18\r \x01(\r\x12\x14\n\x0c\x61verage_secs\x18\x0e \x01(\x02\x12\x12\n\ntotal_secs\x18\x0f \x01(\x02\x12\x11\n\tcard_type\x18\x10 \x01(\t\x12\x10\n\x08notetype\x18\x11 \x01(\t\x1a\xa4\x01\n\x10StatsRevlogEntry\x12\x0c\n\x04time\x18\x01 \x01(\x03\x12\x37\n\x0breview_kind\x18\x02 \x01(\x0e\x32\".anki.stats.RevlogEntry.ReviewKind\x12\x15\n\rbutton_chosen\x18\x03 \x01(\r\x12\x10\n\x08interval\x18\x04 \x01(\r\x12\x0c\n\x04\x65\x61se\x18\x05 \x01(\r\x12\x12\n\ntaken_secs\x18\x06 \x01(\x02\x42\x0f\n\r_first_reviewB\x10\n\x0e_latest_reviewB\x0b\n\t_due_dateB\x0f\n\r_due_position\"-\n\rGraphsRequest\x12\x0e\n\x06search\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ys\x18\x02 \x01(\r\"\xc0\x01\n\x0eGraphsResponse\x12\x1f\n\x05\x63\x61rds\x18\x01 \x03(\x0b\x32\x10.anki.cards.Card\x12\'\n\x06revlog\x18\x02 \x03(\x0b\x32\x17.anki.stats.RevlogEntry\x12\x14\n\x0c\x64\x61ys_elapsed\x18\x03 \x01(\r\x12\x18\n\x10next_day_at_secs\x18\x04 \x01(\r\x12\x19\n\x11scheduler_version\x18\x05 \x01(\r\x12\x19\n\x11local_offset_secs\x18\x07 \x01(\x05\"\x82\x02\n\x10GraphPreferences\x12H\n\x1a\x63\x61lendar_first_day_of_week\x18\x01 \x01(\x0e\x32$.anki.stats.GraphPreferences.Weekday\x12%\n\x1d\x63\x61rd_counts_separate_inactive\x18\x02 \x01(\x08\x12\x1f\n\x17\x62rowser_links_supported\x18\x03 \x01(\x08\x12\x1f\n\x17\x66uture_due_show_backlog\x18\x04 \x01(\x08\";\n\x07Weekday\x12\n\n\x06SUNDAY\x10\x00\x12\n\n\x06MONDAY\x10\x01\x12\n\n\x06\x46RIDAY\x10\x05\x12\x0c\n\x08SATURDAY\x10\x06\"\xa9\x02\n\x0bRevlogEntry\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0b\n\x03\x63id\x18\x02 \x01(\x03\x12\x0b\n\x03usn\x18\x03 \x01(\x05\x12\x15\n\rbutton_chosen\x18\x04 \x01(\r\x12\x10\n\x08interval\x18\x05 \x01(\x05\x12\x15\n\rlast_interval\x18\x06 \x01(\x05\x12\x13\n\x0b\x65\x61se_factor\x18\x07 \x01(\r\x12\x14\n\x0ctaken_millis\x18\x08 \x01(\r\x12\x37\n\x0breview_kind\x18\t \x01(\x0e\x32\".anki.stats.RevlogEntry.ReviewKind\"P\n\nReviewKind\x12\x0c\n\x08LEARNING\x10\x00\x12\n\n\x06REVIEW\x10\x01\x12\x0e\n\nRELEARNING\x10\x02\x12\x0c\n\x08\x46ILTERED\x10\x03\x12\n\n\x06MANUAL\x10\x04\x32\xa3\x02\n\x0cStatsService\x12>\n\tCardStats\x12\x12.anki.cards.CardId\x1a\x1d.anki.stats.CardStatsResponse\x12?\n\x06Graphs\x12\x19.anki.stats.GraphsRequest\x1a\x1a.anki.stats.GraphsResponse\x12H\n\x13GetGraphPreferences\x12\x13.anki.generic.Empty\x1a\x1c.anki.stats.GraphPreferences\x12H\n\x13SetGraphPreferences\x12\x1c.anki.stats.GraphPreferences\x1a\x13.anki.generic.EmptyB\x02P\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'anki.stats_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _CARDSTATSRESPONSE._serialized_start=71
  _CARDSTATSRESPONSE._serialized_end=698
  _CARDSTATSRESPONSE_STATSREVLOGENTRY._serialized_start=469
  _CARDSTATSRESPONSE_STATSREVLOGENTRY._serialized_end=633
  _GRAPHSREQUEST._serialized_start=700
  _GRAPHSREQUEST._serialized_end=745
  _GRAPHSRESPONSE._serialized_start=748
  _GRAPHSRESPONSE._serialized_end=940
  _GRAPHPREFERENCES._serialized_start=943
  _GRAPHPREFERENCES._serialized_end=1201
  _GRAPHPREFERENCES_WEEKDAY._serialized_start=1142
  _GRAPHPREFERENCES_WEEKDAY._serialized_end=1201
  _REVLOGENTRY._serialized_start=1204
  _REVLOGENTRY._serialized_end=1501
  _REVLOGENTRY_REVIEWKIND._serialized_start=1421
  _REVLOGENTRY_REVIEWKIND._serialized_end=1501
  _STATSSERVICE._serialized_start=1504
  _STATSSERVICE._serialized_end=1795
# @@protoc_insertion_point(module_scope)

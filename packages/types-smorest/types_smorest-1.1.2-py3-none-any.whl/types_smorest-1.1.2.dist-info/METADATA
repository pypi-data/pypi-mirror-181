Metadata-Version: 2.1
Name: types-smorest
Version: 1.1.2
Summary: Type Stubs for flask-smorest
Home-page: https://github.com/cex-solutions/types-smorest
Author: Binovate Labs
Author-email: cex-dev@binovate.com
License: GPLv3
Project-URL: Bug Reports, https://github.com/cex-solutions/types-smorest/issues
Project-URL: Source, https://github.com/cex-solutions/types-smorest
Keywords: flask flask-smorest smorest stubs
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Typing :: Stubs Only
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.7, <4
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: types-flask (==1.1.6) ; extra == 'dev'
Requires-Dist: marshmallow (==3.19.0) ; extra == 'dev'
Requires-Dist: apispec (==5.2.2) ; extra == 'dev'
Requires-Dist: flask (==2.2.2) ; extra == 'dev'
Requires-Dist: werkzeug (==2.2.2) ; extra == 'dev'
Requires-Dist: mypy (==0.991) ; extra == 'dev'
Requires-Dist: pipenv-setup (==3.2.0) ; extra == 'dev'
Requires-Dist: twine (==4.0.2) ; extra == 'dev'

# types-smorest

This is a package containing type annotations for [flask-smorest](https://pypi.org/project/flask-smorest/).

### Installing:

Simply run the following in the environment in which you want to install this package:

```shell
# install types-smorest
$ python -m pip install types-smorest
```

or add it to your requirements file.

### Developing

This is a partial stub package, only covering a part of the functions and objects available in `flask-smorest`.
Contributions (both in adding stubs for more functions, or keeping up to date with `flask-smorest` itself) are welcome.

All the formatting is done using [pre-commit](https://pre-commit.com/). To use this, run the following:

```shell
# install pre-commit
$ python -m pip install pre-commit

# Set up the hooks (so pre-commit automatically runs when you do a commit)
$ cd root/directory/of/the/pulled/repository
$ pre-commit install

# This will run automatically whenever a commit is created
# To run it manually, use:
$ pre-commit run --all-files
```

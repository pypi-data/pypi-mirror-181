---
# Copyright 2021 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy the RGW daemon
  block:
    # Using two tasks with a boolean due to the ansible bug: https://github.com/ansible/ansible/issues/68364
    - name: Collect the host and build the resulting host list
      set_fact:
        _hosts: "{{ _hosts|default([]) + [ hostvars[item].canonical_hostname ] }}"
      with_items: "{{ groups['ceph_rgw'] }}"
      when: tripleo_cephadm_fqdn | bool

    - name: Collect the host and build the resulting host list
      set_fact:
        _hosts: "{{ _hosts|default([]) + [ hostvars[item].inventory_hostname ] }}"
      with_items: "{{ groups['ceph_rgw'] }}"
      when: not tripleo_cephadm_fqdn | bool

    - name: Get certificate from remote node if needed
      become: true
      when:
        - tripleo_cephadm_internal_tls_enabled | bool
      register: slurp_cert
      ansible.builtin.slurp:
        src: "{{ radosgw_frontend_ssl_certificate | default('/etc/pki/tls/certs/ceph_rgw.crt')}}"

    - name: Create the RGW Daemon spec definition
      become: true
      ceph_mkspec:
        service_type: rgw
        cluster: "{{ tripleo_cephadm_cluster }}"
        apply: true
        hosts: "{{ _hosts | unique }}"
        spec:
          rgw_frontend_port: "{{ radosgw_frontend_port }}"
          rgw_realm: 'default'
          rgw_zone: 'default'
          rgw_frontend_ssl_certificate: "{{ rgw_frontend_cert }}"
          ssl: "{{ tripleo_cephadm_internal_tls_enabled|default(false)|bool }}"
        render_path: "{{ tripleo_cephadm_spec_home }}"
        networks: "{{ radosgw_address_block }}"
      register: spc
      environment:
        CEPH_CONTAINER_IMAGE: "{{ tripleo_cephadm_container_ns + '/' + tripleo_cephadm_container_image + ':' + tripleo_cephadm_container_tag }}"
        CEPH_CONTAINER_BINARY: "{{ tripleo_cephadm_container_cli }}"
      vars:
        rgw_frontend_cert: "{{ slurp_cert.get('content', '') | b64decode }}"
  when:
    - tripleo_enabled_services | intersect(['ceph_rgw'])

---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# found within the "vars/" path. If no OS files are found the task will skip.
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - skip: true
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_version'].split('.')[0] }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
  tags:
    - always

- name: Set packages facts
  set_fact:
    client_package_facts: |-
      {% set package_sets = {
           'absent': [],
           'installed': [],
           'latest': [],
           'present': [],
           'removed': []
         }
      %}
      {% for k, v in tripleo_clients_install_dict.items() %}
      {%   set pkg_name = tripleo_clients_install_python_prefix ~ '-' ~ k %}
      {%   if (tripleo_clients_install_pkg_state == 'present') and (v != tripleo_clients_install_pkg_state) %}
      {%     set _ = package_sets[v].append(pkg_name) %}
      {%   else %}
      {%     set _ = package_sets[tripleo_clients_install_pkg_state].append(pkg_name) %}
      {%   endif %}
      {% endfor %}
      {{ package_sets }}

- name: "Manage package"
  package:
    name: "{{ pkg.value }}"
    state: "{{ pkg.key }}"
    releasever: "{{ ansible_facts['distribution_major_version'] }}"
  when:
    - (pkg.value | length) > 0
  loop: "{{ client_package_facts | dict2items }}"
  loop_control:
    label: "{{ pkg.value }}: {{ pkg.key }}"
    loop_var: pkg

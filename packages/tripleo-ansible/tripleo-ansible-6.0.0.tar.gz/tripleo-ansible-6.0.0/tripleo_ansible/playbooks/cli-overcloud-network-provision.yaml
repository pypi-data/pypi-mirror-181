---
# Copyright 2020 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

- name: Overcloud Network Provision
  connection: "{{ (tripleo_target_host is defined) | ternary('ssh', 'local') }}"
  hosts: "{{ tripleo_target_host | default('localhost') }}"
  remote_user: "{{ tripleo_target_user | default(lookup('env', 'USER')) }}"
  gather_facts: "{{ (tripleo_target_host is defined) | ternary(true, false) }}"
  any_errors_fatal: true
  vars:
    overwrite: false
    templates: /usr/share/openstack-tripleo-heat-templates
  pre_tasks:
    - fail:
        msg: network_data_path is a required input
      when:
        - network_data_path is undefined
    - fail:
        msg: network_deployed_path is required input
      when:
        - network_deployed_path is undefined
    - name: Check if network deployment file already exist
      stat:
        path: "{{ network_deployed_path }}"
      register: stat_network_deployed_path_file
    - fail:
        msg: "Output file {{ network_deployed_path }} already exists"
      when:
        - stat_network_deployed_path_file.stat.exists and not overwrite|bool

  tasks:

    - name: Load config from file
      set_fact:
        network_data: "{{ lookup('file', network_data_path) | from_yaml}}"
      when:
        - network_data is undefined

    - name: Create/Update composable networks
      tripleo_composable_network:
        net_data: "{{ item }}"
        idx: "{{ idx }}"
      loop: "{{ network_data }}"
      loop_control:
        index_var: idx

    - name: Populate environment
      tripleo_network_populate_environment:
        net_data: "{{ network_data }}"
        templates: "{{ templates }}"
      register: network_environment

    - name: Write deployed networks environment file
      copy:
        dest: "{{ network_deployed_path }}"
        content: "{{ network_environment.environment | default({}) | to_nice_yaml(indent=2) }}"

---
# Copyright 2020 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# All variables intended for modification should be placed in this file.

# All variables within this role should have a prefix of "tripleo_frr"

tripleo_frr_bfd: false
# Configures the detection multiplier to determine packet loss.
# The remote transmission interval will be multiplied by this
# value to determine the connection loss detection timer.
tripleo_frr_bfd_detect_multiplier: 3
# The minimum transmission interval (less jitter) that this
# system wants to use to send BFD control packets. (milliseconds)
tripleo_frr_bfd_transmit_interval: 300
# Configures the minimum interval that this system is capable of
# receiving control packets. (milliseconds)
tripleo_frr_bfd_receive_interval: 300
tripleo_frr_bgp: false
tripleo_frr_bgp_ipv4: true
tripleo_frr_bgp_ipv4_allowas_in: false
tripleo_frr_bgp_ipv4_src_network: ctlplane
tripleo_frr_bgp_ipv6: true
tripleo_frr_bgp_ipv6_allowas_in: false
tripleo_frr_bgp_ipv6_src_network: ctlplane
tripleo_frr_bgp_l2vpn: true
tripleo_frr_bgp_l2vpn_ebgp_multihop: 0
tripleo_frr_bgp_l2vpn_uplink_activate: true
tripleo_frr_bgp_l2vpn_peers: ['192.168.0.1', '192.168.0.2']
tripleo_frr_bgp_l2vpn_peers_scope: external
# BGP RFCs only cover md5 auth for now, so setting this
# won't work on a FIPS-enabled environment
tripleo_frr_bgp_neighbor_password: ''
tripleo_frr_bgp_neighbor_ttl_security_hops: 1
# List of ips or hostnames frr should peer with
tripleo_frr_bgp_peers: []
# List of interfaces frr should use to set up peering
tripleo_frr_bgp_uplinks: []
tripleo_frr_bgp_uplinks_scope: internal
tripleo_frr_config_basedir: "/var/lib/config-data/ansible-generated/frr"
tripleo_frr_defaults: traditional
tripleo_frr_hostname: "{{ ansible_facts['hostname'] }}"
tripleo_frr_log_level: informational
tripleo_frr_log_timestamp_precision: 3
tripleo_frr_version: 7.0
tripleo_frr_watchfrr: true
tripleo_frr_watchfrr_options: ''
tripleo_frr_zebra: false
tripleo_frr_zebra_nht_resolve_via_default: true
tripleo_frr_conf_custom_globals: ''
tripleo_frr_conf_custom_router_bgp: ''
tripleo_frr_conf_custom_ipv4: ''
tripleo_frr_conf_custom_ipv6: ''

# BGP agent
tripleo_frr_ovn_bgp_agent_enable: true
tripleo_frr_ovn_bgp_agent_debug: true
tripleo_frr_ovn_bgp_agent_reconcile_interval: 120
tripleo_frr_ovn_bgp_agent_expose_tenant_networks: false
tripleo_frr_ovn_bgp_agent_expose_ipv6_gua_tenant_networks: false
tripleo_frr_ovn_bgp_agent_driver: ovn_bgp_driver
tripleo_frr_ovn_bgp_agent_private_key: /etc/pki/tls/private/ovn_bgp_agent.key
tripleo_frr_ovn_bgp_agent_certificate: /etc/pki/tls/certs/ovn_bgp_agent.crt
tripleo_frr_ovn_bgp_agent_ca_cert: /etc/ipa/ca.crt
tripleo_frr_ovn_bgp_agent_internal_tls_enable: false
tripleo_frr_ovn_bgp_agent_config_basedir: "/var/lib/config-data/ansible-generated/ovn-bgp-agent"
tripleo_frr_ovn_bgp_agent_bgp_as: 64999
tripleo_frr_ovn_bgp_agent_root_helper: "sudo ovn-bgp-agent-rootwrap /etc/ovn-bgp-agent/rootwrap.conf"
tripleo_frr_ovn_bgp_agent_root_helper_daemon: "sudo ovn-bgp-agent-rootwrap-daemon /etc/ovn-bgp-agent/rootwrap.conf"
tripleo_frr_ovn_bgp_agent_ovsdb_connection: "tcp:127.0.0.1:6640"
tripleo_frr_ovn_bgp_agent_ovs_manager: "ptcp:6640:127.0.0.1"

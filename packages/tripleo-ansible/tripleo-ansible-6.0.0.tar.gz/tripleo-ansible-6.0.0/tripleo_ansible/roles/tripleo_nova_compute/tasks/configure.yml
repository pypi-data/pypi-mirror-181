---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: manage PMEM namespaces for vPMEM
  include_role:
    name: tripleo_nvdimm
  when: tripleo_nova_compute_pmem_namespaces  # not a bool

- name: manage OS version 9 specific sysctls
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - ansible_facts['distribution_major_version'] is version('9', '==')
  block:
  - name: Enable post-copy by setting unprivileged_userfaultfd
    sysctl:
      name: "vm.unprivileged_userfaultfd"
      value: 1
      sysctl_set: true
      sysctl_file: /etc/sysctl.d/99-tripleo-postcopy.conf
      state: present
      reload: true

- name: enable/disable ksm
  block:
  - name: disable KSM on compute
    when: not tripleo_nova_compute_enable_ksm|bool
    block:
    - name: Check for ksm
      shell: systemctl is-active ksm.service || systemctl is-enabled ksm.service
      become: true
      failed_when: false
      register: ksm_service_check

    - name: disable KSM services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      with_items:
        - ksm.service
        - ksmtuned.service
      when:
        - not ansible_check_mode
        - ksm_service_check.rc is defined
        - ksm_service_check.rc == 0
      register: ksmdisabled

    # When KSM is disabled, any memory pages that were shared prior to
    # deactivating KSM are still shared. To delete all of the PageKSM
    # in the system, we use:
    - name: delete PageKSM after disable ksm on compute
      command: echo 2 >/sys/kernel/mm/ksm/run
      when:
        - ksm_service_check.rc is defined
        - ksm_service_check.rc == 0
        - ksmdisabled is changed

  - name: enable KSM on compute
    when: tripleo_nova_compute_enable_ksm|bool
    block:
    - name: make sure package providing ksmtuned is installed (RHEL8 or CentOS8)
      package:
        name: qemu-kvm-common
        state: present
      when:
        - ansible_facts['distribution_major_version'] is version('8', '==')

    - name: enable ksmtunded
      service:
        name: "{{ item }}"
        state: started
        enabled: true
      with_items:
        - ksm.service
        - ksmtuned.service

- name: Configure nova.conf
  when: tripleo_nova_compute_config_use_ansible
  block:
    - name: Ensure {{ tripleo_nova_compute_config_dir }}/etc/nova exists
      file:
        path: "{{ tripleo_nova_compute_config_dir }}/etc/nova"
        state: directory
        recurse: true

    - name: Remove nova_compute_config container if exists
      shell: |
        podman rm -f nova_compute_config || :

    - name: Run nova_compute_config container
      shell: podman run --detach --name nova_compute_config {{ tripleo_nova_compute_container_nova_libvirt_config_image }} sleep infinity
      register: config_container_id

    - name: Copy initial config files from nova_libvirt_config container
      shell: |
        mount_dir=$(podman mount nova_compute_config)
        cp -a ${mount_dir}/etc/nova/nova.conf {{ tripleo_nova_compute_config_dir }}/etc/nova/nova.conf
      failed_when: false
      notify: Remove nova_compute_config container
      register: copy_config_files

    - name: Check for failure
      debug:
        msg: |
          Copying config files failed
          {{ copy_config_files.stdout }}
          {{ copy_config_files.stderr }}
      when:
        - copy_config_files.rc != 0
      failed_when: true

    - name: Configure nova.conf
      config_template:
        remote_src: true
        src: "{{ tripleo_nova_compute_config_dir }}/etc/nova/nova.conf"
        dest: "{{ tripleo_nova_compute_config_dir }}/etc/nova/nova.conf"
        config_type: ini
        config_overrides: "{{ tripleo_nova_compute_config | combine(tripleo_nova_compute_config_overrides, recursive=True) }}"

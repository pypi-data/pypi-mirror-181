---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Set facts for conditions
  set_fact:
    tripleo_nova_libvirt_need_libvirt_secret: "{{
      tripleo_nova_libvirt_enable_rbd_backend | bool or
      tripleo_nova_libvirt_cinder_enable_rbd_backend | bool }}"

- name: Set facts for Ceph multiconfig keyring paths
  vars:
    _keyrings:
      - "{{ tripleo_nova_libvirt_ceph_cluster_name}}.client.{{ tripleo_nova_libvirt_ceph_client_user_name}}.keyring"
  set_fact:
    tripleo_nova_libvirt_ceph_multiconfig_keyrings: "{{ tripleo_nova_libvirt_ceph_multiconfig_keyrings | default([]) +
                                                    [item.value['CephClusterName'] | default(tripleo_nova_libvirt_ceph_cluster_name) ~ '.client.' ~
                                                    item.value['CephClientUserName'] | default(tripleo_nova_libvirt_ceph_client_user_name) ~ '.keyring'] }}"
  with_items: "{{ (_keyrings + tripleo_nova_libvirt_cinder_rbd_multi_config | dict2items) | unique }}"

- name: Set facts for Ceph multiconfig Kolla permissions
  set_fact:
    tripleo_nova_libvirt_ceph_multiconfig_permissions: "{{ tripleo_nova_libvirt_ceph_multiconfig_permissions | default([]) +
                                                       [{'owner': 'nova:nova', 'perm': '0600', 'path': '/etc/ceph/' ~ item}] }}"
  with_items: "{{ tripleo_nova_libvirt_ceph_multiconfig_keyrings }}"

- name: Set facts for Ceph multiconfig info
  vars:
    _multiconfig_info:
      - "{{ tripleo_nova_libvirt_ceph_cluster_name }}:{{ tripleo_nova_libvirt_ceph_client_user_name }}"
  set_fact:
    tripleo_nova_libvirt_ceph_multiconfig_info: "{{ tripleo_nova_libvirt_ceph_multiconfig_info | default([]) +
                                                [item.value['CephClusterName'] | default(tripleo_nova_libvirt_ceph_cluster_name) ~ ':' ~
                                                item.value['CephClientUserName'] | default(tripleo_nova_libvirt_ceph_client_user_name)] }}"
  with_items: "{{ (_multiconfig_info + tripleo_nova_libvirt_cinder_rbd_multi_config | dict2items) | unique }}"

- name: Certificate generation for Nova Libvirt and QEMU
  when: tripleo_nova_libvirt_enable_internal_tls|bool
  block:
    - name: Create dirs for certificates and keys
      file:
        path: "{{ item }}"
        state: directory
        serole: object_r
        setype: cert_t
        seuser: system_u
      with_items:
        - '/etc/pki/libvirt'
        - '/etc/pki/libvirt/private'
        - '/etc/pki/qemu'
    - include_role:
        name: linux-system-roles.certificate
      vars:
        certificate_requests:
          - name: libvirt-server-cert
            dns: "{{ tripleo_nova_libvirt_network }}"
            principal: libvirt/{{ tripleo_nova_libvirt_network }}@{{ tripleo_nova_libvirt_idm_realm }}
            run_after: |
              # Copy cert and key to libvirt dirs
              cp {{ tripleo_nova_libvirt_libvirt_ca_cert_real }} /etc/pki/CA/cacert.pem
              chown root:root /etc/pki/CA/cacert.pem
              chmod 644 /etc/pki/CA/cacert.pem
              cp /etc/pki/tls/certs/libvirt-server-cert.crt /etc/pki/libvirt/servercert.pem
              cp /etc/pki/tls/private/libvirt-server-cert.key /etc/pki/libvirt/private/serverkey.pem
              systemctl reload tripleo_nova_virtqemud
            key_size: "{{ tripleo_nova_libvirt_certificate_key_size_real }}"
            ca: ipa
          - name: libvirt-client-cert
            dns: "{{ tripleo_nova_libvirt_network }}"
            principal: libvirt/{{ tripleo_nova_libvirt_network }}@{{ tripleo_nova_libvirt_idm_realm }}
            run_after: |
              # Copy cert and key to libvirt dirs
              cp /etc/pki/tls/certs/libvirt-client-cert.crt /etc/pki/libvirt/clientcert.pem
              cp /etc/pki/tls/private/libvirt-client-cert.key /etc/pki/libvirt/private/clientkey.pem
              systemctl reload tripleo_nova_virtqemud
            key_size: "{{ tripleo_nova_libvirt_certificate_key_size_real }}"
            ca: ipa
          - name: qemu-server-cert
            owner: root
            group: qemu
            dns: "{{ tripleo_nova_libvirt_network }}"
            principal: libvirt/{{ tripleo_nova_libvirt_network }}@{{ tripleo_nova_libvirt_idm_realm }}
            run_after: |
              # Copy cert and key to qemu dir
              cp {{ tripleo_nova_libvirt_qemu_ca_cert_real }} /etc/pki/qemu/ca-cert.pem
              chown root:root /etc/pki/qemu/ca-cert.pem
              chmod 644 /etc/pki/qemu/ca-cert.pem
              cp -a /etc/pki/tls/certs/qemu-server-cert.crt /etc/pki/qemu/server-cert.pem
              cp -a /etc/pki/tls/private/qemu-server-cert.key /etc/pki/qemu/server-key.pem
              chgrp qemu /etc/pki/qemu/server-*
              chmod 0640 /etc/pki/qemu/server-cert.pem
              chmod 0640 /etc/pki/qemu/server-key.pem
            key_size: "{{ tripleo_nova_libvirt_qemu_server_certificate_key_size_real }}"
            ca: ipa
          - name: qemu-client-cert
            owner: root
            group: qemu
            dns: "{{ tripleo_nova_libvirt_network }}"
            principal: libvirt/{{ tripleo_nova_libvirt_network }}@{{ tripleo_nova_libvirt_idm_realm }}
            run_after: |
              # Copy cert and key to qemu dir
              cp -a /etc/pki/tls/certs/qemu-client-cert.crt /etc/pki/qemu/client-cert.pem
              cp -a /etc/pki/tls/private/qemu-client-cert.key /etc/pki/qemu/client-key.pem
              chgrp qemu /etc/pki/qemu/client-*
              chmod 0640 /etc/pki/qemu/client-cert.pem
              chmod 0640 /etc/pki/qemu/client-key.pem
            key_size: "{{ tripleo_nova_libvirt_qemu_client_certificate_key_size_real }}"
            ca: ipa

- name: Configure libvirt
  when: tripleo_nova_libvirt_config_use_ansible|bool
  block:
    - name: Ensure {{ tripleo_nova_libvirt_config_dir }}/etc/libvirt exists
      file:
        path: "{{ tripleo_nova_libvirt_config_dir }}/etc/libvirt"
        state: directory
        recurse: true

    - name: Remove nova_libvirt_config container if exists
      shell: podman rm -f nova_libvirt_config
      changed_when: false
      failed_when: false

    - name: Run nova_libvirt_config container
      shell: podman run --detach --name nova_libvirt_config {{ tripleo_nova_libvirt_container_config_image }} sleep infinity
      notify: Remove nova_libvirt_config container
      register: config_container_id

    - name: Copy initial config files from nova_libvirt_config container
      shell: |
        mount_dir=$(podman mount nova_libvirt_config)
        cp -a ${mount_dir}/{{ item }} {{ tripleo_nova_libvirt_config_dir }}/etc/libvirt
      failed_when: false
      changed_when: false
      register: copy_config_files
      loop:
        - /etc/libvirt/virtlockd.conf
        - /etc/libvirt/virtlogd.conf
        - /etc/libvirt/virtnodedevd.conf
        - /etc/libvirt/virtnwfilterd.conf
        - /etc/libvirt/virtproxyd.conf
        - /etc/libvirt/virtqemud.conf
        - /etc/libvirt/virtsecretd.conf
        - /etc/libvirt/virtstoraged.conf

    - name: Check for failure
      debug:
        msg: |
          Copying config files failed
          {{ copy_config_files.results | map(attribute='stdout') | list }}
          {{ copy_config_files.results | map(attribute='stderr') | list }}
      when:
        - copy_config_files.results | selectattr('rc', 'ne', 0) | list | length != 0
      failed_when: true

    - name: Configure common nova_libvirt config values
      ini_file:
        path: "{{ tripleo_nova_libvirt_config_dir }}/etc/libvirt/{{ item.1 ~ '.conf' }}"
        section: "{{ item.0.section }}"
        option: "{{ item.0.option }}"
        value: "{{ item.0.value }}"
      loop: "{{ configs | product(tripleo_nova_libvirt_services) | list }}"
      vars:
        configs:
          - section: null
            option: unix_sock_group
            value: "'libvirt'"
          - section: null
            option: unix_sock_ro_perms
            value: "'0444'"
          - section: null
            option: unix_sock_rw_perms
            value: "'0770'"
          - section: null
            option: auth_unix_ro
            value: "'none'"
          - section: null
            option: auth_unix_rw
            value: "'none'"

    - name: Configure nova_libvirt log_filters config values
      ini_file:
        path: "{{ tripleo_nova_libvirt_config_dir }}/etc/libvirt/{{ item ~ '.conf' }}"
        section: null
        option: log_filters
        value: "'{{ lookup('vars', 'tripleo_nova_libvirt_' ~ item ~ '_log_filters') }}'"
      loop: "{{ tripleo_nova_libvirt_services }}"

    - name: Configure nova_libvirt log_outputs config values
      ini_file:
        path: "{{ tripleo_nova_libvirt_config_dir }}/etc/libvirt/{{ item ~ '.conf' }}"
        section: null
        option: log_outputs
        value: "'{{ lookup('vars', 'tripleo_nova_libvirt_' ~ item ~ '_log_outputs') }}'"
      loop: "{{ tripleo_nova_libvirt_services }}"

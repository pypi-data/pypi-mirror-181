---
# These tasks handle tripleo-driven additions to the qdr config:
#
# 1) Mesh mode - Controllers form a QDR mesh which connects to the external
#    endpoint, all other nodes connect to the mesh
# 2) TLS Everywhere - Enabling SSL for mesh-to-mesh and edge-to-mesh connections

- name: Set mutable and derivative vars
  run_once: true
  set_fact:
    # Mutable connectors so we can supress it on edge nodes if in mesh mode
    connectors: "{{ tripleo_metrics_qdr_connectors }}"
    qdr_listener_addr: "{{
      lookup('vars', (service_net_map[(tripleo_role_name + 'MetricsQdrNetwork') | snake_case] + '_ip') )
    }}"
    # RFE? Should be in QdrVars, right now there is no good way to alter it
    qdr_log_enable: 'info+'

- name: Augment tripleo_metrics_qdr_extra_ssl_profiles if EnableInternalTLS
  when: tripleo_enable_internal_tls
  run_once: true
  set_fact:
    tripleo_metrics_qdr_extra_ssl_profiles: "{{ tripleo_metrics_qdr_extra_ssl_profiles | union(
                             [{ 'name': 'tlsProfile',
                                'certFile': tripleo_metrics_qdr_listener_ssl_cert_file,
                                'keyFile': tripleo_metrics_qdr_listener_ssl_key_file,
                                'caCertFile': tripleo_internal_tlscafile
                             }]) }}"
    tripleo_metrics_qdr_ssl_profile_base_mesh:
      sslProfile: tlsProfile

- name: Configure the mesh mode settings if requested
  when: tripleo_metrics_qdr_deployment_mode == 'controller-mesh'
  block:

    - name: Set the list of interior mesh nodes
      run_once: true
      set_fact:
        # Form mesh on controller nodes - RFE? Make placement configurable
        interior_nodes_list: "{{ controller_node_ips.split(',') }}"

    # TODO(BZ1816046): metrics should have it's own network, not use ctlplane
    - name: Set interior IP for mesh mode connections to use ctlplane
      set_fact:
        interior_ip: "{{ ctlplane_ip }}"

    - name: Define connectors for edge->interior, replacing existing connectors
      when: not (interior_ip in interior_nodes_list)
      block:
        - name: Remove existing connector
          set_fact:
            connectors: []

        - name: Create connectors to two random interior nodes
          loop: "{{ (interior_nodes_list |
                    shuffle(seed=inventory_hostname))[0:2] }}"
          set_fact:
            # *CS TODO: Add the SSL support to mesh mode like node_base from
            # the puppet (internal_tls), see https://git.io/Jt8oP
            connectors: "{{ connectors | union(
                            [ tripleo_metrics_qdr_ssl_profile_base_mesh | combine(
                              { 'host': item,
                                'port': '5668',
                                'role': 'edge',
                                'verifyHostname': 'no',
                                'saslMechanisms': 'ANONYMOUS'
                              })
                            ])
                          }}"

    - name: Configure interior mesh node
      when: interior_ip in interior_nodes_list
      block:
        - name: Set additional listeners, connectors, mode
          set_fact:
            tripleo_metrics_qdr_router_mode: interior

            # Set list of OTHER interior nodes with which to form mesh
            # connections (ones with a lower ordinal position than us)
            mesh_connection_nodes_list: "{{
              interior_nodes_list[0:interior_nodes_list.index(interior_ip)] }}"

            # *CS TODO: Add the SSL support to mesh mode like node_base from
            # the puppet (internal_tls), see https://git.io/Jt8oP
            # Add extra listener for edge -> interior
            tripleo_metrics_qdr_extra_listeners: "{{ tripleo_metrics_qdr_extra_listeners | union(
                                    [ tripleo_metrics_qdr_ssl_profile_base_mesh | combine(
                                      { 'host': interior_ip,
                                        'port': '5668',
                                        'role': 'edge',
                                        'authenticatePeer': 'no',
                                        'saslMechanisms': 'ANONYMOUS'
                                      })
                                    ])
                                  }}"

        - name: Add extra listener for mesh connections
          set_fact:
            # *CS TODO: Add the SSL support to mesh mode like node_base from
            # the puppet (internal_tls), see https://git.io/Jt8oP
            tripleo_metrics_qdr_extra_listeners: "{{ tripleo_metrics_qdr_extra_listeners | union(
                                    [ tripleo_metrics_qdr_ssl_profile_base_mesh | combine(
                                      { 'host': interior_ip,
                                        'port': '5667',
                                        'role': 'inter-router',
                                        'authenticatePeer': 'no',
                                        'saslMechanisms': 'ANONYMOUS'
                                      })
                                    ])
                                  }}"

        - name: Add mesh connections
          loop: "{{ mesh_connection_nodes_list }}"
          set_fact:
            # *CS TODO: Add the SSL support to mesh mode like node_base from
            # the puppet (internal_tls), see https://git.io/Jt8oP
            connectors: "{{ connectors | union(
                            [ tripleo_metrics_qdr_ssl_profile_base_mesh | combine(
                              { 'host': item,
                                'port': '5667',
                                'role': 'inter-router',
                                'verifyHostname': 'no',
                                'saslMechanisms': 'ANONYMOUS'
                              })
                            ])
                        }}"
# End of mesh-mode block

- name: "Include QDR config role"
  include_role:
    name: qdr_config
  vars:
    qdr_addresses: "{{ tripleo_metrics_qdr_addresses }}"
    qdr_autolink_addresses: "{{ tripleo_metrics_qdr_autolink_addresses }}"
    qdr_conf_output_dir: "{{ tripleo_metrics_qdr_conf_output_dir }}"
    qdr_connectors: "{{ connectors }}"
    qdr_deployment_mode: "{{ tripleo_metrics_qdr_deployment_mode }}"
    qdr_extra_listeners: "{{ tripleo_metrics_qdr_extra_listeners }}"
    qdr_extra_ssl_profiles: "{{ tripleo_metrics_qdr_extra_ssl_profiles }}"
    qdr_listener_auth_peer: "{{ tripleo_metrics_qdr_listener_auth_peer }}"
    qdr_listener_port: "{{ tripleo_metrics_qdr_listener_port }}"
    qdr_listener_require_ssl: "{{ tripleo_metrics_qdr_listener_require_ssl }}"
    qdr_listener_sasl_mech: "{{ tripleo_metrics_qdr_listener_sasl_mech }}"
    qdr_listener_ssl_cert_file: "{{ tripleo_metrics_qdr_listener_ssl_cert_file }}"
    qdr_listener_ssl_cert_db: "{{ tripleo_metrics_qdr_listener_ssl_cert_db }}"
    qdr_listener_ssl_key_file: "{{ tripleo_metrics_qdr_listener_ssl_key_file }}"
    qdr_listener_ssl_password: "{{ tripleo_metrics_qdr_listener_ssl_password }}"
    qdr_listener_ssl_pw_file: "{{ tripleo_metrics_qdr_listener_ssl_pw_file }}"
    qdr_listener_trusted_certs: "{{ tripleo_metrics_qdr_listener_trusted_certs }}"
    qdr_listener_use_encryption: "{{ tripleo_metrics_qdr_listener_use_encryption }}"
    qdr_log_output: "{{ tripleo_metrics_qdr_log_output }}"
    qdr_password: "{{ tripleo_metrics_qdr_password }}"
    qdr_router_mode: "{{ tripleo_metrics_qdr_router_mode }}"
    qdr_ssl_profiles: "{{ tripleo_metrics_qdr_ssl_profiles }}"
    qdr_username: "{{ tripleo_metrics_qdr_username }}"

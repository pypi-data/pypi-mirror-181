---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Load vars id needed
  when: tripleo_podman_packages is undefined or tripleo_podman_packages|length == 0
  import_tasks: load_vars.yaml

- name: Install block
  become: true
  block:
    - name: ensure podman and deps are installed
      package:
        name: "{{ tripleo_podman_packages }}"
        state: present

    - name: Ensure we get the ansible interfaces facts
      when:
        - ansible_facts['interfaces'] is undefined
      setup:
        gather_subset:
          - '!all'
          - '!min'
          - 'network'
        filter: 'ansible_interfaces'

    - name: Delete legacy cni0 interface (podman < 1.6)
      command: ip link delete cni0
      when:
        - '"cni0" in ansible_facts["interfaces"]'

    # don't update the network config if the network is already running
    # meaning cni-podman0 is running somewhere
    - name: Update default network configuration if possible
      block:
      - name: Make sure /etc/cni/net.d folder exists
        file:
          path: /etc/cni/net.d
          state: directory
          recurse: true
          mode: 0755
          owner: root
          group: root

      - name: Update default network configuration if possible
        copy:
          dest: /etc/cni/net.d/87-podman-bridge.conflist
          content: "{{ tripleo_podman_default_network_config | to_json }}"
          mode: '0644'
          owner: root
          group: root
      when:
        - '"cni-podman0" not in ansible_facts["interfaces"]'
        - tripleo_container_default_network_backend == 'cni'

    - name: Update netavark container network configuration
      block:
        - name: Make sure /etc/containers/networks exists
          file:
            path: /etc/containers/networks
            state: directory
            recurse: true
            mode: 0755
            owner: root
            group: root
        - name: Get current podman network
          shell: |
            podman network inspect podman
          register: podman_network_inspect
        - name: Update the default network configuration
          template:
            src: podman_network_config.j2
            dest: /etc/containers/networks/podman.json
            mode: '0644'
            owner: root
            group: root
          when:
            - podman_network_inspect is not skipped
      when:
        - tripleo_container_default_network_backend == 'netavark'

    - name: Write containers registries.conf
      template:
        src: registries.conf.j2
        dest: /etc/containers/registries.conf
        owner: root
        group: root
        setype: etc_t
        mode: '0644'

    - name: Write containers.conf
      ini_file:
        path: /etc/containers/containers.conf
        owner: root
        group: root
        setype: etc_t
        mode: '0644'
        create: true
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      loop:
        - section: containers
          option: pids_limit
          value: "{{ tripleo_container_default_pids_limit }}"
        - section: engine
          option: events_logger
          value: "\"{{ tripleo_container_events_logger_mechanism }}\""
        - section: engine
          option: runtime
          value:  "\"{{ tripleo_container_default_runtime }}\""
        - section: engine
          option: infra_image
          value:  "\"{{ tripleo_container_default_infra_image }}\""
        - section: network
          option: network_backend
          value:  "\"{{ tripleo_container_default_network_backend }}\""

    - name: Enable podman.socket service
      when:
        - tripleo_podman_enable_socket | bool
      systemd:
        name: podman.socket
        state: started
        enabled: true

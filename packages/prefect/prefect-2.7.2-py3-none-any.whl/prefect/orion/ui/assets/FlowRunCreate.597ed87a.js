import{d as k,i as v,D,a as b,c as p,g as t,b as x,w as d,k as B,u as F,e as T,o as S,f as i,ao as V,ap as q,aq as I,ar as N,B as y,ak as f}from"./index.9fe0d749.js";import{u as J}from"./usePageTitle.40239682.js";const $=k({__name:"FlowRunCreate",setup(M){const u=v(),a=D("deploymentId"),n=F(),w=b(u.deployments.getDeployment,[a]),e=p(()=>w.response),_=async s=>{var r,o,c;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),m=(c=(o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)!=null?c:void 0,h=!m,C=I(N,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:h,startTime:m});f(C,"success"),n.push(y.deployment(a.value))}catch(l){f("Something went wrong trying to create a flow run","error"),console.error(l)}},R=()=>{n.back()},g=p(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return J(g),(s,r)=>{const o=T("p-layout-default");return t(e)?(S(),x(o,{key:0},{header:d(()=>[i(t(V),{deployment:t(e)},null,8,["deployment"])]),default:d(()=>[i(t(q),{deployment:t(e),onSubmit:_,onCancel:R},null,8,["deployment"])]),_:1})):B("",!0)}}});export{$ as default};

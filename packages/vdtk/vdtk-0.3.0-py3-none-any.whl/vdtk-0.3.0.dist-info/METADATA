Metadata-Version: 2.1
Name: vdtk
Version: 0.3.0
Summary: Visual Description Evaluation Toolkit
Author-email: David Chan <davidchan@berkeley.edu>
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: nltk (>=3.6.5)
Requires-Dist: numpy (>=1.21.4)
Requires-Dist: matplotlib (>=3.5.0)
Requires-Dist: tqdm (>=4.62.3)
Requires-Dist: spacy (>=3.2.0)
Requires-Dist: fuzzywuzzy (>=0.18.0)
Requires-Dist: rich (>=10.14.0)
Requires-Dist: mpire (>=2.3.1)
Requires-Dist: click (>=8.0.3)
Requires-Dist: fuzzysearch (>=0.7.3)
Requires-Dist: sentence-transformers (>=2.1.0)
Requires-Dist: bert-score (>=0.3.12)
Requires-Dist: embeddings (>=0.0.8)
Requires-Dist: POT (>=0.8)
Requires-Dist: rouge-score (>=0.1.2)
Requires-Dist: jdk4py (>=17.0.3.0)
Requires-Dist: mauve-text (>=0.3.0)
Requires-Dist: ftfy (>=6.1.1)
Requires-Dist: regex (>=2022.10.31)
Provides-Extra: all
Requires-Dist: pytest ; extra == 'all'
Requires-Dist: mypy ; extra == 'all'
Requires-Dist: black ; extra == 'all'
Requires-Dist: flake8 ; extra == 'all'
Requires-Dist: flake8-black ; extra == 'all'
Requires-Dist: isort ; extra == 'all'
Requires-Dist: tensorflow (>=2.11.0) ; extra == 'all'
Requires-Dist: tf-slim (>=1.1.0) ; extra == 'all'
Requires-Dist: sentencepiece (>=0.1.97) ; extra == 'all'
Requires-Dist: pandas (>=1.5.1) ; extra == 'all'
Requires-Dist: scipy (>=1.9.3) ; extra == 'all'
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: flake8-black ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'

# vdtk: Visual Description Evaluation Tools

This tool is designed to allow for a deep investigation of diversity in visual description datasets, and to help users
understand their data at a token, n-gram, description, and dataset level.

## Installation

To use this tool, you can easily pip install with `pip install vdtk`.

## Data format

In order to prepare datasets to work with this tool, datasets must be formatted as JSON files with the following schema:

```python
# List of samples in the dataset
[
    # JSON object for each sample
    {
        "_id": "string", # A string ID for each sample. This can help keep track of samples during use.
        "split": "string", # A string corresponding to the split of the data. Default splits are "train", "validate" and "test"
        "references": [
            # List of string references
            "reference 1...",
            "reference 2...",
        ],
        "candidates": [
            # List of string candidates (Optional)
            "candidate 1...",
            "candidate 2...",
        ],
        "media_path": "string", # (Optional) Path to the image/video (for image/video based metrics, recall experiemnts, etc.)
        "metadata": {} # Any JSON object. This field is not used by the toolkit at this time.
    }
]
```

## Usage

After installation, the basic menu of commands can be accessed with `vdtk --help`. We make several experiments/tools
available for use:

| Command | Details |
| ----------- | ----------- |
| vocab-stats | Run with `vdtk vocab-stats DATASET_JSON_PATH`. Compute basic token-level vocab statistics |
| ngram-stats | Run with `vdtk ngram-stats DATASET_JSON_PATH`. Compute n-gram statistics, EVS@N and ED@N  |
| caption-stats | Run with `vdtk caption-stats DATASET_JSON_PATH`. Compute caption-level dataset statistics  |
| semantic-variance | Run with `vdtk semantic-variance DATASET_JSON_PATH`. Compute within-sample BERT embedding semantic variance |
| coreset | Run with `vdtk coreset DATASET_JSON_PATH`. Compute the caption coreset from the training split needed to solve the validation split |
| concept-overlap | Run with `vdtk concept-overlap DATASET_JSON_PATH`. Compute the concept overlap between popular feature extractors, and the dataset |
| concept-leave-one-out | Run with `vdtk concept-leave-one-out DATASET_JSON_PATH`. Compute the performance with a coreset of concept captions |
| leave-one-out | Run with `vdtk leave-one-out DATASET_JSON_PATH`. Compute leave-one-out ground truth performance on a dataset with multiple ground truths |

Additionally, several commands take multiple dataset JSONs, which can be used to compare different runs, or different datasets. Appending (:baseline) to any
of the JSON file paths will treat this run as a baseline, and compute relative values and coloring accordingly (example: `vdtk score cider-d ./baseline.json:baseline ./model.json`).

| Command | Details |
| ----------- | ----------- |
| score | Run with `vdtk score [metric] DATASET_JSON_PATH_1, DATASET_JSON_PATH_2...`. Compute BLEU/METEOR/CIDEr-D/ROUGE/BERTScore/MAUVE/etc. Guaranteed to be consistent with the COCO captioning tools (for use externally). |
| clip-recall | Run with `vdtk clip-recall DATASET_JSON_PATH_1, DATASET_JSON_PATH_2...`. Compute the MRR, and Recall@K values for candidate/reference captions based on the CLIP model. |
| content-recall | Run with `vdtk content-recall DATASET_JSON_PATH_1, DATASET_JSON_PATH_2...`. Compute Noun/Verb recall for the candidates against the references. |

For more details and options, see the `--help` command for any of the commands above. Note that some tools are relatively
compute intensive. This toolkit will make use of a GPU if available and necessary, as well as a large number of CPU cores
and RAM depending on the task.


Copyright 2021, Regents of the University of California

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

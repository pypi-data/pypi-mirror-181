Metadata-Version: 2.1
Name: nemo-text-processing
Version: 0.1.5rc0
Summary: NeMo text processing for ASR and TTS
Home-page: https://github.com/nvidia/nemo-text-processing
Download-URL: https://github.com/NVIDIA/NeMo-text-processing/releases
Author: NVIDIA
Author-email: nemo-toolkit@nvidia.com
Maintainer: NVIDIA
Maintainer-email: nemo-toolkit@nvidia.com
License: Apache2
Keywords: NeMo,nvidia,tts,asr,text processing,text normalization,inverse text normalization,language
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Environment :: Console
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cdifflib
Requires-Dist: inflect
Requires-Dist: jiwer (>2.3.0)
Requires-Dist: joblib
Requires-Dist: regex
Requires-Dist: sacremoses (>=0.0.43)
Requires-Dist: setuptools (==59.5.0)
Requires-Dist: tqdm (>=4.41.0)
Requires-Dist: wget
Requires-Dist: wrapt
Provides-Extra: all
Requires-Dist: black (==19.10b0) ; extra == 'all'
Requires-Dist: click (==8.0.2) ; extra == 'all'
Requires-Dist: isort[requirements] (<5) ; extra == 'all'
Requires-Dist: parameterized ; extra == 'all'
Requires-Dist: pytest ; extra == 'all'
Requires-Dist: pytest-runner ; extra == 'all'
Requires-Dist: ruamel.yaml ; extra == 'all'
Requires-Dist: sphinx ; extra == 'all'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'all'
Requires-Dist: wandb ; extra == 'all'
Requires-Dist: wget ; extra == 'all'
Requires-Dist: wrapt ; extra == 'all'
Provides-Extra: test
Requires-Dist: black (==19.10b0) ; extra == 'test'
Requires-Dist: click (==8.0.2) ; extra == 'test'
Requires-Dist: isort[requirements] (<5) ; extra == 'test'
Requires-Dist: parameterized ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-runner ; extra == 'test'
Requires-Dist: ruamel.yaml ; extra == 'test'
Requires-Dist: sphinx ; extra == 'test'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'test'
Requires-Dist: wandb ; extra == 'test'
Requires-Dist: wget ; extra == 'test'
Requires-Dist: wrapt ; extra == 'test'

**NeMo Text Processing**
==========================

**This repository is under development, please refer to https://github.com/NVIDIA/NeMo/tree/main/nemo_text_processing for full functionality.**

Introduction
------------

`NeMo Text Processing` is a Python package for text normalization and inverse text normalization.

This repository is under development, please refer to https://github.com/NVIDIA/NeMo/tree/main/nemo_text_processing for full functionallity.
See [documentation](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/nlp/text_normalization/wfst/wfst_text_normalization.html) for details.


Documentation
-------------

`Text Processing (text normalization and inverse text normalization) <https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/main/nlp/text_normalization/intro.html>`_

Tutorials
---------
A great way to start with NeMo is by checking `one of our tutorials <https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/starthere/tutorials.html>`_.

Getting help with NeMo
----------------------
FAQ can be found on NeMo's `Discussions board <https://github.com/NVIDIA/NeMo/discussions>`_. You are welcome to ask questions or start discussions there.


Installation
------------

Conda
~~~~~

We recommend installing NeMo in a fresh Conda environment.

.. code-block:: bash

    conda create --name nemo_tn python==3.8
    conda activate nemo_tn


Pip
~~~
Use this installation mode if you want the latest released version.

.. code-block:: bash

    pip install nemo_text_processing


Pip from source
~~~~~~~~~~~~~~~
Use this installation mode if you want the a version from particular GitHub branch (e.g main).

.. code-block:: bash

    pip install Cython
    python -m pip install git+https://github.com/NVIDIA/NeMo-text-processing.git@{BRANCH}#egg=nemo_text_processing


From source
~~~~~~~~~~~
Use this installation mode if you are contributing to NeMo.

.. code-block:: bash

    git clone https://github.com/NVIDIA/NeMo-text-processing
    cd NeMo-text-processing
    ./reinstall.sh

.. note::

    If you only want the toolkit without additional conda-based dependencies, you may replace ``reinstall.sh``
    with ``pip install -e .`` when your PWD is the root of the NeMo repository.

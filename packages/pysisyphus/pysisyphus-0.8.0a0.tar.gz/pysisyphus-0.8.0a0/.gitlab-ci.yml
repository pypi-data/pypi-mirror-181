variables:
  GIT_SUBMODULE_STRATEGY: recursive

image: nixos/nix:2.7.0-amd64

stages:
  - build
  - test
  - distribute

.before_nix: &before_nix
  - mkdir -p ~/.config/nix
  - echo "experimental-features = nix-command flakes" > ~/.config/nix/nix.conf
  - nix run .#cachix use pysisyphus

nix build:
  stage: build
  before_script: *before_nix
  script:
    - |
      nix-build -E "(import ./nix/pkgs.nix).python3.pkgs.pysisyphus.overrideAttrs (oldAttrs: {
        doCheck = false;
        doInstallCheck = false;
      })"
  after_script:
    - |
      if [ -n "$CACHIX_AUTH_TOKEN" ]; then
        realpath result | cachix push pysisyphus
      fi


nix shell:
  stage: build
  before_script: *before_nix
  script:
    - nix develop --command echo ""
  after_script:
    - |
      if [ -n "$CACHIX_AUTH_TOKEN" ]; then
        nix develop --profile pysis-profile && cachix push pysisyphus pysis-profile
      fi

nix test:
  stage: test
  tags:
    - kashyyyk
    - turbomole
    - orca
    - gamess
  before_script:
    - *before_nix
    - nix store prefetch-file http://kashyyyk:8888/nix-src/turbolinux751.tar.gz
    - nix store prefetch-file http://kashyyyk:8888/nix-src/orca_5_0_3_linux_x86-64_shared_openmpi411.tar.xz
    - nix store prefetch-file http://kashyyyk:8888/nix-src/gamess-us-2021R2P1.tar.gz
  script:
    - |
      nix-build -E "(import ./nix/pkgs.nix).python3.pkgs.pysisyphus.override {
        enableOrca = true;
        enableTurbomole = true;
        enableGamess = true;
        enableMultiwfn = true;
      }"

#container:
  #stage: distribute
  #tags:
    #- nix
  #before_script:
    #- unset NIXPKGS_ALLOW_UNFREE
  #script:
    #- nix-build ./nix/container.nix
  #after_script:
    #- cp result pysisyphus.tar.gz
    #- cp result-2 pysisyphus.sif
  #artifacts:
    #paths:
      #- pysisyphus.tar.gz
      #- pysisyphus.sif

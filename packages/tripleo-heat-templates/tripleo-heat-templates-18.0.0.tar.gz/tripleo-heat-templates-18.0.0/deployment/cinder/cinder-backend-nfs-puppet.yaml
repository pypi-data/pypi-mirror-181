heat_template_version: wallaby

description: >
  Openstack Cinder NFS backend

parameters:
  CinderEnableNfsBackend:
    default: false
    description: Whether to enable or not the NFS backend for Cinder
    type: boolean
  CinderNfsBackendName:
    type: comma_delimited_list
    default: 'tripleo_nfs'
    description: A list of Cinder NFS backend names.
  CinderNfsMultiConfig:
    type: json
    default: {}
    description: >
      Dictionary of settings when configuring multiple NFS backends. The
      hash key is the backend name, and the value is a dictionary of parameter
      values unique to that backend.
  CinderNfsAvailabilityZone:
    default: ''
    description: >
      The availability zone of the NFS Cinder backend.
      When set, it overrides the default CinderStorageAvailabilityZone.
    type: string
  CinderNfsMountOptions:
    default: 'context=system_u:object_r:container_file_t:s0'
    description: >
      Mount options for NFS mounts used by Cinder NFS backend. Effective
      when CinderEnableNfsBackend is true.
    type: string
  CinderNfsServers:
    default: ''
    description: >
      NFS servers used by Cinder NFS backend. Effective when
      CinderEnableNfsBackend is true.
    type: comma_delimited_list
  CinderNfsSharesConfig:
    type: string
    default: '/etc/cinder/shares-nfs.conf'
    description: >
      File with the list of available NFS shares for the backend. While
      configuring multiple NFS backends, the parameter values must be unique
      across all of the backends.
  CinderNfsSnapshotSupport:
    default: false
    description: >
      Whether to enable support for snapshots in the NFS driver. Effective
      when CinderEnableNfsBackend is true.
    type: boolean
  CinderNasSecureFileOperations:
    default: false
    description: >
      Controls whether security enhanced NFS file operations are enabled.
      Valid values are 'auto', 'true' or 'false'. Effective when
      CinderEnableNfsBackend is true.
    type: string
  CinderNasSecureFilePermissions:
    default: false
    description: >
      Controls whether security enhanced NFS file permissions are enabled.
      Valid values are 'auto', 'true' or 'false'. Effective when
      CinderEnableNfsBackend is true.
    type: string
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry. Use
                 parameter_merge_strategies to merge it with the defaults.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    type: json
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.

outputs:
  role_data:
    description: Role data for the Cinder NFS backend.
    value:
      service_name: cinder_backend_nfs
      config_settings:
        map_merge:
          - tripleo::profile::base::cinder::volume::cinder_enable_nfs_backend: {get_param: CinderEnableNfsBackend}
            tripleo::profile::base::cinder::volume::nfs::backend_name: {get_param: CinderNfsBackendName}
            tripleo::profile::base::cinder::volume::nfs::multi_config: {get_param: CinderNfsMultiConfig}
            tripleo::profile::base::cinder::volume::nfs::cinder_nfs_mount_options: {get_param: CinderNfsMountOptions}
            tripleo::profile::base::cinder::volume::nfs::cinder_nfs_shares_config: {get_param: CinderNfsSharesConfig}
            tripleo::profile::base::cinder::volume::nfs::cinder_nfs_servers: {get_param: CinderNfsServers}
            tripleo::profile::base::cinder::volume::nfs::cinder_nfs_snapshot_support: {get_param: CinderNfsSnapshotSupport}
            tripleo::profile::base::cinder::volume::nfs::cinder_nas_secure_file_operations: {get_param: CinderNasSecureFileOperations}
            tripleo::profile::base::cinder::volume::nfs::cinder_nas_secure_file_permissions: {get_param: CinderNasSecureFilePermissions}
          - if:
            - not: {equals : [{get_param: CinderNfsAvailabilityZone}, '']}
            - tripleo::profile::base::cinder::volume::nfs::backend_availability_zone: {get_param: CinderNfsAvailabilityZone}

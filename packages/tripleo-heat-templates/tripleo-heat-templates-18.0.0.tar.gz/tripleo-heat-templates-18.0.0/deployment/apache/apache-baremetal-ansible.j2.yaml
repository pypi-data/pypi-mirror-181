heat_template_version: wallaby

description: >
  Apache service configured with Puppet. Note this is typically included
  automatically via other services which run via Apache.

parameters:
  ApacheMaxRequestWorkers:
    default: 256
    description: Maximum number of simultaneously processed requests.
    type: number
  ApacheServerLimit:
    default: 256
    description: Maximum number of Apache processes.
    type: number
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry. Use
                 parameter_merge_strategies to merge it with the defaults.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  EnableInternalTLS:
    type: boolean
    default: false
  InternalTLSCAFile:
    default: '/etc/ipa/ca.crt'
    type: string
    description: Specifies the default CA cert to use if TLS is used for
                 services in the internal network.
  CertificateKeySize:
    type: string
    default: '2048'
    description: Specifies the private key size used when creating the
                 certificate.
  ApacheCertificateKeySize:
    type: string
    default: ''
    description: Override the private key size used when creating the
                 certificate for this service
  ApacheTimeout:
    type: number
    default: 90
    description: The timeout in seconds for Apache, which defines duration
                 Apache waits for I/O operations
  ApacheWSGI:
    type: boolean
    default: false
    description: Load the WSGI module
  ApacheServiceName:
    type: string
    default: ''
    description: Service name used for the ansible parameter namespace

conditions:
  key_size_override_set:
    not: {equals: [{get_param: ApacheCertificateKeySize}, '']}

resources:
  ApacheNetworks:
    type: OS::Heat::Value
    properties:
      value:
        # NOTE(xek) Get unique network names to create certificates.
        # We skip the tenant and management network (vip != false)
        # since we don't generate certificates for those.
{%- for role in roles %}
        {{ role.name }}:
            - ctlplane
{%- for network in networks if network.name in role.networks and network.enabled|default(true) and network.vip|default(false) %}
            - {{network.name_lower}}
{%- endfor %}
{%- endfor %}

outputs:
  role_data:
    description: Role data for the Apache role.
    value:
      service_name: apache
      config_settings: {}
      ansible_group_vars:
        map_merge:
          - map_replace:
            - tripleo_httpd_config_httpd_conf:
                TimeOut: {get_param: ApacheTimeout}
              tripleo_httpd_config_prefork_serverlimit: { get_param: ApacheServerLimit }
              tripleo_httpd_config_prefork_maxrequestworkers: { get_param: ApacheMaxRequestWorkers }
              tripleo_httpd_config_mods:
                map_merge:
                  - if:
                    - {get_param: ApacheWSGI}
                    - wsgi:
                        - so_name: 'wsgi_python3'
                  - if:
                    - {get_param: EnableInternalTLS}
                    - ssl:
                        - SSLCipherSuite: 'HIGH:MEDIUM:!aNULL:!MD5:!RC4:!3DES'
                        - SSLProtocol: 'all -SSLv2 -SSLv3 -TLSv1'
                        - SSLOptions: 'StdEnvVars'
                  - remoteip:
                      repeat:
                        template:
                          RemoteIPInternalProxy: INTERNAL_IP
                        for_each:
                          INTERNAL_IP:
                            get_param:
                              - ServiceData
                              - net_cidr_map
                              - {get_param: [ServiceNetMap, ApacheNetwork]}
            - keys:
                tripleo_httpd_config_httpd_conf:
                  str_replace:
                    params:
                      SERVICE_NAME: { get_param: ApacheServiceName }
                    template:
                      tripleo_SERVICE_NAME_httpd_config_httpd_conf
                tripleo_httpd_config_prefork_serverlimit:
                  str_replace:
                    params:
                      SERVICE_NAME: { get_param: ApacheServiceName }
                    template:
                      tripleo_SERVICE_NAME_httpd_config_prefork_serverlimit
                tripleo_httpd_config_prefork_maxrequestworkers:
                  str_replace:
                    params:
                      SERVICE_NAME: { get_param: ApacheServiceName }
                    template:
                      tripleo_SERVICE_NAME_httpd_config_prefork_maxrequestworkers
                tripleo_httpd_config_mods:
                  str_replace:
                    params:
                      SERVICE_NAME: { get_param: ApacheServiceName }
                    template:
                      tripleo_SERVICE_NAME_httpd_config_mods
              values: {}
          - if:
            - {get_param: EnableInternalTLS}
            - tripleo_httpd_vhost_ssl_ca: {get_param: InternalTLSCAFile}
              tripleo_httpd_config_tls_certs:
                map_merge:
                  repeat:
                    template:
                      httpd-NETWORK:
                        service_certificate: '/etc/pki/tls/certs/httpd/httpd-NETWORK.crt'
                        service_key: '/etc/pki/tls/private/httpd/httpd-NETWORK.key'
                    for_each:
                      NETWORK: {get_attr: [ApacheNetworks, value, { get_param: RoleName }]}
      metadata_settings:
        if:
          - {get_param: EnableInternalTLS}
          - repeat:
              template:
                - service: HTTP
                  network: $NETWORK
                  type: node
              for_each:
                $NETWORK: {get_attr: [ApacheNetworks, value, { get_param: RoleName }]}
      upgrade_tasks: []
      deploy_steps_tasks:
        - name: Certificate generation
          when:
            - step|int == 1
            - enable_internal_tls
          block:
            - name: Create dirs for certificates and keys
              file:
                path: "{% raw %}{{ item }}{% endraw %}"
                state: directory
                serole: object_r
                setype: cert_t
                seuser: system_u
              with_items:
                - '/etc/pki/tls/certs/httpd'
                - '/etc/pki/tls/private/httpd'
            - include_role:
                name: linux-system-roles.certificate
              vars:
                certificate_requests:
                  repeat:
                    template:
                      name: httpd-NETWORK
                      dns: "{% raw %}{{ fqdn_NETWORK }}{% endraw %}"
                      principal: "{% raw %}HTTP/{{ fqdn_NETWORK }}@{{ idm_realm }}{% endraw %}"
                      run_after: |
                        cp /etc/pki/tls/certs/httpd-NETWORK.crt /etc/pki/tls/certs/httpd/httpd-NETWORK.crt
                        cp /etc/pki/tls/private/httpd-NETWORK.key /etc/pki/tls/private/httpd/httpd-NETWORK.key
                        pkill -USR1 httpd
                      key_size:
                        if:
                          - key_size_override_set
                          - {get_param: ApacheCertificateKeySize}
                          - {get_param: CertificateKeySize}
                      ca: ipa
                    for_each:
                      NETWORK: {get_attr: [ApacheNetworks, value, { get_param: RoleName }]}

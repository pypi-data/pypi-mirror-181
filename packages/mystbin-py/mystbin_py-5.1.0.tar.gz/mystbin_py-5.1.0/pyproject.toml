[tool.poetry]
name = "mystbin-py"
version = "5.1.0"
description = "A small simple wrapper around the mystb.in API."
authors = ["AbstractUmbra <Umbra@AbstractUmbra.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/PythonistaGuild/mystbin.py"
repository = "https://github.com/PythonistaGuild/mystbin.py"
keywords = ["mystbin",  "paste"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = [
    "LICENSE"
]
packages = [
    { include = "mystbin" },
    { include = "mystbin/**/*.py" },
    { include = "mystbin/py.typed" }
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/PythonistaGuild/mystbin.py/issues"

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.7.4"
requests = {version = "^2.24.0", optional = true}
sphinx = { version = "^4.0.0", optional = true }
sphinxcontrib-trio = { version = "*", optional = true }
furo = { version = "*", optional = true }

[tool.poetry.dev-dependencies]
black = "*"

[tool.poetry.extras]
requests = ["requests"]
docs = ["sphinx", "sphinxcontrib-trio", "furo"]

[tool.poetry.scripts]
version = 'mystbin.__main__:show_version'

[tool.black]
line-length = 125
target-version = ["py39"]

[tool.isort]
profile = "black"
src_paths = ["mystbin"]
lines_after_imports = 2

[tool.pyright]
ignore = ["docs/conf.py"]
include = ["mystbin/**/*.py"]
useLibraryCodeForTypes = true
typeCheckingMode = "basic"
pythonVersion = "3.9"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
reportMissingImports = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportUnusedExpression = "error"
reportGeneralTypeIssues = "error"
reportDuplicateImport = "error"
reportUntypedFunctionDecorator = "error"
reportUnnecessaryTypeIgnoreComment = "warning"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

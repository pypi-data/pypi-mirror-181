# TODO: check for nested create-only properties

# TODO: Make sure to check if these properties correspond correctly to the JSON schema
# e.g. according to the GCP docs for storage.bucket.instert https://cloud.google.com/storage/docs/json_api/v1/buckets/insert
# we have the properties
#    - customPlacementConfig
#    - dataLocations
# but according to the schema, dataLocations is a nested object of customPlacementConfig

# TODO: Don't add projection

compute.zone_operations:
  get:
    - project
    - zone
    - operation

compute.region_operations:
  get:
    - project
    - region
    - operation

compute.global_operations:
  get:
    - project
    - operation

compute.instances:
  get:
    - project
    - zone
    - instance
  insert:
#    path parameters
    - project
    - zone
#    query parameters
    - requestId
    - sourceInstanceTemplate
    - sourceMachineImage
#    body
    - name
    - description
    - tags
    - machineType
    - canIpForward
    - networkInterfaces
    - disks
    - metadata
    - serviceAccounts
    - scheduling
    - labels
    - params
    - labelFingerprint
    - minCpuPlatform
    - guestAccelerators
    - deletionProtection
    - resourcePolicies
    - sourceMachineImage
    - reservationAffinity
    - hostname
    - displayDevice
    - shieldedInstanceConfig
    - shieldedInstanceIntegrityPolicy
    - sourceMachineImageEncryptionKey
    - confidentialInstanceConfig
    - fingerprint
    - privateIpv6GoogleAccess
    - advancedMachineFeatures
    - networkPerformanceConfig
    - keyRevocationActionType
  update:
#   path parameters
    - project
    - zone
    - instance
#   query parameters
    - requestId
    - mostDisruptiveAllowedAction
    - minimalAction
#   body
    - name
    - description
    - tags
    - machineType
    - canIpForward
    - disks
    - metadata
    - serviceAccounts
    - scheduling
    - labels
    - params
    - labelFingerprint
    - minCpuPlatform
    - guestAccelerators
    - deletionProtection
    - resourcePolicies
    - sourceMachineImage
    - reservationAffinity
    - hostname
    - displayDevice
    - shieldedInstanceConfig
    - shieldedInstanceIntegrityPolicy
    - sourceMachineImageEncryptionKey
    - confidentialInstanceConfig
    - fingerprint
    - privateIpv6GoogleAccess
    - advancedMachineFeatures
    - networkPerformanceConfig
    - keyRevocationActionType
  delete:
#   path parameters
    - project
    - zone
    - resourceId
#   query parameters
    - requestId
#  resource_id:
#    - name
#    - resourceId
  exclude_paths:
    - project
    - sourceInstanceTemplate
    - requestId
    - mostDisruptiveAllowedAction
    - minimalAction
    - fingerprint
    - labelFingerprint
    - networkInterfaces[].fingerprint
    - networkInterfaces[].networkIp
    - networkInterfaces[].accessConfigs[].natIp
    - tags.fingerprint
    - metadata.fingerprint
  exclude_properties_from_transformation:
    - labels
    - tags
  nested_non_updatable_properties:
    - disks[].initializeParams

compute.accelerator_types:
  get:
    - project
    - zone
    - acceleratorType
  fields_enum_type:
    - kind
    - id
    - creationTimestamp
    - name
    - deprecated
    - description
    - zone
    - selfLink
    - maximumCardsPerInstance

compute.machine_types:
  get:
    - project
    - zone
    - machineType
  fields_enum_type:
    - kind
    - id
    - creationTimestamp
    - name
    - deprecated
    - description
    - guestCpus
    - memoryMb
    - imageSpaceGb
    - maximumPersistentDisks
    - maximumPersistentDisksSizeGb
    - zone
    - selfLink
    - isSharedCpu
    - accelerators

compute.zones:
  get:
    - project
    - zone
  fields_enum_type:
    - kind
    - id
    - creationTimestamp
    - name
    - deprecated
    - description
    - status
    - region
    - selfLink
    - availableCpuPlatforms
    - supportsPzs

compute.disk_types:
  get:
    - project
    - zone
    - diskType
  fields_enum_type:
    - creationTimestamp
    - defaultDiskSizeGb
    - deprecated
    - description
    - id
    - kind
    - name
    - region
    - selfLink
    - validDiskSize
    - zone

compute.disks:
  get:
    - project
    - zone
    - disk
  insert:
#    path parameters
    - project
    - zone
#    query parameters
    - requestId
    - sourceImage
#    body
    - name
    - description
    - sizeGb
    - sourceSnapshot
    - sourceStorageObject
    - options
    - sourceImage
    - type
    - licenses
    - guestOsFeatures
    - diskEncryptionKey
    - sourceImageEncryptionKey
    - sourceSnapshotEncryptionKey
    - labels
    - labelFingerprint
    - replicaZones
    - licenseCodes
    - physicalBlockSizeBytes
    - resourcePolicies
    - sourceDisk
    - provisionedIops
    - locationHint
    - architecture
    - params
  delete:
#   path parameters
    - project
    - zone
    - disk
#   query parameters
    - requestId
  exclude_paths:
    - label_fingerprint
  exclude_properties_from_transformation:
    - labels
    - tags
    - resourceManagerTags

compute.machine_images:
  get:
    - project
    - machineImage
  insert:
#    path parameters
    - project
#    query parameters
    - requestId
    - sourceInstance
#    body
    - storageLocations
    - guestFlush
    - sourceInstance
    - description
    - name
    - savedDisks
    - machineImageEncryptionKey
    - sourceDiskEncryptionKeys
  delete:
#   path parameters
    - project
    - machineImage
#   query parameters
    - requestId

compute.networks:
  get:
    - project
    - network
  insert:
#    path parameters
    - project
#    query parameters
    - requestId
#    body
    - name
    - autoCreateSubnetworks
    - description
    - enableUlaInternalIpv6
    - internalIpv6Range
    - IPv4Range
    - mtu
    - networkFirewallPolicyEnforcementOrder
    - routingConfig
    - peerings
  update:
    - name
    - autoCreateSubnetworks
    - description
    - enableUlaInternalIpv6
    - internalIpv6Range
    - IPv4Range
    - mtu
    - networkFirewallPolicyEnforcementOrder
    - routingConfig
    - peerings
  delete:
#   path parameters
    - project
    - network
#   query parameters
    - requestId

compute.node_templates:
  get:
    - project
    - region
    - nodeTemplate
  insert:
#    path parameters
    - project
    - region
#    query parameters
    - requestId
#    body
    - name
    - description
    - disks
    - cpuOvercommitType
    - serverBinding
    - nodeAffinityLabels
    - nodeTypeFlexibility
    - accelerators
    - nodeType
  delete:
#   path parameters
    - project
    - region
    - nodeTemplate
#   query parameters
    - requestId

compute.reservations:
  get:
#   path parameters
    - project
    - zone
    - reservation
  insert:
#   path parameters
    - project
    - zone
#    query parameters
    - requestId
#    body
    - name
    - description
    - shareSettings
    - specificReservation
    - specificReservationRequired
  update:
#   path parameters
    - project
    - zone
    - reservation
#    query parameters
    - requestId
    - updateMask
    - paths
#    body
    - name
    - description
    - shareSettings
    - specificReservation
    - specificReservationRequired
  delete:
#   path parameters
    - project
    - zone
    - reservation
#   query parameters
    - requestId

storage.buckets:
  get:
    - bucket
#    - ifMetagenerationMatch
#    - ifMetagenerationNotMatch
  insert:
#    - project
#    - predefinedAcl
#    - predefinedDefaultObjectAcl
    - name
    - acl
    - billing
    - cors
    - customPlacementConfig
    - defaultEventBasedHold
    - defaultObjectAcl
    - encryption
    - iamConfiguration
    - labels
    - lifecycle
    - location
    - logging
    - retentionPolicy
    - rpo
    - storageClass
    - versioning
    - website
  update:
    - bucket # TODO: this is equal to name from insert so perhaps we should annotate equivalent properties with different names from the different methods
#    - ifMetagenerationMatch
#    - ifMetagenerationNotMatch
#    - predefinedAcl
    - acl
    - billing
    - cors
    - defaultEventBasedHold
    - defaultObjectAcl
    - encryption
    - iamConfiguration
    - labels
    - lifecycle
    - logging
    - retentionPolicy
    - rpo
    - storageClass
    - versioning
    - website
  delete:
    - bucket
#    - ifMetagenerationMatch
#    - ifMetagenerationNotMatch
#  equivalent_properties:
#    - [metageneration, ifMetagenerationMatch, ifMetagenerationNotMatch]
#    - [bucket, name]
#  resource_id:
#      - name
#      - bucket
#    metageneration:
#      - ifMetagenerationMatch
#      - ifMetagenerationNotMatch

compute.resource_policies:
  get:
    - project
    - region
    - resourcePolicy
  insert:
#    path parameters
    - project
    - region
#    query parameters
    - requestId
#    body
    - name
    - description
    - snapshotSchedulePolicy
    - groupPlacementPolicy
    - instanceSchedulePolicy
  delete:
#   path parameters
    - project
    - region
    - resourcePolicy
#   query parameters
    - requestId
  exclude_properties_from_transformation:
    - labels

cloudkms.projects.locations.key_rings:
  resource_id:
    - name

cloudkms.projects.locations:
  fields_enum_type:
    - locationId
    - displayName
    - labels
    - metadata
  resource_id:
    - name

cloudkms.projects.locations.key_rings.crypto_keys:
  # Temporary until implement create
  fields_enum_type:
    - primary
    - purpose
    - nextRotationTime
    - versionTemplate
    - labels
    - importOnly
    - destroyScheduledDuration
    - cryptoKeyBackend
    - rotationPeriod
  resource_id:
    - name
  exclude_properties_from_transformation:
    - labels

cloudkms.projects.locations.key_rings.crypto_keys.crypto_key_versions:
  # Temporary until implement create
  fields_enum_type:
    - state
    - protectionLevel
    - algorithm
    - attestation
    - createTime
    - generateTime
    - destroyTime
    - destroyEventTime
    - importJob
    - importTime
    - importFailureReason
    - externalProtectionLevelOptions
    - reimportEligible
  resource_id:
    - name

compute.images:
  get:
    - project
    - image
  insert:
#    path parameters
    - project
#    query parameters
    - requestId
#    body
    - name
    - description
    - sourceType
    - rawDisk
    - deprecated
    - archiveSizeBytes
    - diskSizeGb
    - sourceDisk
    - licenses
    - imageEncryptionKey
    - sourceDiskEncryptionKey
    - labels
    - labelFingerprint
    - guestOsFeatures
    - licenseCodes
    - sourceImage
    - sourceImageEncryptionKey
    - sourceSnapshot
    - sourceSnapshotEncryptionKey
    - storageLocations
    - shieldedInstanceInitialState
    - architecture
  delete:
#   path parameters
    - project
    - image
#   query parameters
    - requestId
  exclude_properties_from_transformation:
    - labels

compute.subnetworks:
  get:
    - project
    - region
    - subnetwork
  insert:
#    path parameters
    - project
    - region
#    query parameters
    - requestId
#    body
    - name
    - description
    - network
    - ipCidrRange
    - region
    - privateIpGoogleAccess
    - secondaryIpRanges
    - fingerprint
    - enableFlowLogs
    - privateIpv6GoogleAccess
    - externalIpv6Prefix
    - purpose
    - role
    - logConfig
    - stackType
    - ipv6AccessType

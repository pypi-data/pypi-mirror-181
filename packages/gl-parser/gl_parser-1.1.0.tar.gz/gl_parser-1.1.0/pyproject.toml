[tool.poetry]
name = "gl-parser"
version = "1.1.0"
homepage = "https://github.com/luiscberrocal/gl-parser"
description = "General ledger Excel parser and converter.."
authors = ["Luis C. Berrocal <luis.berrocal.1942@gmail.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "gl_parser" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
# click = "8.0.1"

# black  = { version = "^21.5b2", optional = true}
# isort  = { version = "^5.8.0", optional = true}
# flake8  = { version = "^3.9.2", optional = true}
# flake8-docstrings = { version = "^1.6.0", optional = true }
# mypy = {version = "^0.900", optional = true}
# pytest  = { version = "^6.2.4", optional = true}
# pytest-cov  = { version = "^2.12.0", optional = true}
# tox  = { version = "^3.20.1", optional = true}
# virtualenv  = { version = "^20.2.2", optional = true}
# pip  = { version = "^20.3.1", optional = true}
# mkdocs  = { version = "^1.1.2", optional = true}
# mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
# mkdocs-material  = { version = "^6.1.7", optional = true}
# mkdocstrings  = { version = "^0.15.2", optional = true}
# mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
# twine  = { version = "^3.3.0", optional = true}
# mkdocs-autorefs = {version = "^0.2.1", optional = true}
# pre-commit = {version = "^2.12.0", optional = true}
# toml = {version = "^0.10.2", optional = true}
# bump2version = {version = "^1.0.1", optional = true}

# [tool.poetry.extras]
# test = [
#     "pytest",
#     "black",
#     "isort",
#     "mypy",
#     "flake8",
#     "flake8-docstrings",
#     "pytest-cov"
#     ]
#
# dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]
#
# doc = [
#     "mkdocs",
#     "mkdocs-include-markdown-plugin",
#     "mkdocs-material",
#     "mkdocstrings",
#     "mkdocs-material-extension",
#     "mkdocs-autorefs"
#     ]
click = "^8.1.3"
openpyxl = "^3.0.10"
pydantic = "^1.10.2"
toml = "^0.10.2"
tqdm = "^4.64.1"

[tool.poetry.scripts]
gl-parser = 'gl_parser.cli.cli_commands:main'

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
black = "^22.10.0"
isort = "^5.10.1"
mypy = "^0.991"
flake8 = "^6.0.0"
flake8-docstrings = "^1.6.0"
factory-boy = "^3.2.1"
pytz = "^2022.6"
twine = "^4.0.2"
types-toml = "^0.10.8.1"


[tool.poetry.group.doc.dependencies]
mkdocs = "^1.4.2"
mkdocs-include-markdown-plugin = "^4.0.0"
mkdocs-material-extensions = "^1.1.1"
mkdocs-material = "^8.5.11"
mkdocstrings = "^0.19.0"
mkdocs-autorefs = "^0.4.1"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

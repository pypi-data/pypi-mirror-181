[tool.poetry]
name = "mkdirpy"
version = "0.1.0"
description = "Like `mkdir`, but with `__init__.py` inside"
authors = ["Olzhas Arystanov <o.arystanov@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://github.com/olzhasar/mkdirpy"
repository = "https://github.com/olzhasar/mkdirpy"
keywords = ["mkdir", "mkdirpy", "package", "__init__.py"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
]
include = [
    "LICENSE",
]

[tool.poetry.scripts]
mkdirpy = "mkdirpy:run"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
black = "^22.12.0"
isort = "^5.11.3"
mypy = "^0.991"
codespell = "^2.2.2"
flake8 = "^6.0.0"
flake8-bugbear = "^22.12.6"
pre-commit = "^2.20.0"
pytest = "^7.2.0"
pytest-watcher = "^0.2.6"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = 'black'
line_length = 89
skip = ['.venv']

[tool.black]
line-length = 89
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
    (
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    )
'''

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_return_any = false
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_any_unimported = false
disallow_any_explicit = true
disallow_any_generics = true
show_error_codes = true
check_untyped_defs = true
disable_error_code = ["misc"]
exclude = ".venv"

[[tool.mypy.overrides]]
module = [
  "tests.*",
]
disallow_untyped_defs = false
disallow_any_generics = false

[tool.codespell]
skip = 'htmlcov,.git,.mypy_cache,poetry.lock,.venv,env,data'

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.coverage.report]
sort = "Cover"
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

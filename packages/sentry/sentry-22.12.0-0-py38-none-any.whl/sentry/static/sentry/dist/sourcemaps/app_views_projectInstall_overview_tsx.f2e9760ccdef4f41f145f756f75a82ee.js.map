{"version":3,"file":"chunks/app_views_projectInstall_overview_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"g/BA2BA,MAAMA,UAA+BC,EAAAA,EAA6B,iEAU9CC,IAChB,MAAM,MAACC,EAAK,UAAEC,GAAaC,KAAKC,MAAMC,OAEhCC,EAAaH,KAAKI,iBACnB,kBAAiBN,cAAkBC,qBAA6BF,MACjEQ,EAAAA,EAAAA,GAAe,GAAER,KAAa,IACzBG,KAAKC,MACRK,UAAW,IAGjBC,EAAAA,eAAAA,KAAoBJ,EAAW,KAChC,yBAEW,KACVH,KAAKQ,UAASC,IAAS,CAAEC,SAAUD,EAAMC,WAAU,GACpD,CAxBGN,uBACF,OAAOO,OAAOC,SAASC,KAAKC,QAAQ,mBAAqB,CAC3D,CAEAC,eACE,MAAM,MAACjB,EAAK,UAAEC,GAAaC,KAAKC,MAAMC,OACtC,MAAO,CAAC,CAAC,UAAY,aAAYJ,KAASC,WAC5C,CAmBAiB,SACE,MAAM,MAAClB,EAAK,UAAEC,GAAaC,KAAKC,MAAMC,QAChC,QAACe,EAAO,QAAEP,GAAWV,KAAKS,MAE1BS,EAAmB,kBAAiBpB,oBAE1C,OACE,0BACE,QAAC,IAAmB,CAACqB,OAAOC,EAAAA,EAAAA,GAAE,mBAAoBC,YAAatB,KAC/D,QAAC,IAAkB,CAACoB,OAAOC,EAAAA,EAAAA,GAAE,iCAC7B,QAAC,IAAS,WACPA,EAAAA,EAAAA,GACC,qFAIHV,GACC,QAACY,EAAO,YACN,QAACC,EAAY,YACX,4BAASH,EAAAA,EAAAA,GAAE,UACX,QAACI,EAAQ,UAAEP,IAAU,GAAGQ,IAAIC,aAG9B,QAAC,KAAM,CAACC,SAAS,UAAUC,GAAIV,EAAgB,UAC5CE,EAAAA,EAAAA,GAAE,8CAIP,uBACE,4BACGS,EAAAA,EAAAA,IAAI,iDAAkD,CACrDC,MACE,QAAC,KAAM,CACLH,SAAS,OACTI,QAAS/B,KAAKgC,UACd,cAAYZ,EAAAA,EAAAA,GAAE,oBAGlB,UAKR,QAAC,IAAc,CACba,YAAajC,KAAKkC,eAClBC,WAAW,EACXC,aAAcpC,KAAKC,MAAMmC,gBAE3B,uBACGP,EAAAA,EAAAA,IACE,6GAED,CAACQ,SAAS,QAAC,IAAY,CAACxB,KAAK,iCAKvC,EApFIlB,EAAsB,qCAuF5B,MAAM6B,GAAW,QAAOc,IACtB,mBAAUA,EAAC,UACT,QAAC,IAAc,UAAEA,EAAEC,cAEtB,oBAJgB,CAIf,0CAIIjB,GAAU,OAAO,MAAK,oBAAZ,CAAa,kBACVkB,EAAAA,EAAAA,GAAM,GAAE,KAGrBjB,GAAe,OAAO,MAAK,oBAAZ,CAAa,2DAGzBiB,EAAAA,EAAAA,GAAM,KAAI,KAAIA,EAAAA,EAAAA,GAAM,GAAE,sCAEZA,EAAAA,EAAAA,GAAM,GAAE,KAG3B,GAAeC,EAAAA,EAAAA,GAAiB9C,E","sources":["webpack:///./app/views/projectInstall/overview.tsx"],"sourcesContent":["import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport AutoSelectText from 'sentry/components/autoSelectText';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PlatformPicker from 'sentry/components/platformPicker';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n} & AsyncComponent['props'];\n\ntype State = {\n  keyList: Array<ProjectKey> | null;\n} & AsyncComponent['state'];\n\nclass ProjectInstallOverview extends AsyncComponent<Props, State> {\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  redirectToDocs = (platform: PlatformKey | null) => {\n    const {orgId, projectId} = this.props.params;\n\n    const installUrl = this.isGettingStarted\n      ? `/organizations/${orgId}/projects/${projectId}/getting-started/${platform}/`\n      : recreateRoute(`${platform}/`, {\n          ...this.props,\n          stepBack: -1,\n        });\n\n    browserHistory.push(installUrl);\n  };\n\n  toggleDsn = () => {\n    this.setState(state => ({showDsn: !state.showDsn}));\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    const {keyList, showDsn} = this.state;\n\n    const issueStreamLink = `/organizations/${orgId}/issues/#welcome`;\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Instrumentation')} projectSlug={projectId} />\n        <SettingsPageHeader title={t('Configure your application')} />\n        <TextBlock>\n          {t(\n            'Get started by selecting the platform or language that powers your application.'\n          )}\n        </TextBlock>\n\n        {showDsn ? (\n          <DsnInfo>\n            <DsnContainer>\n              <strong>{t('DSN')}</strong>\n              <DsnValue>{keyList?.[0].dsn.public}</DsnValue>\n            </DsnContainer>\n\n            <Button priority=\"primary\" to={issueStreamLink}>\n              {t('Got it! Take me to the Issue Stream.')}\n            </Button>\n          </DsnInfo>\n        ) : (\n          <p>\n            <small>\n              {tct('Already have things setup? [link:Get your DSN]', {\n                link: (\n                  <Button\n                    priority=\"link\"\n                    onClick={this.toggleDsn}\n                    aria-label={t('Get your DSN')}\n                  />\n                ),\n              })}\n              .\n            </small>\n          </p>\n        )}\n        <PlatformPicker\n          setPlatform={this.redirectToDocs}\n          showOther={false}\n          organization={this.props.organization}\n        />\n        <p>\n          {tct(\n            `For a complete list of client integrations, please see\n             [docLink:our in-depth documentation].`,\n            {docLink: <ExternalLink href=\"https://docs.sentry.io\" />}\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst DsnValue = styled(p => (\n  <code {...p}>\n    <AutoSelectText>{p.children}</AutoSelectText>\n  </code>\n))`\n  overflow: hidden;\n`;\n\nconst DsnInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst DsnContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1.5)} ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ProjectInstallOverview);\n"],"names":["ProjectInstallOverview","AsyncComponent","platform","orgId","projectId","this","props","params","installUrl","isGettingStarted","recreateRoute","stepBack","browserHistory","setState","state","showDsn","window","location","href","indexOf","getEndpoints","render","keyList","issueStreamLink","title","t","projectSlug","DsnInfo","DsnContainer","DsnValue","dsn","public","priority","to","tct","link","onClick","toggleDsn","setPlatform","redirectToDocs","showOther","organization","docLink","p","children","space","withOrganization"],"sourceRoot":""}
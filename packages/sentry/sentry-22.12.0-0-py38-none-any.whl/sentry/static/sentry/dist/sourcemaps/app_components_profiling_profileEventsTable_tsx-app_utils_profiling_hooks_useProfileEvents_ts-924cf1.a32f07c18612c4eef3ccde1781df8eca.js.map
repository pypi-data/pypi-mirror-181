{"version":3,"file":"chunks/app_components_profiling_profileEventsTable_tsx-app_utils_profiling_hooks_useProfileEvents_ts-924cf1.xxxxxxxxxxxxxxxxxxxx.js","mappings":"slBAqBA,SAASA,EAAS,GAQR,IARQ,MAChBC,EAAK,MACLC,EAAK,QACLC,EAAO,iBACPC,EAAgB,QAChBC,EAAO,UACPC,EAAS,QACTC,GACM,EACN,MAAMC,EAASJ,IAEf,IAAKI,IAAWL,EACd,OAAO,QAACM,EAAa,CAACR,MAAOA,EAAM,SAAEC,IAGvC,MAAMQ,EAASJ,GACb,QAACK,EAAe,CAACC,KAAK,KAAKN,UAAyB,SAAdA,EAAuB,OAAS,OAD7C,KAY3B,OACE,QAACO,EAAU,CAACZ,MAAOA,EAAOa,GAAIN,EAAQH,QAT0BU,IAC5DR,IACFQ,EAAEC,iBACFC,EAAAA,eAAAA,QAAuBT,IAEzBH,IAAUU,EAAE,EAIiD,UAC1Db,EAAK,IAAGQ,IAGf,CAhCSV,EAAQ,uBAqCjB,MAAMa,GAAa,QAAQK,IACzB,MAAMC,EAAeC,IAAKF,EAAO,CAAC,QAAS,QAC3C,OAAO,QAAC,IAAI,IAAKC,GAAgB,GAClC,qBAHkB,CAGjB,gHAaGE,GAAwBA,EAAEpB,MAAS,eAAcoB,EAAEpB,SAAW,IAAG,KAGhEQ,GAAgB,OAAO,MAAK,qBAAZ,CAAa,gDAI9BY,GAA4BA,EAAEpB,MAAS,eAAcoB,EAAEpB,SAAW,IAAG,KAGpEU,GAAkB,OAAOW,EAAAA,GAAS,qBAAhB,CAAiB,6CAIzC,G,wOC3DA,SAASC,EAAoBL,GAC3B,MAAMM,EALR,SAAuBN,GACrB,OAAOO,EAAAA,EAAAA,IAASP,EAA2BQ,YAC7C,CAG4BC,CAAcT,GACpCA,EAAMQ,YAAc,IAV1B,SAAwBR,GACtB,OAAOO,EAAAA,EAAAA,IAASP,EAA4BU,aAC9C,CASMC,CAAeX,GACfA,EAAMU,aAAe,IACrBV,EAAMY,QAEV,OACE,QAAC,IAAQ,CACPC,aAAcb,EAAMa,aACpBD,QAASN,EACTQ,YAAa,GAGnB,CAdST,EAAmB,kCAgB5B,S,o2BCNO,SAASU,EACdf,GAEA,MAAMgB,GAAWC,EAAAA,EAAAA,KACXC,GAAeC,EAAAA,EAAAA,MACf,SAACC,IAAYC,EAAAA,EAAAA,KAEbnC,GAAmBoC,EAAAA,EAAAA,cACtBC,GAAc,KACb,IAAIC,EAAM,OAIV,OAHID,IAAWvB,EAAMyB,KAAKC,KAAO1B,EAAMyB,KAAKE,QAAUH,IACpDA,EAAM,OAED,IACFR,EACHY,MAAO,IACFZ,EAASY,MACZH,KAAc,QAARD,EAAgBD,EAAU,IAAGA,KAEtC,GAEH,CAACP,EAAUhB,EAAMyB,OAGnB,OACE,QAAC,KAAY,CACXI,UAAW7B,EAAM6B,UACjBC,MAAO9B,EAAM8B,MACbC,KAAM/B,EAAM+B,MAAMA,MAAQ,GAC1BC,YAAahC,EAAMiC,QAAQC,KAAIC,GA2VrC,SAA6CA,GAC3C,OAAIC,EAAcD,GACTC,EAAcD,GAGhB,CACLT,IAAKS,EACLE,KAAMF,EACNG,MAAOC,EAAAA,GAEX,CArW8CC,CAAkBL,KAC1DM,aAAc,CAACzC,EAAMyB,MACrBiB,KAAM,CACJC,gBAAgBC,EAAAA,EAAAA,GAAmB,CACjCC,YAAa7C,EAAMyB,KACnBvC,mBACA4D,qBAiW2Cb,EAjWCjC,EAAMiC,QAkWnD,IAAIc,IAAId,EAAQe,QAAOC,GAAOC,EAAqBC,IAAIF,OAjWtDG,gBAAiBpD,EAAMoD,kBAEzBC,gBAiBNC,EAhBQtD,EAAM+B,MAAMuB,MAAS,CAACC,OAAQ,CAAC,EAAGC,MAAO,CAAC,GAiBlDC,EAhBQ,CAACzC,WAAUE,eAAcE,YAkBjC,SACEG,EACAmC,EACAC,EACAC,GAEA,OACE,QAACC,EAAiB,CAChBP,KAAMA,EACNG,QAASA,EACTlC,OAAQA,EACRmC,QAASA,EACTC,SAAUA,EACVC,YAAaA,GAGnB,IA/BI5C,SAAUA,IAWhB,IACEsC,EACAG,EA4UmDxB,CAtVrD,CA0CA,SAAS4B,EAAuC7D,GAC9C,MAAM0B,EAAM1B,EAAMuB,OAAOG,IACnBoC,EAAQ9D,EAAM0D,QAAQhC,GACtBqC,EAAa/D,EAAMsD,KAAKC,OAAO7B,GAC/BsC,EAAahE,EAAMsD,KAAKE,MAAM9B,GAEpC,GAAY,OAARA,EAAc,CAChB,MAAMuC,EAAUC,EAAiBlE,EAAMyD,QAASzD,EAAM0D,SAEtD,KAAKnD,EAAAA,EAAAA,IAAQ0D,GAEX,OAAO,QAAC,KAAS,WAAEE,EAAAA,EAAAA,IAAgBL,KAGrC,MAAMM,GAAmBC,EAAAA,EAAAA,IAA+B,CACtDC,QAAStE,EAAMyD,QAAQvC,aAAaqD,KACpCC,YAAaP,EAAQM,KACrBE,UAAWX,IAGb,OACE,QAAC,KAAS,WACR,QAAC,IAAI,CAAClE,GAAIwE,EAAiB,UAAED,EAAAA,EAAAA,IAAgBL,MAGnD,CAEA,GAAY,eAARpC,GAAgC,YAARA,GAA6B,iBAARA,EAAwB,CACvE,MAAMuC,EAAUC,EAAiBlE,EAAMyD,QAASzD,EAAM0D,SAEtD,OAAKnD,EAAAA,EAAAA,IAAQ0D,IAMX,QAAC,KAAS,WACR,QAAC,IAAY,CAACA,QAASA,EAASS,WAAY,QALvC,QAAC,KAAS,WAAEC,EAAAA,EAAAA,GAAE,QAQzB,CAEA,GAAY,gBAARjD,EAAuB,CACzB,MAAMuC,EAAUC,EAAiBlE,EAAMyD,QAASzD,EAAM0D,SAEtD,IAAInD,EAAAA,EAAAA,IAAQ0D,GACV,OACE,QAAC,KAAS,WACR,QAAC,IAAI,CACHrE,IAAIgF,EAAAA,EAAAA,IAAqC,CACvChD,MAAO5B,EAAMyD,QAAQzC,SAASY,MAC9B0C,QAAStE,EAAMyD,QAAQvC,aAAaqD,KACpCC,YAAaP,EAAQM,KACrBM,YAAaf,IACZ,SAEFA,KAOX,CAEA,GAAY,YAARpC,GACEoC,EACF,OACE,QAAC,KAAgB,WACf,QAAC,IAAO,CAACgB,QAAShB,EAAOiB,QAAQ,EAAOC,mBAAiB,EAACC,UAAQ,MAM1E,OAAQlB,GACN,IAAK,UACL,IAAK,SACH,OACE,QAAC,KAAe,WACd,QAAC,IAAK,CAACD,MAAOA,MAGpB,IAAK,WACH,MAAMoB,EAAalB,EAAamB,EAAAA,GAAenB,IAAyB,EAAI,EAC5E,OACE,QAAC,KAAe,WACd,QAAC,IAAmB,CAACtD,aAAcoD,EAAQoB,EAAYrE,cAAY,MAGzE,IAAK,OACH,OACE,QAAC,KAAS,WACR,QAAC,IAAQ,CAACuE,KAAMtB,EAAOuB,MAAI,EAACzE,SAAO,EAAC0E,UAAQ,MAGlD,QACE,OAAO,QAAC,KAAS,UAAExB,IAEzB,CAEA,SAASI,EACPT,EACAC,GAEA,IAAIO,EAEJ,IAAI1D,EAAAA,EAAAA,IAAQmD,EAAQ,eAAgB,CAClC,MAAM6B,EAAY7B,EAAQ,cAAc8B,WACxCvB,EAAUR,EAAQrC,SAASqE,MAAKC,GAAQA,EAAKC,KAAOJ,GACtD,MAAO,IAAIhF,EAAAA,EAAAA,IAASmD,EAAgBO,SAAU,CAC5C,MAAMO,EAAed,EAAgBO,QACrCA,EAAUR,EAAQrC,SAASqE,MAAKC,GAAQA,EAAKnB,OAASC,GACxD,MAAO,IAAIjE,EAAAA,EAAAA,IAAQmD,EAAQ,iBAAkB,CAC3C,MAAMc,EAAcd,EAAQ,gBAC5BO,EAAUR,EAAQrC,SAASqE,MAAKC,GAAQA,EAAKnB,OAASC,GACxD,CAEA,OAAOP,GAAW,IACpB,CA/MgBlD,EAAkB,iCAiNlC,MA8BMmC,EAAuB,IAAIH,IAAe,CAC9C,mBACA,QACA,QACA,QACA,YAIIX,EAA+D,CACnEuD,GAAI,CACFjE,IAAK,KACLW,MAAMsC,EAAAA,EAAAA,GAAE,cACRrC,MAAOC,EAAAA,IAETqD,MAAO,CACLlE,IAAK,QACLW,MAAMsC,EAAAA,EAAAA,GAAE,YACRrC,MAAOC,EAAAA,IAET,oBAAqB,CACnBb,IAAK,oBACLW,MAAMsC,EAAAA,EAAAA,GAAE,kBACRrC,MAAOC,EAAAA,IAETsC,YAAa,CACXnD,IAAK,cACLW,MAAMsC,EAAAA,EAAAA,GAAE,eACRrC,MAAOC,EAAAA,IAET,mBAAoB,CAClBb,IAAK,mBACLW,MAAMsC,EAAAA,EAAAA,GAAE,YACRrC,MAAOC,EAAAA,IAET0B,QAAS,CACPvC,IAAK,UACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,IAET,aAAc,CACZb,IAAK,aACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,IAET,eAAgB,CACdb,IAAK,eACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,IAETsD,YAAa,CACXnE,IAAK,cACLW,MAAMsC,EAAAA,EAAAA,GAAE,eACRrC,MAAOC,EAAAA,IAETuD,UAAW,CACTpE,IAAK,YACLW,MAAMsC,EAAAA,EAAAA,GAAE,aACRrC,MAAOC,EAAAA,IAETwD,QAAS,CACPrE,IAAK,UACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,IAET,gBAAiB,CACfb,IAAK,gBACLW,MAAMsC,EAAAA,EAAAA,GAAE,YACRrC,MAAOC,EAAAA,IAET,cAAe,CACbb,IAAK,cACLW,MAAMsC,EAAAA,EAAAA,GAAE,uBACRrC,MAAOC,EAAAA,IAET,wBAAyB,CACvBb,IAAK,wBACLW,MAAMsC,EAAAA,EAAAA,GAAE,yBACRrC,MAAOC,EAAAA,IAET,gBAAiB,CACfb,IAAK,gBACLW,MAAMsC,EAAAA,EAAAA,GAAE,iBACRrC,MAAOC,EAAAA,IAET,sBAAuB,CACrBb,IAAK,sBACLW,MAAMsC,EAAAA,EAAAA,GAAE,uBACRrC,MAAOC,EAAAA,IAET,eAAgB,CACdb,IAAK,eACLW,MAAMsC,EAAAA,EAAAA,GAAE,gBACRrC,MAAOC,EAAAA,IAET,WAAY,CACVb,IAAK,WACLW,MAAMsC,EAAAA,EAAAA,GAAE,YACRrC,MAAOC,EAAAA,IAET,UAAW,CACTb,IAAK,UACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,IAET,aAAc,CACZb,IAAK,aACLW,MAAMsC,EAAAA,EAAAA,GAAE,cACRrC,MAAOC,EAAAA,IAET,cAAe,CACbb,IAAK,cACLW,MAAMsC,EAAAA,EAAAA,GAAE,aACRrC,MAAOC,EAAAA,IAET,QAAS,CACPb,IAAK,QACLW,MAAMsC,EAAAA,EAAAA,GAAE,OACRrC,MAAOC,EAAAA,IAET,QAAS,CACPb,IAAK,QACLW,MAAMsC,EAAAA,EAAAA,GAAE,SACRrC,MAAOC,EAAAA,IAET,QAAS,CACPb,IAAK,QACLW,MAAMsC,EAAAA,EAAAA,GAAE,SACRrC,MAAOC,EAAAA,IAET,UAAW,CACTb,IAAK,UACLW,MAAMsC,EAAAA,EAAAA,GAAE,WACRrC,MAAOC,EAAAA,I,icCjXJ,SAASyD,EAAgB,GAOD,IAPoB,OACjDzC,EAAM,MACN0C,EAAK,SACLC,EAAQ,MACRtE,EAAK,KACLH,EAAI,OACJ0E,GAC2B,EAC3B,MAAMC,GAAMC,EAAAA,EAAAA,KACNnF,GAAeC,EAAAA,EAAAA,MACf,UAACmF,IAAaC,EAAAA,EAAAA,KAEdC,EAAQ,kBAAiBtF,EAAaqD,eACtCkC,EAAkB,CACtB7E,MAAO,CACL8E,QAAS,WACTR,WACAjC,QAASqC,EAAUlF,SACnByE,YAAaS,EAAUK,iBACpBC,EAAAA,EAAAA,IAAwBN,EAAUO,UACrC1E,MAAOoB,EACPuD,SAAUb,EACVrE,QACAH,KAAqB,QAAfA,EAAKE,MAAkBF,EAAKC,IAAO,IAAGD,EAAKC,MACjDyE,WAIEY,EAAW,CAACP,EAAMC,GASxB,OAAOO,EAAAA,EAAAA,UAA2E,CAChFD,WACAE,QATc,IACdb,EAAIc,eAAeV,EAAM,CACvBW,OAAQ,MACRC,gBAAgB,EAChBxF,MAAO6E,EAAgB7E,QAMzByF,sBAAsB,EACtBC,OAAO,GAEX,CAEO,SAASC,EAAYzF,GAC1B,KAAKvB,EAAAA,EAAAA,IAAQuB,GACX,OAAO,KAGT,MAAM0F,EAAS1F,EAAM2F,cAAcD,OACnC,GAAsB,iBAAXA,EACT,OAAOA,EAGT,MAAME,EAAUF,GAAQE,QACxB,MAAuB,iBAAZA,EACFA,GAGF/C,EAAAA,EAAAA,GAAE,6BACX,CAEO,SAASgD,EACd7D,EACA8D,EACAC,GAGA,MAAMlG,EAAuC,OAD7CmC,EAAQA,GAAS,IACqB,GAAa,OAAS,MACtDpC,EAAgB,QAAVC,EAAkBmC,EAAQA,EAAMgE,UAAU,GAEtD,OAAKF,EAAYG,SAASrG,GAInB,CAACA,IAAKA,EAAUC,SAHdkG,CAIX,C,4PC1GA,SAASG,EAAkB,GAA0D,IAA1D,MAACpG,EAAK,UAAE0E,GAAiC,EAClE,MAAMF,GAAMC,EAAAA,EAAAA,KACNnF,GAAeC,EAAAA,EAAAA,MAEd8G,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAwB,CAAC,GA+BrE,OA7BAC,EAAAA,EAAAA,YAAU,KACR,GAAK9B,EAyBL,OAMJ,SACEF,EACAlF,EACAU,EACA0E,GAEA,OAAOF,EAAIc,eAAgB,kBAAiBhG,EAAaqD,0BAA2B,CAClF4C,OAAQ,MACRvF,MAAO,CACLA,QACAqC,QAASqC,EAAUlF,SACnByE,YAAaS,EAAUK,iBACpBC,EAAAA,EAAAA,IAAwBN,EAAUO,YAG3C,CA1CIwB,CAAoBjC,EAAKlF,EAAcU,EAAO0E,GAAWgC,MAAKC,IAC5D,MAAMC,EAAwBD,EAASE,QACrC,CAACC,EAAwBC,KACnBC,EAAgBD,EAAIjH,OAGtBiH,EAAIjH,IAAMkH,EAAgBD,EAAIjH,KAC9BgH,EAAQC,EAAIjH,KAAO,IACdiH,EAEHE,YAAY,IAGTH,IAET,CAAC,GAGHR,EAAkBM,EAAsB,IAGnC,IAAMpC,EAAI0C,OAAO,GACvB,CAAC1C,EAAKlF,EAAcU,EAAO0E,IAEvB2B,CACT,CAmBA,MAAMW,EAAkB,CACtB9D,QAAS,UACTiE,cAAe,gBACfC,SAAU,gBACVC,iBAAkB,cAClBC,uBAAwB,WACxBC,eAAgB,UAChBC,kBAAmB,aACnBC,aAAc,eACdC,oBAAqB,sBACrBC,sBAAuB,wB,+CC3DlB,SAASlF,EAA+B,GAQpC,IARoC,QAC7CC,EAAO,YACPE,EAAW,UACXC,GAKD,EACC,MAAQ,kBAAiBH,uBAA6BE,KAAeC,eACvE,CAcO,SAAS+E,EAAgC,GAMzB,IANyB,QAC9ClF,EAAO,MACP1C,GAID,EACC,MAAM6H,EA7CD,SAAgC,GAAkD,IAAlD,QAACnF,GAAyC,EAC/E,MAAQ,kBAAiBA,cAC3B,CA2CmBoF,CAAuB,CAACpF,YACzC,MAAO,CACLmF,WACA7H,MAAO,IACFA,GAGT,CAEO,SAASgD,EAAqC,GAU9B,IAV8B,QACnDN,EAAO,YACPE,EAAW,YACXK,EAAW,MACXjD,GAMD,EACC,MAAM6H,EA7DD,SAAqC,GAMnC,IANmC,QAC1CnF,EAAO,YACPE,GAID,EACC,MAAQ,kBAAiBF,uBAA6BE,IACxD,CAqDmBmF,CAA4B,CAACrF,UAASE,gBACvD,MAAO,CACLiF,WACA7H,MAAO,IACFA,EACHiD,eAGN,CAEO,SAAS+E,EAAwC,GAUjC,IAViC,QACtDtF,EAAO,YACPE,EAAW,UACXC,EAAS,MACT7C,GAMD,EAMC,MAAO,CACL6H,SANepF,EAA+B,CAC9CC,UACAE,cACAC,cAIA7C,MAAO,IACFA,GAGT,CAEO,SAASiI,EAAqC,GAU9B,IAV8B,QACnDvF,EAAO,YACPE,EAAW,UACXC,EAAS,MACT7C,GAMD,EACC,MAAM6H,EApFD,SAAqC,GAQjC,IARiC,QAC1CnF,EAAO,YACPE,EAAW,UACXC,GAKD,EACC,MAAQ,kBAAiBH,uBAA6BE,KAAeC,YACvE,CA0EmBqF,CAA4B,CAACxF,UAASE,cAAaC,cACpE,MAAO,CACLgF,WACA7H,MAAO,IACFA,GAGT,C,kRC7GO,SAASgB,EAAe,GAMT,IANa,YACjCC,EAAW,iBACX3D,EAAgB,oBAChB4D,EAAmB,gBACnBM,EAAe,QACfjE,GACkB,EAClB,MAAO,CAACoC,EAA4BwI,KAEhC,QAAC,IAAQ,CACP5K,QAASU,GAAKV,IAAUoC,EAAQ1B,GAChCd,MAAO+D,GAAqBK,IAAI5B,EAAOG,KAAO,QAAU,OACxD1C,MAAOuC,EAAOc,KACdjD,UAAWyD,GAAanB,MAAQH,EAAOG,IAAMmB,GAAalB,WAAQqI,EAClE/K,QAASmE,GAAiBD,IAAI5B,EAAOG,OAAQ,EAC7CxC,iBAAkBA,IAAmBqC,EAAOG,MAAQ,MAAgB,GACpErC,SAAO,GAIf,C","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/components/profiling/profileEventsTable.tsx","webpack:///./app/utils/profiling/hooks/useProfileEvents.tsx","webpack:///./app/utils/profiling/hooks/useProfileFilters.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/utils/profiling/tableRenderer.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align', 'css']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {useCallback} from 'react';\nimport {Location} from 'history';\n\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n  GridColumnSortBy,\n} from 'sentry/components/gridEditable';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {DURATION_UNITS} from 'sentry/utils/discover/fieldRenderers';\nimport {Container, NumberContainer, VersionContainer} from 'sentry/utils/discover/styles';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {EventsResults} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {\n  generateProfileFlamechartRoute,\n  generateProfileSummaryRouteWithQuery,\n} from 'sentry/utils/profiling/routes';\nimport {renderTableHead} from 'sentry/utils/profiling/tableRenderer';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\ninterface ProfileEventsTableProps<F extends FieldType> {\n  columns: readonly F[];\n  data: EventsResults<F> | null;\n  error: string | null;\n  isLoading: boolean;\n  sort: GridColumnSortBy<F>;\n  sortableColumns?: Set<F>;\n}\n\nexport function ProfileEventsTable<F extends FieldType>(\n  props: ProfileEventsTableProps<F>\n) {\n  const location = useLocation();\n  const organization = useOrganization();\n  const {projects} = useProjects();\n\n  const generateSortLink = useCallback(\n    (column: F) => () => {\n      let dir = 'desc';\n      if (column === props.sort.key && props.sort.order === dir) {\n        dir = 'asc';\n      }\n      return {\n        ...location,\n        query: {\n          ...location.query,\n          sort: dir === 'asc' ? column : `-${column}`,\n        },\n      };\n    },\n    [location, props.sort]\n  );\n\n  return (\n    <GridEditable\n      isLoading={props.isLoading}\n      error={props.error}\n      data={props.data?.data ?? []}\n      columnOrder={props.columns.map(field => getColumnOrder<F>(field))}\n      columnSortBy={[props.sort]}\n      grid={{\n        renderHeadCell: renderTableHead<F>({\n          currentSort: props.sort,\n          generateSortLink,\n          rightAlignedColumns: getRightAlignedColumns(props.columns),\n          sortableColumns: props.sortableColumns,\n        }),\n        renderBodyCell: renderTableBody(\n          props.data?.meta ?? ({fields: {}, units: {}} as EventsResults<F>['meta']),\n          {location, organization, projects}\n        ),\n      }}\n      location={location}\n    />\n  );\n}\n\ntype RenderBagger = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction renderTableBody<F extends FieldType>(\n  meta: EventsResults<F>['meta'],\n  baggage: RenderBagger\n) {\n  function _renderTableBody(\n    column: GridColumnOrder<F>,\n    dataRow: Record<F, any>,\n    rowIndex: number,\n    columnIndex: number\n  ) {\n    return (\n      <ProfileEventsCell\n        meta={meta}\n        baggage={baggage}\n        column={column}\n        dataRow={dataRow}\n        rowIndex={rowIndex}\n        columnIndex={columnIndex}\n      />\n    );\n  }\n\n  return _renderTableBody;\n}\n\ninterface ProfileEventsCellProps<F extends FieldType> {\n  baggage: RenderBagger;\n  column: GridColumnOrder<F>;\n  columnIndex: number;\n  dataRow: Record<F, any>;\n  meta: EventsResults<F>['meta'];\n  rowIndex: number;\n}\n\nfunction ProfileEventsCell<F extends FieldType>(props: ProfileEventsCellProps<F>) {\n  const key = props.column.key;\n  const value = props.dataRow[key];\n  const columnType = props.meta.fields[key];\n  const columnUnit = props.meta.units[key];\n\n  if (key === 'id') {\n    const project = getProjectForRow(props.baggage, props.dataRow);\n\n    if (!defined(project)) {\n      // should never happen but just in case\n      return <Container>{getShortEventId(value)}</Container>;\n    }\n\n    const flamegraphTarget = generateProfileFlamechartRoute({\n      orgSlug: props.baggage.organization.slug,\n      projectSlug: project.slug,\n      profileId: value,\n    });\n\n    return (\n      <Container>\n        <Link to={flamegraphTarget}>{getShortEventId(value)}</Link>\n      </Container>\n    );\n  }\n\n  if (key === 'project.id' || key === 'project' || key === 'project.name') {\n    const project = getProjectForRow(props.baggage, props.dataRow);\n\n    if (!defined(project)) {\n      // should never happen but just in case\n      return <Container>{t('n/a')}</Container>;\n    }\n\n    return (\n      <Container>\n        <ProjectBadge project={project} avatarSize={16} />\n      </Container>\n    );\n  }\n\n  if (key === 'transaction') {\n    const project = getProjectForRow(props.baggage, props.dataRow);\n\n    if (defined(project)) {\n      return (\n        <Container>\n          <Link\n            to={generateProfileSummaryRouteWithQuery({\n              query: props.baggage.location.query,\n              orgSlug: props.baggage.organization.slug,\n              projectSlug: project.slug,\n              transaction: value,\n            })}\n          >\n            {value}\n          </Link>\n        </Container>\n      );\n    }\n\n    // let this fall through and use one of the other renderers\n  }\n\n  if (key === 'release') {\n    if (value) {\n      return (\n        <VersionContainer>\n          <Version version={value} anchor={false} tooltipRawVersion truncate />\n        </VersionContainer>\n      );\n    }\n  }\n\n  switch (columnType) {\n    case 'integer':\n    case 'number':\n      return (\n        <NumberContainer>\n          <Count value={value} />\n        </NumberContainer>\n      );\n    case 'duration':\n      const multiplier = columnUnit ? DURATION_UNITS[columnUnit as string] ?? 1 : 1;\n      return (\n        <NumberContainer>\n          <PerformanceDuration milliseconds={value * multiplier} abbreviation />\n        </NumberContainer>\n      );\n    case 'date':\n      return (\n        <Container>\n          <DateTime date={value} year seconds timeZone />\n        </Container>\n      );\n    default:\n      return <Container>{value}</Container>;\n  }\n}\n\nfunction getProjectForRow<F extends FieldType>(\n  baggage: ProfileEventsCellProps<F>['baggage'],\n  dataRow: ProfileEventsCellProps<F>['dataRow']\n) {\n  let project: Project | undefined = undefined;\n\n  if (defined(dataRow['project.id'])) {\n    const projectId = dataRow['project.id'].toString();\n    project = baggage.projects.find(proj => proj.id === projectId);\n  } else if (defined((dataRow as any).project)) {\n    const projectSlug = (dataRow as any).project;\n    project = baggage.projects.find(proj => proj.slug === projectSlug);\n  } else if (defined(dataRow['project.name'])) {\n    const projectSlug = dataRow['project.name'];\n    project = baggage.projects.find(proj => proj.slug === projectSlug);\n  }\n\n  return project ?? null;\n}\n\nconst FIELDS = [\n  'id',\n  'trace.transaction',\n  'trace',\n  'transaction',\n  'profile.duration',\n  'project',\n  'project.id',\n  'project.name',\n  'environment',\n  'timestamp',\n  'release',\n  'platform.name',\n  'device.arch',\n  'device.classification',\n  'device.locale',\n  'device.manufacturer',\n  'device.model',\n  'os.build',\n  'os.name',\n  'os.version',\n  'last_seen()',\n  'p75()',\n  'p95()',\n  'p99()',\n  'count()',\n] as const;\n\ntype FieldType = typeof FIELDS[number];\n\nconst RIGHT_ALIGNED_FIELDS = new Set<FieldType>([\n  'profile.duration',\n  'p75()',\n  'p95()',\n  'p99()',\n  'count()',\n]);\n\n// TODO: add all the columns here\nconst COLUMN_ORDERS: Record<FieldType, GridColumnOrder<FieldType>> = {\n  id: {\n    key: 'id',\n    name: t('Profile ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  trace: {\n    key: 'trace',\n    name: t('Trace ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'trace.transaction': {\n    key: 'trace.transaction',\n    name: t('Transaction ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  transaction: {\n    key: 'transaction',\n    name: t('Transaction'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'profile.duration': {\n    key: 'profile.duration',\n    name: t('Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  project: {\n    key: 'project',\n    name: t('Project'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'project.id': {\n    key: 'project.id',\n    name: t('Project'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'project.name': {\n    key: 'project.name',\n    name: t('Project'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  environment: {\n    key: 'environment',\n    name: t('Environment'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  timestamp: {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  release: {\n    key: 'release',\n    name: t('Release'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'platform.name': {\n    key: 'platform.name',\n    name: t('Platform'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'device.arch': {\n    key: 'device.arch',\n    name: t('Device Architecture'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'device.classification': {\n    key: 'device.classification',\n    name: t('Device Classification'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'device.locale': {\n    key: 'device.locale',\n    name: t('Device Locale'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'device.manufacturer': {\n    key: 'device.manufacturer',\n    name: t('Device Manufacturer'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'device.model': {\n    key: 'device.model',\n    name: t('Device Model'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'os.build': {\n    key: 'os.build',\n    name: t('OS Build'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'os.name': {\n    key: 'os.name',\n    name: t('OS Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'os.version': {\n    key: 'os.version',\n    name: t('OS Version'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'last_seen()': {\n    key: 'last_seen()',\n    name: t('Last Seen'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'p75()': {\n    key: 'p75()',\n    name: t('P75'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'p95()': {\n    key: 'p95()',\n    name: t('P95()'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'p99()': {\n    key: 'p99()',\n    name: t('P99()'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  'count()': {\n    key: 'count()',\n    name: t('Count()'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nfunction getColumnOrder<F extends FieldType>(field: F): GridColumnOrder<F> {\n  if (COLUMN_ORDERS[field as string]) {\n    return COLUMN_ORDERS[field as string] as GridColumnOrder<F>;\n  }\n\n  return {\n    key: field,\n    name: field,\n    width: COL_WIDTH_UNDEFINED,\n  };\n}\n\nfunction getRightAlignedColumns<F extends FieldType>(columns: readonly F[]): Set<F> {\n  return new Set(columns.filter(col => RIGHT_ALIGNED_FIELDS.has(col)));\n}\n","import {useQuery} from '@tanstack/react-query';\n\nimport {ResponseMeta} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport {DURATION_UNITS, SIZE_UNITS} from 'sentry/utils/discover/fieldRenderers';\nimport {FieldValueType} from 'sentry/utils/fields';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Sort<F> = {\n  key: F;\n  order: 'asc' | 'desc';\n};\n\ninterface UseProfileEventsOptions<F> {\n  fields: readonly F[];\n  referrer: string;\n  sort: Sort<F>;\n  cursor?: string;\n  limit?: number;\n  query?: string;\n}\n\ntype Unit = keyof typeof DURATION_UNITS | keyof typeof SIZE_UNITS | null;\n\ntype EventsResultsDataRow<F extends string> = {\n  [K in F]: string | number | null;\n};\n\ntype EventsResultsMeta<F extends string> = {\n  fields: Partial<{[K in F]: FieldValueType}>;\n  units: Partial<{[K in F]: Unit}>;\n};\n\nexport type EventsResults<F extends string> = {\n  data: EventsResultsDataRow<F>[];\n  meta: EventsResultsMeta<F>;\n};\n\nexport function useProfileEvents<F extends string>({\n  fields,\n  limit,\n  referrer,\n  query,\n  sort,\n  cursor,\n}: UseProfileEventsOptions<F>) {\n  const api = useApi();\n  const organization = useOrganization();\n  const {selection} = usePageFilters();\n\n  const path = `/organizations/${organization.slug}/events/`;\n  const endpointOptions = {\n    query: {\n      dataset: 'profiles',\n      referrer,\n      project: selection.projects,\n      environment: selection.environments,\n      ...normalizeDateTimeParams(selection.datetime),\n      field: fields,\n      per_page: limit,\n      query,\n      sort: sort.order === 'asc' ? sort.key : `-${sort.key}`,\n      cursor,\n    },\n  };\n\n  const queryKey = [path, endpointOptions];\n\n  const queryFn = () =>\n    api.requestPromise(path, {\n      method: 'GET',\n      includeAllArgs: true,\n      query: endpointOptions.query,\n    });\n\n  return useQuery<[EventsResults<F>, string | undefined, ResponseMeta | undefined]>({\n    queryKey,\n    queryFn,\n    refetchOnWindowFocus: false,\n    retry: false,\n  });\n}\n\nexport function formatError(error: any): string | null {\n  if (!defined(error)) {\n    return null;\n  }\n\n  const detail = error.responseJSON?.detail;\n  if (typeof detail === 'string') {\n    return detail;\n  }\n\n  const message = detail?.message;\n  if (typeof message === 'string') {\n    return message;\n  }\n\n  return t('An unknown error occurred.');\n}\n\nexport function formatSort<F extends string>(\n  value: string | undefined,\n  allowedKeys: readonly F[],\n  fallback: Sort<F>\n): Sort<F> {\n  value = value || '';\n  const order: Sort<F>['order'] = value[0] === '-' ? 'desc' : 'asc';\n  const key = order === 'asc' ? value : value.substring(1);\n\n  if (!allowedKeys.includes(key as F)) {\n    return fallback;\n  }\n\n  return {key: key as F, order};\n}\n","import {useEffect, useState} from 'react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {Organization, PageFilters, Tag, TagCollection} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface ProfileFiltersOptions {\n  query: string;\n  selection?: PageFilters;\n}\n\nfunction useProfileFilters({query, selection}: ProfileFiltersOptions): TagCollection {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [profileFilters, setProfileFilters] = useState<TagCollection>({});\n\n  useEffect(() => {\n    if (!selection) {\n      return undefined;\n    }\n\n    fetchProfileFilters(api, organization, query, selection).then(response => {\n      const withPredefinedFilters = response.reduce(\n        (filters: TagCollection, tag: Tag) => {\n          if (TAG_KEY_MAPPING[tag.key]) {\n            // for now, we're going to use this translation to handle auto\n            // completion but we should update the response in the future\n            tag.key = TAG_KEY_MAPPING[tag.key];\n            filters[tag.key] = {\n              ...tag,\n              // predefined allows us to specify a list of possible values\n              predefined: true,\n            };\n          }\n          return filters;\n        },\n        {}\n      );\n\n      setProfileFilters(withPredefinedFilters);\n    });\n\n    return () => api.clear();\n  }, [api, organization, query, selection]);\n\n  return profileFilters;\n}\n\nfunction fetchProfileFilters(\n  api: Client,\n  organization: Organization,\n  query: string,\n  selection: PageFilters\n): Promise<[Tag]> {\n  return api.requestPromise(`/organizations/${organization.slug}/profiling/filters/`, {\n    method: 'GET',\n    query: {\n      query,\n      project: selection.projects,\n      environment: selection.environments,\n      ...normalizeDateTimeParams(selection.datetime),\n    },\n  });\n}\n\nconst TAG_KEY_MAPPING = {\n  version: 'release',\n  device_locale: 'device.locale',\n  platform: 'platform.name',\n  transaction_name: 'transaction',\n  device_os_build_number: 'os.build',\n  device_os_name: 'os.name',\n  device_os_version: 'os.version',\n  device_model: 'device.model',\n  device_manufacturer: 'device.manufacturer',\n  device_classification: 'device.classification',\n};\n\nexport {useProfileFilters};\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n","import {LocationDescriptorObject} from 'history';\n\nimport {GridColumnOrder, GridColumnSortBy} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\n\ninterface TableHeadProps<K> {\n  currentSort?: GridColumnSortBy<K> | null;\n  generateSortLink?: (column: K) => () => LocationDescriptorObject | undefined;\n  onClick?(column: GridColumnOrder<K>, e: React.MouseEvent<HTMLAnchorElement>): void;\n  rightAlignedColumns?: Set<K>;\n  sortableColumns?: Set<K>;\n}\n\nexport function renderTableHead<K>({\n  currentSort,\n  generateSortLink,\n  rightAlignedColumns,\n  sortableColumns,\n  onClick,\n}: TableHeadProps<K>) {\n  return (column: GridColumnOrder<K>, _columnIndex: number) => {\n    return (\n      <SortLink\n        onClick={e => onClick?.(column, e)}\n        align={rightAlignedColumns?.has(column.key) ? 'right' : 'left'}\n        title={column.name}\n        direction={currentSort?.key === column.key ? currentSort?.order : undefined}\n        canSort={sortableColumns?.has(column.key) || false}\n        generateSortLink={generateSortLink?.(column.key) ?? (() => undefined)}\n        replace\n      />\n    );\n  };\n}\n"],"names":["SortLink","align","title","canSort","generateSortLink","onClick","direction","replace","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","e","preventDefault","browserHistory","props","forwardProps","omit","p","IconArrow","PerformanceDuration","normalizedSeconds","defined","nanoseconds","isNanoseconds","milliseconds","isMilliseconds","seconds","abbreviation","fixedDigits","ProfileEventsTable","location","useLocation","organization","useOrganization","projects","useProjects","useCallback","column","dir","sort","key","order","query","isLoading","error","data","columnOrder","columns","map","field","COLUMN_ORDERS","name","width","COL_WIDTH_UNDEFINED","getColumnOrder","columnSortBy","grid","renderHeadCell","renderTableHead","currentSort","rightAlignedColumns","Set","filter","col","RIGHT_ALIGNED_FIELDS","has","sortableColumns","renderBodyCell","meta","fields","units","baggage","dataRow","rowIndex","columnIndex","ProfileEventsCell","value","columnType","columnUnit","project","getProjectForRow","getShortEventId","flamegraphTarget","generateProfileFlamechartRoute","orgSlug","slug","projectSlug","profileId","avatarSize","t","generateProfileSummaryRouteWithQuery","transaction","version","anchor","tooltipRawVersion","truncate","multiplier","DURATION_UNITS","date","year","timeZone","projectId","toString","find","proj","id","trace","environment","timestamp","release","useProfileEvents","limit","referrer","cursor","api","useApi","selection","usePageFilters","path","endpointOptions","dataset","environments","normalizeDateTimeParams","datetime","per_page","queryKey","useQuery","queryFn","requestPromise","method","includeAllArgs","refetchOnWindowFocus","retry","formatError","detail","responseJSON","message","formatSort","allowedKeys","fallback","substring","includes","useProfileFilters","profileFilters","setProfileFilters","useState","useEffect","fetchProfileFilters","then","response","withPredefinedFilters","reduce","filters","tag","TAG_KEY_MAPPING","predefined","clear","device_locale","platform","transaction_name","device_os_build_number","device_os_name","device_os_version","device_model","device_manufacturer","device_classification","generateProfilingRouteWithQuery","pathname","generateProfilingRoute","generateProfileSummaryRoute","generateProfileFlamechartRouteWithQuery","generateProfileDetailsRouteWithQuery","generateProfileDetailsRoute","_columnIndex","undefined"],"sourceRoot":""}
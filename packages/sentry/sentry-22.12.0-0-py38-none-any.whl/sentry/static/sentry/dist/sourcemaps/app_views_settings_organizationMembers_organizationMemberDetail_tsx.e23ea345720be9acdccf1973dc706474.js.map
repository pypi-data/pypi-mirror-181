{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/orgRoleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"sourcesContent":["import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport {t} from 'sentry/locale';\nimport {OrgRole} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  disabled: boolean;\n  enforceAllowed: boolean;\n  enforceRetired: boolean;\n  roleList: OrgRole[];\n  roleSelected: string;\n  setSelected: (id: string) => void;\n};\n\nclass OrganizationRoleSelect extends Component<Props> {\n  render() {\n    const {\n      disabled,\n      enforceRetired,\n      enforceAllowed,\n      roleList,\n      roleSelected,\n      setSelected,\n    } = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Organization Role')}</PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed, isRetired: roleRetired} = role;\n\n            const isRetired = enforceRetired && roleRetired;\n            const isDisabled = disabled || isRetired || (enforceAllowed && !allowed);\n\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && setSelected(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === roleSelected} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default OrganizationRoleSelect;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {removeAuthenticator} from 'sentry/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'sentry/actionCreators/members';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport NotFound from 'sentry/components/errors/notFound';\nimport Field from 'sentry/components/forms/field';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Member, Organization, Team} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Teams from 'sentry/utils/teams';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'sentry/views/settings/components/teamSelect';\n\nimport OrganizationRoleSelect from './inviteMember/orgRoleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  memberId: string;\n  orgId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  member: Member | null;\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member!.teams.includes(team.slug)) {\n      member!.teams.push(team.slug);\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(`/settings/${organization.slug}/members/`);\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access, features} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n    const hasTeamRoles = features.includes('team-roles');\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <OverflowWrapper>\n                <Details>\n                  <div>\n                    <DetailLabel>{t('Email')}</DetailLabel>\n                    <div>\n                      <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Status')}</DetailLabel>\n                    <div data-test-id=\"member-status\">\n                      {this.renderMemberStatus(member)}\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Added')}</DetailLabel>\n                    <div>\n                      <DateTime dateOnly date={member.dateCreated} />\n                    </div>\n                  </div>\n                </Details>\n\n                {inviteLink && (\n                  <InviteSection>\n                    <div>\n                      <DetailLabel>{t('Invite Link')}</DetailLabel>\n                      <TextCopyInput>{inviteLink}</TextCopyInput>\n                      <p className=\"help-block\">\n                        {t(\n                          'This invite link can be used by anyone who knows it. Keep it secure!'\n                        )}\n                      </p>\n                    </div>\n                    <InviteActions>\n                      <Button onClick={() => this.handleInvite(true)}>\n                        {t('Generate New Invite')}\n                      </Button>\n                      {canResend && (\n                        <Button\n                          data-test-id=\"resend-invite\"\n                          onClick={() => this.handleInvite(false)}\n                        >\n                          {t('Resend Invite')}\n                        </Button>\n                      )}\n                    </InviteActions>\n                  </InviteSection>\n                )}\n              </OverflowWrapper>\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <Field\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip disabled={this.showResetButton()} title={this.getTooltip()}>\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                  >\n                    <Button priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </Field>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <OrganizationRoleSelect\n          enforceAllowed={false}\n          enforceRetired={hasTeamRoles}\n          disabled={!canEdit}\n          roleList={member.roles}\n          roleSelected={member.role}\n          setSelected={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <Teams slugs={member.teams}>\n          {({teams, initiallyLoaded}) => (\n            <TeamSelect\n              organization={organization}\n              selectedTeams={teams}\n              disabled={!canEdit}\n              onAddTeam={this.handleAddTeam}\n              onRemoveTeam={this.handleRemoveTeam}\n              loadingTeams={!initiallyLoaded}\n            />\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst OverflowWrapper = styled('div')`\n  overflow: hidden;\n  flex: 1;\n`;\n\nconst InviteSection = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  margin-top: ${space(2)};\n  padding-top: ${space(2)};\n`;\n\nconst InviteActions = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  margin-top: ${space(2)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"names":["isMemberDisabledFromLimit","member","flags","Label","OrganizationRoleSelect","Component","render","disabled","enforceRetired","enforceAllowed","roleList","roleSelected","setSelected","this","props","t","map","role","desc","name","id","allowed","isRetired","roleRetired","isDisabled","onClick","css","color","cursor","value","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","children","Fragment","OrganizationMemberDetail","AsyncView","async","organization","params","addLoadingMessage","setState","busy","updateMember","api","orgId","slug","memberId","data","state","addSuccessMessage","redirectToMemberPage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","team","teams","includes","push","removedTeam","filter","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","err","Sentry","require2FA","length","canReset2fa","getDefaultState","super","selectedRole","getEndpoints","location","routes","members","recreateRoute","stepBack","browserHistory","memberDeactivated","renderMemberStatus","expired","pending","renderBody","access","features","inviteLink","invite_link","canEdit","hasTeamRoles","email","canResend","showAuth","title","ExtraHeaderText","OverflowWrapper","Details","DetailLabel","href","dateOnly","date","dateCreated","InviteSection","InviteActions","handleInvite","alignRight","flexibleControlStateSize","label","help","showResetButton","getTooltip","message","tct","onConfirm","handle2faReset","priority","roles","slugs","initiallyLoaded","selectedTeams","onAddTeam","handleAddTeam","onRemoveTeam","handleRemoveTeam","loadingTeams","Footer","handleSave","withOrganization","p","theme","gray300","fontSizeLarge","space","breakpoints","small","textColor","border"],"sourceRoot":""}
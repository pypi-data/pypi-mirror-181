{"version":3,"file":"chunks/app_views_settings_projectSourceMaps_detail_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/components/acl/role.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.role ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.role ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              type=\"button\"\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport Tag from 'sentry/components/tag';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Artifact} from 'sentry/types';\n\ntype Props = {\n  artifact: Artifact;\n  downloadRole: string;\n  downloadUrl: string;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nconst SourceMapsArtifactRow = ({\n  artifact,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) => {\n  const {name, size, dateCreated, id, dist} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"sm\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          <StyledTag\n            type={dist ? 'info' : undefined}\n            tooltipText={dist ? undefined : t('No distribution set')}\n          >\n            {dist ?? t('none')}\n          </StyledTag>\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Artifacts can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Artifact') : undefined}\n                  aria-label={t('Download Artifact')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Artifact') : undefined}\n                    aria-label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nexport default SourceMapsArtifactRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Artifact, Organization, Project} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {name: string; orgId: string; projectId: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, name} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(name)}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {orgId, projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {organization} = this.props;\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n          downloadRole={organization.debugFilesRole}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name, orgId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Access access={['project:releases']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    disabled={hasAccess}\n                    title={t('You do not have permission to delete artifacts.')}\n                  >\n                    <Confirm\n                      message={t(\n                        'Are you sure you want to remove all artifacts in this archive?'\n                      )}\n                      onConfirm={this.handleArchiveDelete}\n                      disabled={!hasAccess}\n                    >\n                      <Button\n                        icon={<IconDelete size=\"sm\" />}\n                        title={t('Remove All Artifacts')}\n                        aria-label={t('Remove All Artifacts')}\n                        disabled={!hasAccess}\n                      />\n                    </Confirm>\n                  </Tooltip>\n                )}\n              </Access>\n\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints.large}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints.large}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","withOrganizationRole","role","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","requiredIndex","indexOf","checkUserRole","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","Input","p","Button","theme","subText","space","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","title","renderComponent","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","downloadRole","dateCreated","dist","handleDeleteClick","Fragment","NameColumn","Name","TimeAndDistWrapper","TimeWrapper","date","StyledTag","undefined","tooltipText","SizeColumn","bytes","ActionsColumn","gap","tct","orHigher","settingsLink","to","disabled","isHoverable","href","message","onConfirm","fontSizeMedium","Tag","ProjectSourceMapsDetail","location","router","push","cursor","async","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","orgId","projectId","params","routeTitleGen","formatVersion","getDefaultState","super","artifacts","getEndpoints","getQuery","encodeURIComponent","decodeScalar","getEmptyMessage","renderLoading","renderBody","renderArtifacts","state","artifactApiUrl","baseUrl","length","handleArtifactDelete","debugFilesRole","slug","loading","artifactsPageLinks","project","StyledSettingsPageHeader","Title","version","tooltipRawVersion","anchor","truncate","action","StyledButtonBar","ReleaseButton","handleArchiveDelete","placeholder","handleSearch","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","pageLinks","SettingsPageHeader","breakpoints","large","ButtonBar","PanelTable"],"sourceRoot":""}
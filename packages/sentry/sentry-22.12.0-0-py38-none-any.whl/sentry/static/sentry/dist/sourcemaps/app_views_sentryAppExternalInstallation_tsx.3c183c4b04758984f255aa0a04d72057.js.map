{"version":3,"file":"chunks/app_views_sentryAppExternalInstallation_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/sentryAppInstallations.tsx","webpack:///./app/components/acl/access.tsx","webpack:///./app/components/narrowLayout.tsx","webpack:///./app/components/sentryAppIcon.tsx","webpack:///./app/utils/consolidatedScopes.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/modals/sentryAppDetailsModal.tsx","webpack:///./app/views/sentryAppExternalInstallation.tsx","webpack:///../node_modules/lodash/invertBy.js"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {SentryApp, SentryAppInstallation} from 'sentry/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {Object} app SentryApp\n */\nexport function installSentryApp(\n  client: Client,\n  orgId: string,\n  app: SentryApp\n): Promise<SentryAppInstallation> {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/sentry-app-installations/`,\n    {\n      method: 'POST',\n      data: {slug: app.slug},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to install %s', app.name))\n  );\n  return promise;\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} install SentryAppInstallation\n */\nexport function uninstallSentryApp(\n  client: Client,\n  install: SentryAppInstallation\n): Promise<void> {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-app-installations/${install.uuid}/`, {\n    method: 'DELETE',\n  });\n  const capitalizedAppSlug =\n    install.app.slug.charAt(0).toUpperCase() + install.app.slug.slice(1);\n  promise.then(\n    () => {\n      addSuccessMessage(t('%s successfully uninstalled.', capitalizedAppSlug));\n    },\n    () => clearIndicators()\n  );\n  return promise;\n}\n","import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import SentryAppAvatar from 'sentry/components/avatar/sentryAppAvatar';\nimport {AvatarSentryApp} from 'sentry/types';\n\ntype Props = {\n  sentryApp: AvatarSentryApp;\n  size: number;\n};\n\nconst SentryAppIcon = ({sentryApp, size}: Props) => {\n  return <SentryAppAvatar sentryApp={sentryApp} size={size} isColor />;\n};\n\nexport default SentryAppIcon;\n","import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'sentry/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  admin: string[];\n  read: string[];\n  write: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport SentryAppIcon from 'sentry/components/sentryAppIcon';\nimport Tag from 'sentry/components/tag';\nimport {IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IntegrationFeature, Organization, SentryApp} from 'sentry/types';\nimport {toPermissions} from 'sentry/utils/consolidatedScopes';\nimport {\n  getIntegrationFeatureGate,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport marked, {singleLineRenderer} from 'sentry/utils/marked';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\n\ntype Props = {\n  closeModal: () => void;\n  isInstalled: boolean;\n  onInstall: () => Promise<void>;\n  organization: Organization;\n  sentryApp: SentryApp;\n} & AsyncComponent['props'];\n\ntype State = {\n  featureData: IntegrationFeature[];\n} & AsyncComponent['state'];\n\n// No longer a modal anymore but yea :)\nexport default class SentryAppDetailsModal extends AsyncComponent<Props, State> {\n  componentDidUpdate(prevProps: Props) {\n    // if the user changes org, count this as a fresh event to track\n    if (this.props.organization.id !== prevProps.organization.id) {\n      this.trackOpened();\n    }\n  }\n\n  componentDidMount() {\n    this.trackOpened();\n  }\n\n  trackOpened() {\n    const {sentryApp, organization, isInstalled} = this.props;\n    recordInteraction(sentryApp.slug, 'sentry_app_viewed');\n\n    trackIntegrationAnalytics(\n      'integrations.install_modal_opened',\n      {\n        integration_type: 'sentry_app',\n        integration: sentryApp.slug,\n        already_installed: isInstalled,\n        view: 'external_install',\n        integration_status: sentryApp.status,\n        organization,\n      },\n      {startSession: true}\n    );\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {sentryApp} = this.props;\n    return [['featureData', `/sentry-apps/${sentryApp.slug}/features/`]];\n  }\n\n  featureTags(features: Pick<IntegrationFeature, 'featureGate'>[]) {\n    return features.map(feature => {\n      const feat = feature.featureGate.replace(/integrations/g, '');\n      return <StyledTag key={feat}>{feat.replace(/-/g, ' ')}</StyledTag>;\n    });\n  }\n\n  get permissions() {\n    return toPermissions(this.props.sentryApp.scopes);\n  }\n\n  async onInstall() {\n    const {onInstall} = this.props;\n    // we want to make sure install finishes before we close the modal\n    // and we should close the modal if there is an error as well\n    try {\n      await onInstall();\n    } catch (_err) {\n      /* stylelint-disable-next-line no-empty-block */\n    }\n  }\n\n  renderPermissions() {\n    const permissions = this.permissions;\n    if (\n      Object.keys(permissions).filter(scope => permissions[scope].length > 0).length === 0\n    ) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <Title>Permissions</Title>\n        {permissions.read.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"read\">\n              {tct('[read] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                resources: permissions.read.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.write.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"write\">\n              {tct('[read] and [write] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                write: <strong>Write</strong>,\n                resources: permissions.write.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.admin.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"admin\">\n              {tct('[admin] access to [resources] resources', {\n                admin: <strong>Admin</strong>,\n                resources: permissions.admin.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {sentryApp, closeModal, isInstalled, organization} = this.props;\n    const {featureData} = this.state;\n    // Prepare the features list\n    const features = (featureData || []).map(f => ({\n      featureGate: f.featureGate,\n      description: (\n        <span dangerouslySetInnerHTML={{__html: singleLineRenderer(f.description)}} />\n      ),\n    }));\n\n    const {FeatureList, IntegrationFeatures} = getIntegrationFeatureGate();\n\n    const overview = sentryApp.overview || '';\n    const featureProps = {organization, features};\n\n    return (\n      <Fragment>\n        <Heading>\n          <SentryAppIcon sentryApp={sentryApp} size={50} />\n          <HeadingInfo>\n            <Name>{sentryApp.name}</Name>\n            {!!features.length && <Features>{this.featureTags(features)}</Features>}\n          </HeadingInfo>\n        </Heading>\n        <Description dangerouslySetInnerHTML={{__html: marked(overview)}} />\n        <FeatureList {...featureProps} provider={{...sentryApp, key: sentryApp.slug}} />\n        <IntegrationFeatures {...featureProps}>\n          {({disabled, disabledReason}) => (\n            <Fragment>\n              {!disabled && this.renderPermissions()}\n              <Footer>\n                <Author>{t('Authored By %s', sentryApp.author)}</Author>\n                <div>\n                  {disabled && <DisabledNotice reason={disabledReason} />}\n                  <Button size=\"sm\" onClick={closeModal}>\n                    {t('Cancel')}\n                  </Button>\n\n                  <Access organization={organization} access={['org:integrations']}>\n                    {({hasAccess}) =>\n                      hasAccess && (\n                        <Button\n                          size=\"sm\"\n                          priority=\"primary\"\n                          disabled={isInstalled || disabled}\n                          onClick={() => this.onInstall()}\n                          style={{marginLeft: space(1)}}\n                          data-test-id=\"install\"\n                        >\n                          {t('Accept & Install')}\n                        </Button>\n                      )\n                    }\n                  </Access>\n                </div>\n              </Footer>\n            </Fragment>\n          )}\n        </IntegrationFeatures>\n      </Fragment>\n    );\n  }\n}\n\nconst Heading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst HeadingInfo = styled('div')`\n  display: grid;\n  grid-template-rows: max-content max-content;\n  align-items: start;\n`;\n\nconst Name = styled('div')`\n  font-weight: bold;\n  font-size: 1.4em;\n`;\n\nconst Description = styled('div')`\n  margin-bottom: ${space(2)};\n\n  li {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Author = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst DisabledNotice = styled(({reason, ...p}: {reason: React.ReactNode}) => (\n  <div {...p}>\n    <IconFlag color=\"errorText\" size=\"1.5em\" />\n    {reason}\n  </div>\n))`\n  display: grid;\n  align-items: center;\n  flex: 1;\n  grid-template-columns: max-content 1fr;\n  color: ${p => p.theme.errorText};\n  font-size: 0.9em;\n`;\n\nconst Text = styled('p')`\n  margin: 0px 6px;\n`;\n\nconst Permission = styled('div')`\n  display: flex;\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  padding: 20px 30px;\n  border-top: 1px solid #e2dee6;\n  margin: 20px -30px -30px;\n  justify-content: space-between;\n`;\n\nconst Title = styled('p')`\n  margin-bottom: ${space(1)};\n  font-weight: bold;\n`;\n\nconst Indicator = styled(p => <CircleIndicator size={7} {...p} />)`\n  margin-top: 7px;\n  color: ${p => p.theme.success};\n`;\n\nconst Features = styled('div')`\n  margin: -${space(0.5)};\n`;\n\nconst StyledTag = styled(Tag)`\n  padding: ${space(0.5)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {installSentryApp} from 'sentry/actionCreators/sentryAppInstallations';\nimport Alert from 'sentry/components/alert';\nimport OrganizationAvatar from 'sentry/components/avatar/organizationAvatar';\nimport SelectControl from 'sentry/components/forms/controls/selectControl';\nimport Field from 'sentry/components/forms/field';\nimport SentryAppDetailsModal from 'sentry/components/modals/sentryAppDetailsModal';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, SentryApp, SentryAppInstallation} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Props = RouteComponentProps<{sentryAppSlug: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  organization: Organization | null;\n  organizations: Organization[];\n  reloading: boolean;\n  selectedOrgSlug: string | null;\n  sentryApp: SentryApp;\n};\n\nexport default class SentryAppExternalInstallation extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getDefaultState() {\n    const state = super.getDefaultState();\n    return {\n      ...state,\n      selectedOrgSlug: null,\n      organization: null,\n      organizations: [],\n      reloading: false,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['organizations', '/organizations/'],\n      ['sentryApp', `/sentry-apps/${this.sentryAppSlug}/`],\n    ];\n  }\n\n  getTitle() {\n    return t('Choose Installation Organization');\n  }\n\n  get sentryAppSlug() {\n    return this.props.params.sentryAppSlug;\n  }\n\n  get isSingleOrg() {\n    return this.state.organizations.length === 1;\n  }\n\n  get isSentryAppInternal() {\n    const {sentryApp} = this.state;\n    return sentryApp && sentryApp.status === 'internal';\n  }\n\n  get isSentryAppUnavailableForOrg() {\n    const {sentryApp, selectedOrgSlug} = this.state;\n    // if the app is unpublished for a different org\n    return (\n      selectedOrgSlug &&\n      sentryApp?.owner?.slug !== selectedOrgSlug &&\n      sentryApp.status === 'unpublished'\n    );\n  }\n\n  get disableInstall() {\n    const {reloading, isInstalled} = this.state;\n    return isInstalled || reloading || this.isSentryAppUnavailableForOrg;\n  }\n\n  hasAccess = (org: Organization) => org.access.includes('org:integrations');\n\n  onClose = () => {\n    // if we came from somewhere, go back there. Otherwise, back to the integrations page\n    const {selectedOrgSlug} = this.state;\n    const newUrl = document.referrer || `/settings/${selectedOrgSlug}/integrations/`;\n    window.location.assign(newUrl);\n  };\n\n  onInstall = async (): Promise<any | undefined> => {\n    const {organization, sentryApp} = this.state;\n    if (!organization || !sentryApp) {\n      return undefined;\n    }\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration_type: 'sentry_app',\n      integration: sentryApp.slug,\n      view: 'external_install',\n      integration_status: sentryApp.status,\n      organization,\n    });\n\n    const install = await installSentryApp(this.api, organization.slug, sentryApp);\n    // installation is complete if the status is installed\n    if (install.status === 'installed') {\n      trackIntegrationAnalytics('integrations.installation_complete', {\n        integration_type: 'sentry_app',\n        integration: sentryApp.slug,\n        view: 'external_install',\n        integration_status: sentryApp.status,\n        organization,\n      });\n    }\n\n    if (sentryApp.redirectUrl) {\n      const queryParams = {\n        installationId: install.uuid,\n        code: install.code,\n        orgSlug: organization.slug,\n      };\n      const redirectUrl = addQueryParamsToExistingUrl(sentryApp.redirectUrl, queryParams);\n      return window.location.assign(redirectUrl);\n    }\n    return this.onClose();\n  };\n\n  onSelectOrg = async (orgSlug: string) => {\n    this.setState({selectedOrgSlug: orgSlug, reloading: true});\n\n    try {\n      const [organization, installations]: [Organization, SentryAppInstallation[]] =\n        await Promise.all([\n          this.api.requestPromise(`/organizations/${orgSlug}/`),\n          this.api.requestPromise(`/organizations/${orgSlug}/sentry-app-installations/`),\n        ]);\n      const isInstalled = installations\n        .map(install => install.app.slug)\n        .includes(this.sentryAppSlug);\n      // all state fields should be set at the same time so analytics in SentryAppDetailsModal works properly\n      this.setState({organization, isInstalled, reloading: false});\n    } catch (err) {\n      addErrorMessage(t('Failed to retrieve organization or integration details'));\n      this.setState({reloading: false});\n    }\n  };\n\n  onRequestSuccess = ({stateKey, data}) => {\n    // if only one org, we can immediately update our selected org\n    if (stateKey === 'organizations' && data.length === 1) {\n      this.onSelectOrg(data[0].slug);\n    }\n  };\n\n  getOptions() {\n    return this.state.organizations.map(org => ({\n      value: org.slug,\n      label: (\n        <div key={org.slug}>\n          <OrganizationAvatar organization={org} />\n          <OrgNameHolder>{org.slug}</OrgNameHolder>\n        </div>\n      ),\n    }));\n  }\n\n  renderInternalAppError() {\n    const {sentryApp} = this.state;\n    return (\n      <Alert type=\"error\" showIcon>\n        {tct(\n          'Integration [sentryAppName] is an internal integration. Internal integrations are automatically installed',\n          {\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  checkAndRenderError() {\n    const {organization, selectedOrgSlug, isInstalled, sentryApp} = this.state;\n    if (selectedOrgSlug && organization && !this.hasAccess(organization)) {\n      return (\n        <Alert type=\"error\" showIcon>\n          <p>\n            {tct(\n              `You do not have permission to install integrations in\n          [organization]. Ask an organization owner or manager to\n          visit this page to finish installing this integration.`,\n              {organization: <strong>{organization.slug}</strong>}\n            )}\n          </p>\n          <InstallLink>{window.location.href}</InstallLink>\n        </Alert>\n      );\n    }\n    if (isInstalled && organization) {\n      return (\n        <Alert type=\"error\" showIcon>\n          {tct('Integration [sentryAppName] already installed for [organization]', {\n            organization: <strong>{organization.name}</strong>,\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          })}\n        </Alert>\n      );\n    }\n\n    if (this.isSentryAppUnavailableForOrg) {\n      // use the slug of the owner if we have it, otherwise use 'another organization'\n      const ownerSlug = sentryApp?.owner?.slug ?? 'another organization';\n      return (\n        <Alert type=\"error\" showIcon>\n          {tct(\n            'Integration [sentryAppName] is an unpublished integration for [otherOrg]. An unpublished integration can only be installed on the organization which created it.',\n            {\n              sentryAppName: <strong>{sentryApp.name}</strong>,\n              otherOrg: <strong>{ownerSlug}</strong>,\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return null;\n  }\n\n  renderMultiOrgView() {\n    const {selectedOrgSlug, sentryApp} = this.state;\n    return (\n      <div>\n        <p>\n          {tct(\n            'Please pick a specific [organization:organization] to install [sentryAppName]',\n            {\n              organization: <strong />,\n              sentryAppName: <strong>{sentryApp.name}</strong>,\n            }\n          )}\n        </p>\n        <Field label={t('Organization')} inline={false} stacked required>\n          {() => (\n            <SelectControl\n              onChange={({value}) => this.onSelectOrg(value)}\n              value={selectedOrgSlug}\n              placeholder={t('Select an organization')}\n              options={this.getOptions()}\n            />\n          )}\n        </Field>\n      </div>\n    );\n  }\n\n  renderSingleOrgView() {\n    const {organizations, sentryApp} = this.state;\n    // pull the name out of organizations since state.organization won't be loaded initially\n    const organizationName = organizations[0].name;\n    return (\n      <div>\n        <p>\n          {tct('You are installing [sentryAppName] for organization [organization]', {\n            organization: <strong>{organizationName}</strong>,\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          })}\n        </p>\n      </div>\n    );\n  }\n\n  renderMainContent() {\n    const {organization, sentryApp} = this.state;\n    return (\n      <div>\n        <OrgViewHolder>\n          {this.isSingleOrg ? this.renderSingleOrgView() : this.renderMultiOrgView()}\n        </OrgViewHolder>\n        {this.checkAndRenderError()}\n        {organization && (\n          <SentryAppDetailsModal\n            sentryApp={sentryApp}\n            organization={organization}\n            onInstall={this.onInstall}\n            closeModal={this.onClose}\n            isInstalled={this.disableInstall}\n          />\n        )}\n      </div>\n    );\n  }\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <Content>\n          <h3>{t('Finish integration installation')}</h3>\n          {this.isSentryAppInternal\n            ? this.renderInternalAppError()\n            : this.renderMainContent()}\n        </Content>\n      </NarrowLayout>\n    );\n  }\n}\n\nconst InstallLink = styled('pre')`\n  margin-bottom: 0;\n  background: #fbe3e1;\n`;\n\nconst OrgNameHolder = styled('span')`\n  margin-left: 5px;\n`;\n\nconst Content = styled('div')`\n  margin-bottom: 40px;\n`;\n\nconst OrgViewHolder = styled('div')`\n  margin-bottom: 20px;\n`;\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n"],"names":["installSentryApp","client","orgId","app","addLoadingMessage","promise","requestPromise","method","data","slug","then","clearIndicators","addErrorMessage","t","name","uninstallSentryApp","install","uuid","capitalizedAppSlug","charAt","toUpperCase","slice","addSuccessMessage","DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","NarrowLayout","maxWidth","showLogout","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","p","theme","fontSizeLarge","SentryAppIcon","sentryApp","isColor","PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","PROJECT_RELEASES","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","permissions","filteredScopes","scopeList","filter","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","AsyncView","AsyncComponent","getTitle","title","renderComponent","SentryAppDetailsModal","componentDidUpdate","prevProps","id","trackOpened","componentDidMount","isInstalled","recordInteraction","trackIntegrationAnalytics","integration_type","integration","already_installed","view","integration_status","status","startSession","getEndpoints","featureTags","features","feature","feat","featureGate","replace","StyledTag","onInstall","_err","renderPermissions","keys","length","Fragment","Title","Permission","Indicator","Text","tct","resources","join","renderBody","closeModal","featureData","state","f","description","dangerouslySetInnerHTML","__html","singleLineRenderer","FeatureList","IntegrationFeatures","getIntegrationFeatureGate","overview","featureProps","Heading","HeadingInfo","Name","Features","Description","marked","provider","key","disabled","disabledReason","Footer","Author","author","DisabledNotice","reason","priority","marginLeft","space","gray300","color","errorText","success","Tag","SentryAppExternalInstallation","selectedOrgSlug","newUrl","referrer","redirectUrl","queryParams","installationId","code","orgSlug","addQueryParamsToExistingUrl","onClose","setState","reloading","installations","Promise","all","sentryAppSlug","err","stateKey","onSelectOrg","getDefaultState","super","organizations","params","isSingleOrg","isSentryAppInternal","isSentryAppUnavailableForOrg","owner","disableInstall","getOptions","value","label","OrgNameHolder","renderInternalAppError","sentryAppName","checkAndRenderError","InstallLink","ownerSlug","otherOrg","renderMultiOrgView","inline","stacked","required","onChange","placeholder","options","renderSingleOrgView","organizationName","renderMainContent","OrgViewHolder","Content","baseIteratee","createInverter","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","result","call","push","module","exports"],"sourceRoot":""}
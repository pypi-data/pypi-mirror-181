{"version":3,"file":"chunks/app_components_asyncComponent_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/asyncComponentSearchInput.tsx","webpack:///./app/components/asyncComponent.tsx","webpack:///./app/components/loadingError.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/styles/organization.tsx","webpack:///./app/utils/getRouteStringFromRoutes.tsx","webpack:///./app/utils/useRouteContext.tsx","webpack:///./app/utils/useRoutes.tsx","webpack:///./app/utils/withProject.tsx","webpack:///./app/views/permissionDenied.tsx","webpack:///./app/views/routeError.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport Input from 'sentry/components/input';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\ntype RenderProps = {\n  busy: boolean;\n  defaultSearchBar: React.ReactNode;\n  handleChange: (value: string) => void;\n  value: string;\n};\n\ntype DefaultProps = {\n  /**\n   * Placeholder text in the search input\n   */\n  placeholder: string;\n  /**\n   * Time in milliseconds to wait before firing off the request\n   */\n  debounceWait?: number; // optional, otherwise app/views/settings/organizationMembers/organizationMembersList.tsx L:191 is not happy\n};\n\ntype Props = WithRouterProps &\n  DefaultProps & {\n    api: Client;\n    onError: () => void;\n    onSuccess: (data: object, resp: ResponseMeta | undefined) => void;\n    /**\n     * URL to make the search request to\n     */\n    url: string;\n\n    /**\n     * A render-prop child may be passed to handle custom rendering of the input.\n     */\n    children?: (otps: RenderProps) => React.ReactNode;\n    className?: string;\n    onSearchSubmit?: (query: string, event: React.FormEvent) => void;\n\n    /**\n     * Updates URL with search query in the URL param: `query`\n     */\n    updateRoute?: boolean;\n  };\n\ntype State = {\n  busy: boolean;\n  query: string;\n};\n\n/**\n * This is a search input that can be easily used in AsyncComponent/Views.\n *\n * It probably doesn't make too much sense outside of an AsyncComponent atm.\n */\nclass AsyncComponentSearchInput extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    placeholder: t('Search...'),\n    debounceWait: 200,\n  };\n\n  state: State = {\n    query: '',\n    busy: false,\n  };\n\n  immediateQuery = async (searchQuery: string) => {\n    const {location, api} = this.props;\n    this.setState({busy: true});\n\n    try {\n      const [data, , resp] = await api.requestPromise(`${this.props.url}`, {\n        includeAllArgs: true,\n        method: 'GET',\n        query: {...location.query, query: searchQuery},\n      });\n      // only update data if the request's query matches the current query\n      if (this.state.query === searchQuery) {\n        this.props.onSuccess(data, resp);\n      }\n    } catch {\n      this.props.onError();\n    }\n\n    this.setState({busy: false});\n  };\n\n  query = debounce(this.immediateQuery, this.props.debounceWait);\n\n  handleChange = (query: string) => {\n    this.query(query);\n    this.setState({query});\n  };\n\n  handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    this.handleChange(evt.target.value);\n\n  /**\n   * This is called when \"Enter\" (more specifically a form \"submit\" event) is pressed.\n   */\n  handleSearch = (evt: React.FormEvent<HTMLFormElement>) => {\n    const {updateRoute, onSearchSubmit} = this.props;\n    evt.preventDefault();\n\n    // Update the URL to reflect search term.\n    if (updateRoute) {\n      const {router, location} = this.props;\n      router.push({\n        pathname: location.pathname,\n        query: {\n          query: this.state.query,\n        },\n      });\n    }\n\n    if (typeof onSearchSubmit !== 'function') {\n      return;\n    }\n    onSearchSubmit(this.state.query, evt);\n  };\n\n  render() {\n    const {placeholder, children, className} = this.props;\n    const {busy, query} = this.state;\n\n    const defaultSearchBar = (\n      <Form onSubmit={this.handleSearch}>\n        <Input\n          value={query}\n          onChange={this.handleInputChange}\n          className={className}\n          placeholder={placeholder}\n        />\n        {busy && <StyledLoadingIndicator size={18} hideMessage mini />}\n      </Form>\n    );\n\n    return children === undefined\n      ? defaultSearchBar\n      : children({defaultSearchBar, busy, value: query, handleChange: this.handleChange});\n  }\n}\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-13px);\n`;\n\nconst Form = styled('form')`\n  position: relative;\n`;\n\nexport default withSentryRouter(AsyncComponentSearchInput);\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\nimport * as PropTypes from 'prop-types';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport AsyncComponentSearchInput from 'sentry/components/asyncComponentSearchInput';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {metric} from 'sentry/utils/analytics';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport PermissionDenied from 'sentry/views/permissionDenied';\nimport RouteError from 'sentry/views/routeError';\n\nexport type AsyncComponentProps = Partial<RouteComponentProps<{}, {}>>;\n\ntype AsyncComponentState = {\n  [key: string]: any;\n  error: boolean;\n  errors: Record<string, ResponseMeta>;\n  loading: boolean;\n  reloading: boolean;\n  remainingRequests?: number;\n};\n\ntype SearchInputProps = React.ComponentProps<typeof AsyncComponentSearchInput>;\n\ntype RenderSearchInputArgs = Omit<\n  SearchInputProps,\n  'api' | 'onSuccess' | 'onError' | 'url' | keyof RouteComponentProps<{}, {}>\n> & {\n  stateKey?: string;\n  url?: SearchInputProps['url'];\n};\n\n/**\n * Wraps methods on the AsyncComponent to catch errors and set the `error`\n * state on error.\n */\nfunction wrapErrorHandling<T extends any[], U>(\n  component: AsyncComponent,\n  fn: (...args: T) => U\n) {\n  return (...args: T): U | null => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      window.setTimeout(() => {\n        throw error;\n      });\n      component.setState({error});\n      return null;\n    }\n  };\n}\n\nclass AsyncComponent<\n  P extends AsyncComponentProps = AsyncComponentProps,\n  S extends AsyncComponentState = AsyncComponentState\n> extends Component<P, S> {\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    this.fetchData = wrapErrorHandling(this, this.fetchData.bind(this));\n    this.render = wrapErrorHandling(this, this.render.bind(this));\n\n    this.state = this.getDefaultState() as Readonly<S>;\n\n    this._measurement = {\n      hasMeasured: false,\n    };\n    if (props.routes) {\n      metric.mark({name: `async-component-${getRouteStringFromRoutes(props.routes)}`});\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.api = new Client();\n    this.fetchData();\n\n    if (this.reloadOnVisible) {\n      document.addEventListener('visibilitychange', this.visibilityReloader);\n    }\n  }\n\n  componentDidUpdate(prevProps: P, prevContext: any) {\n    const isRouterInContext = !!prevContext.router;\n    const isLocationInProps = prevProps.location !== undefined;\n\n    const currentLocation = isLocationInProps\n      ? this.props.location\n      : isRouterInContext\n      ? this.context.router.location\n      : null;\n    const prevLocation = isLocationInProps\n      ? prevProps.location\n      : isRouterInContext\n      ? prevContext.router.location\n      : null;\n\n    if (!(currentLocation && prevLocation)) {\n      return;\n    }\n\n    // Take a measurement from when this component is initially created until it finishes it's first\n    // set of API requests\n    if (\n      !this._measurement.hasMeasured &&\n      this._measurement.finished &&\n      this.props.routes\n    ) {\n      const routeString = getRouteStringFromRoutes(this.props.routes);\n      metric.measure({\n        name: 'app.component.async-component',\n        start: `async-component-${routeString}`,\n        data: {\n          route: routeString,\n          error: this._measurement.error,\n        },\n      });\n      this._measurement.hasMeasured = true;\n    }\n\n    // Re-fetch data when router params change.\n    if (\n      !isEqual(this.props.params, prevProps.params) ||\n      currentLocation.search !== prevLocation.search ||\n      currentLocation.state !== prevLocation.state\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.removeEventListener('visibilitychange', this.visibilityReloader);\n  }\n\n  /**\n   * Override this flag to have the component reload its state when the window\n   * becomes visible again. This will set the loading and reloading state, but\n   * will not render a loading state during reloading.\n   *\n   * eslint-disable-next-line react/sort-comp\n   */\n  reloadOnVisible = false;\n\n  /**\n   * When enabling reloadOnVisible, this flag may be used to turn on and off\n   * the reloading. This is useful if your component only needs to reload when\n   * becoming visible during certain states.\n   *\n   * eslint-disable-next-line react/sort-comp\n   */\n  shouldReloadOnVisible = false;\n\n  /**\n   * This affects how the component behaves when `remountComponent` is called\n   * By default, the component gets put back into a \"loading\" state when re-fetching data.\n   * If this is true, then when we fetch data, the original ready component remains mounted\n   * and it will need to handle any additional \"reloading\" states\n   */\n  shouldReload = false;\n\n  /**\n   * should `renderError` render the `detail` attribute of a 400 error\n   */\n  shouldRenderBadRequests = false;\n\n  /**\n   * If a request fails and is not a bad request, and if `disableErrorReport` is set to false,\n   * the UI will display an error modal.\n   *\n   * It is recommended to enable this property ideally only when the subclass is used by a top level route.\n   */\n  disableErrorReport = true;\n\n  api: Client = new Client();\n  private _measurement: any;\n\n  // XXX: can't call this getInitialState as React whines\n  getDefaultState(): AsyncComponentState {\n    const endpoints = this.getEndpoints();\n    const state = {\n      // has all data finished requesting?\n      loading: true,\n      // is the component reload\n      reloading: false,\n      // is there an error loading ANY data?\n      error: false,\n      errors: {},\n    };\n    endpoints.forEach(([stateKey, _endpoint]) => {\n      state[stateKey] = null;\n    });\n    return state;\n  }\n\n  // Check if we should measure render time for this component\n  markShouldMeasure = ({\n    remainingRequests,\n    error,\n  }: {error?: any; remainingRequests?: number} = {}) => {\n    if (!this._measurement.hasMeasured) {\n      this._measurement.finished = remainingRequests === 0;\n      this._measurement.error = error || this._measurement.error;\n    }\n  };\n\n  remountComponent = () => {\n    if (this.shouldReload) {\n      this.reloadData();\n    } else {\n      this.setState(this.getDefaultState(), this.fetchData);\n    }\n  };\n\n  visibilityReloader = () =>\n    this.shouldReloadOnVisible &&\n    !this.state.loading &&\n    !document.hidden &&\n    this.reloadData();\n\n  reloadData() {\n    this.fetchData({reloading: true});\n  }\n\n  fetchData = (extraState?: object) => {\n    const endpoints = this.getEndpoints();\n\n    if (!endpoints.length) {\n      this.setState({loading: false, error: false});\n      return;\n    }\n\n    // Cancel any in flight requests\n    this.api.clear();\n\n    this.setState({\n      loading: true,\n      error: false,\n      remainingRequests: endpoints.length,\n      ...extraState,\n    });\n\n    endpoints.forEach(([stateKey, endpoint, params, options]) => {\n      options = options || {};\n      // If you're using nested async components/views make sure to pass the\n      // props through so that the child component has access to props.location\n      const locationQuery = (this.props.location && this.props.location.query) || {};\n      let query = (params && params.query) || {};\n      // If paginate option then pass entire `query` object to API call\n      // It should only be expecting `query.cursor` for pagination\n      if ((options.paginate || locationQuery.cursor) && !options.disableEntireQuery) {\n        query = {...locationQuery, ...query};\n      }\n\n      this.api.request(endpoint, {\n        method: 'GET',\n        ...params,\n        query,\n        success: (data, _, resp) => {\n          this.handleRequestSuccess({stateKey, data, resp}, true);\n        },\n        error: error => {\n          // Allow endpoints to fail\n          // allowError can have side effects to handle the error\n          if (options.allowError && options.allowError(error)) {\n            error = null;\n          }\n          this.handleError(error, [stateKey, endpoint, params, options]);\n        },\n      });\n    });\n  };\n\n  onRequestSuccess(_resp /* {stateKey, data, resp} */) {\n    // Allow children to implement this\n  }\n\n  onRequestError(_resp, _args) {\n    // Allow children to implement this\n  }\n\n  onLoadAllEndpointsSuccess() {\n    // Allow children to implement this\n  }\n\n  handleRequestSuccess({stateKey, data, resp}, initialRequest?: boolean) {\n    this.setState(\n      prevState => {\n        const state = {\n          [stateKey]: data,\n          // TODO(billy): This currently fails if this request is retried by SudoModal\n          [`${stateKey}PageLinks`]: resp?.getResponseHeader('Link'),\n        };\n\n        if (initialRequest) {\n          state.remainingRequests = prevState.remainingRequests! - 1;\n          state.loading = prevState.remainingRequests! > 1;\n          state.reloading = prevState.reloading && state.loading;\n          this.markShouldMeasure({remainingRequests: state.remainingRequests});\n        }\n\n        return state;\n      },\n      () => {\n        // if everything is loaded and we don't have an error, call the callback\n        if (this.state.remainingRequests === 0 && !this.state.error) {\n          this.onLoadAllEndpointsSuccess();\n        }\n      }\n    );\n    this.onRequestSuccess({stateKey, data, resp});\n  }\n\n  handleError(error, args) {\n    const [stateKey] = args;\n    if (error && error.responseText) {\n      Sentry.addBreadcrumb({\n        message: error.responseText,\n        category: 'xhr',\n        level: 'error',\n      });\n    }\n    this.setState(prevState => {\n      const loading = prevState.remainingRequests! > 1;\n      const state: AsyncComponentState = {\n        [stateKey]: null,\n        errors: {\n          ...prevState.errors,\n          [stateKey]: error,\n        },\n        error: prevState.error || !!error,\n        remainingRequests: prevState.remainingRequests! - 1,\n        loading,\n        reloading: prevState.reloading && loading,\n      };\n      this.markShouldMeasure({remainingRequests: state.remainingRequests, error: true});\n\n      return state;\n    });\n    this.onRequestError(error, args);\n  }\n\n  /**\n   * Return a list of endpoint queries to make.\n   *\n   * return [\n   *   ['stateKeyName', '/endpoint/', {optional: 'query params'}, {options}]\n   * ]\n   */\n  getEndpoints(): Array<[string, string, any?, any?]> {\n    return [];\n  }\n\n  renderSearchInput({stateKey, url, ...props}: RenderSearchInputArgs) {\n    const [firstEndpoint] = this.getEndpoints() || [null];\n    const stateKeyOrDefault = stateKey || (firstEndpoint && firstEndpoint[0]);\n    const urlOrDefault = url || (firstEndpoint && firstEndpoint[1]);\n    return (\n      <AsyncComponentSearchInput\n        url={urlOrDefault}\n        {...props}\n        api={this.api}\n        onSuccess={(data, resp) => {\n          this.handleRequestSuccess({stateKey: stateKeyOrDefault, data, resp});\n        }}\n        onError={() => {\n          this.renderError(new Error('Error with AsyncComponentSearchInput'));\n        }}\n      />\n    );\n  }\n\n  renderLoading(): React.ReactNode {\n    return <LoadingIndicator />;\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n\n    // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying\n    const unauthorizedErrors = Object.values(errors).find(resp => resp?.status === 401);\n\n    // Look through endpoint results to see if we had any 403s, means their role can not access resource\n    const permissionErrors = Object.values(errors).find(resp => resp?.status === 403);\n\n    // If all error responses have status code === 0, then show error message but don't\n    // log it to sentry\n    const shouldLogSentry =\n      !!Object.values(errors).find(resp => resp?.status !== 0) || disableLog;\n\n    if (unauthorizedErrors) {\n      return (\n        <LoadingError message={t('You are not authorized to access this resource.')} />\n      );\n    }\n\n    if (permissionErrors) {\n      return <PermissionDenied />;\n    }\n\n    if (this.shouldRenderBadRequests) {\n      const badRequests = Object.values(errors)\n        .filter(resp => resp?.status === 400 && resp?.responseJSON?.detail)\n        .map(resp => resp.responseJSON.detail);\n\n      if (badRequests.length) {\n        return <LoadingError message={[...new Set(badRequests)].join('\\n')} />;\n      }\n    }\n\n    return (\n      <RouteError\n        error={error}\n        disableLogSentry={!shouldLogSentry}\n        disableReport={this.disableErrorReport}\n      />\n    );\n  }\n\n  get shouldRenderLoading() {\n    return this.state.loading && (!this.shouldReload || !this.state.reloading);\n  }\n\n  renderComponent() {\n    return this.shouldRenderLoading\n      ? this.renderLoading()\n      : this.state.error\n      ? this.renderError(new Error('Unable to load all required endpoints'))\n      : this.renderBody();\n  }\n\n  /**\n   * Renders once all endpoints have been loaded\n   */\n  renderBody(): React.ReactNode {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  render() {\n    return this.renderComponent();\n  }\n}\n\nexport default AsyncComponent;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  className?: string;\n  message?: React.ReactNode;\n  onRetry?: () => void;\n};\n\n/**\n * Renders an Alert box of type \"error\". Renders a \"Retry\" button only if a\n * `onRetry` callback is defined.\n */\nfunction LoadingError({\n  className,\n  onRetry,\n  message = t('There was an error loading data.'),\n}: Props) {\n  return (\n    <StyledAlert\n      type=\"error\"\n      data-test-id=\"loading-error\"\n      showIcon\n      className={className}\n      trailingItems={\n        onRetry && (\n          <Button onClick={onRetry} type=\"button\" priority=\"default\" size=\"sm\">\n            {t('Retry')}\n          </Button>\n        )\n      }\n    >\n      {message}\n    </StyledAlert>\n  );\n}\n\nexport default LoadingError;\n\nconst StyledAlert = styled(Alert)`\n  ${Panel} & {\n    border-radius: 0;\n    border-width: 1px 0;\n  }\n`;\n","import DocumentTitle from 'react-document-title';\n\ntype Props = {\n  children?: React.ReactChild;\n  /**\n   * Should the ` - Sentry` suffix be excluded?\n   */\n  noSuffix?: boolean;\n  /**\n   * The organization slug to show in the title\n   */\n  orgSlug?: string;\n  /**\n   * The project slug to show in the title.\n   */\n  projectSlug?: string;\n\n  /**\n   * This string will be shown at the very front of the title\n   */\n  title?: string;\n};\n\n/**\n * Assigns the document title. The deepest nested version of this title will be\n * the one which is assigned.\n */\nfunction SentryDocumentTitle({\n  title = '',\n  orgSlug,\n  projectSlug,\n  noSuffix,\n  children,\n}: Props) {\n  function getPageTitle() {\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    if (projectSlug) {\n      return `${title} - ${projectSlug}`;\n    }\n\n    return title;\n  }\n\n  const pageTitle = getPageTitle();\n\n  const documentTitle = noSuffix\n    ? pageTitle\n    : pageTitle !== ''\n    ? `${pageTitle} - Sentry`\n    : 'Sentry';\n\n  return <DocumentTitle title={documentTitle}>{children}</DocumentTitle>;\n}\n\nexport default SentryDocumentTitle;\n","// Shared styles for the new org level pages with global project/env/time selection\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nexport const PageContent = styled('main')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: ${space(3)} ${space(4)};\n`;\n\nexport const PageHeader = styled('header')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${space(2)};\n  min-height: 32px;\n`;\n\nexport const HeaderTitle = styled('h4')`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  flex: 1;\n  margin: 0;\n`;\n","import {PlainRoute} from 'react-router';\nimport findLastIndex from 'lodash/findLastIndex';\n\ntype RouteWithPath = Omit<PlainRoute, 'path'> & Required<Pick<PlainRoute, 'path'>>;\n\n/**\n * Creates a route string from an array of `routes` from react-router\n *\n * It will look for the last route path that begins with a `/` and\n * concatenate all of the following routes. Skips any routes without a path\n *\n * @param {Array<{}>} routes An array of route objects from react-router\n * @return String Returns a route path\n */\nexport default function getRouteStringFromRoutes(routes?: PlainRoute[]): string {\n  if (!Array.isArray(routes)) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route): route is RouteWithPath => !!route.path);\n\n  const lastAbsolutePathIndex = findLastIndex(routesWithPaths, ({path}) =>\n    path.startsWith('/')\n  );\n\n  return routesWithPaths\n    .slice(lastAbsolutePathIndex)\n    .filter(({path}) => !!path)\n    .map(({path}) => path)\n    .join('');\n}\n","import {useContext} from 'react';\n\nimport {RouteContext} from 'sentry/views/routeContext';\n\nexport function useRouteContext() {\n  const route = useContext(RouteContext);\n  if (route === null) {\n    throw new Error(`useRouteContext called outside of routes provider`);\n  }\n  return route;\n}\n","import {useRouteContext} from 'sentry/utils/useRouteContext';\n\nexport function useRoutes() {\n  const route = useRouteContext();\n  return route.routes;\n}\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","import {useEffect} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization, Project} from 'sentry/types';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {useRoutes} from 'sentry/utils/useRoutes';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProject from 'sentry/utils/withProject';\n\nconst ERROR_NAME = 'Permission Denied';\n\ntype Props = {\n  organization: Organization;\n  project?: Project;\n};\n\nfunction PermissionDenied(props: Props) {\n  const {organization, project} = props;\n  const routes = useRoutes();\n  useEffect(() => {\n    const route = getRouteStringFromRoutes(routes);\n    Sentry.withScope(scope => {\n      scope.setFingerprint([ERROR_NAME, route]);\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', (organization && organization.features) || []);\n      scope.setExtra('orgAccess', (organization && organization.access) || []);\n      scope.setExtra('projectFeatures', (project && project.features) || []);\n      Sentry.captureException(new Error(`${ERROR_NAME}${route ? ` : ${route}` : ''}`));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <SentryDocumentTitle title={t('Permission Denied')}>\n      <PageContent>\n        <LoadingError\n          message={tct(\n            `Your role does not have the necessary permissions to access this\n             resource, please read more about [link:organizational roles]`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/accounts/membership/\" />\n              ),\n            }\n          )}\n        />\n      </PageContent>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(withProject(PermissionDenied));\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport Alert from 'sentry/components/alert';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {useRoutes} from 'sentry/utils/useRoutes';\nimport withProject from 'sentry/utils/withProject';\n\ntype Props = {\n  /**\n   * Disable logging to Sentry\n   */\n  disableLogSentry?: boolean;\n  /**\n   * Disable the report dialog\n   */\n  disableReport?: boolean;\n  error?: Error;\n  project?: Project;\n};\n\nfunction RouteError({error, disableLogSentry, disableReport, project}: Props) {\n  const routes = useRoutes();\n  const {organization} = useLegacyStore(OrganizationStore);\n\n  useEffect(() => {\n    if (disableLogSentry) {\n      return undefined;\n    }\n    if (!error) {\n      return undefined;\n    }\n\n    const route = getRouteStringFromRoutes(routes);\n    const enrichScopeContext = (scope: Sentry.Scope) => {\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', organization?.features ?? []);\n      scope.setExtra('orgAccess', organization?.access ?? []);\n      scope.setExtra('projectFeatures', project?.features ?? []);\n      return scope;\n    };\n\n    if (route) {\n      // Unexpectedly, error.message would sometimes not have a setter\n      // property, causing another exception to be thrown, and losing the\n      // original error in the process. Wrapping the mutation in a try-catch in\n      // an attempt to preserve the original error for logging.\n      //\n      // See https://github.com/getsentry/sentry/issues/16314 for more details.\n      try {\n        error.message = `${error.message}: ${route}`;\n      } catch (e) {\n        Sentry.withScope(scope => {\n          enrichScopeContext(scope);\n          Sentry.captureException(e);\n        });\n      }\n    }\n\n    // TODO(dcramer): show something in addition to embed (that contains it?)\n    // throw this in a timeout so if it errors we don't fall over\n    const reportDialogTimeout = window.setTimeout(() => {\n      Sentry.withScope(scope => {\n        enrichScopeContext(scope);\n        Sentry.captureException(error);\n      });\n\n      if (!disableReport) {\n        Sentry.showReportDialog();\n      }\n    });\n\n    return function cleanup() {\n      window.clearTimeout(reportDialogTimeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, disableLogSentry]);\n\n  // Remove the report dialog on unmount\n  useEffect(() => () => document.querySelector('.sentry-error-embed-wrapper')?.remove());\n\n  // TODO(dcramer): show additional resource links\n  return (\n    <Alert type=\"error\">\n      <Heading>{t('Oops! Something went wrong')}</Heading>\n      <p>\n        {t(`\n          It looks like you've hit an issue in our client application. Don't worry though!\n          We use Sentry to monitor Sentry and it's likely we're already looking into this!\n          `)}\n      </p>\n      <p>{t(\"If you're daring, you may want to try the following:\")}</p>\n      <List symbol=\"bullet\">\n        {window && window.adblockSuspected && (\n          <ListItem>\n            {t(\n              \"We detected something AdBlock-like. Try disabling it, as it's known to cause issues.\"\n            )}\n          </ListItem>\n        )}\n        <ListItem>\n          {tct(`Give it a few seconds and [link:reload the page].`, {\n            link: (\n              <a\n                onClick={() => {\n                  window.location.href = window.location.href;\n                }}\n              />\n            ),\n          })}\n        </ListItem>\n        <ListItem>\n          {tct(`If all else fails, [link:contact us] with more details.`, {\n            link: <a href=\"https://github.com/getsentry/sentry/issues/new/choose\" />,\n          })}\n        </ListItem>\n      </List>\n    </Alert>\n  );\n}\n\nconst Heading = styled('h1')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.4;\n  margin-bottom: ${space(1)};\n`;\n\nexport default withProject(RouteError);\n"],"names":["AsyncComponentSearchInput","Component","query","busy","async","location","api","this","props","setState","data","resp","requestPromise","url","includeAllArgs","method","searchQuery","state","onSuccess","onError","debounce","immediateQuery","debounceWait","evt","handleChange","target","value","updateRoute","onSearchSubmit","preventDefault","router","push","pathname","render","placeholder","children","className","defaultSearchBar","Form","onSubmit","handleSearch","onChange","handleInputChange","StyledLoadingIndicator","size","hideMessage","mini","undefined","t","LoadingIndicator","withSentryRouter","wrapErrorHandling","component","fn","error","console","window","setTimeout","AsyncComponent","constructor","context","super","Client","remainingRequests","_measurement","hasMeasured","finished","shouldReload","reloadData","getDefaultState","fetchData","shouldReloadOnVisible","loading","document","hidden","extraState","endpoints","getEndpoints","length","clear","forEach","stateKey","endpoint","params","options","locationQuery","paginate","cursor","disableEntireQuery","request","success","_","handleRequestSuccess","allowError","handleError","bind","routes","metric","name","getRouteStringFromRoutes","UNSAFE_componentWillMount","reloadOnVisible","addEventListener","visibilityReloader","componentDidUpdate","prevProps","prevContext","isRouterInContext","isLocationInProps","currentLocation","prevLocation","routeString","start","route","isEqual","search","remountComponent","componentWillUnmount","removeEventListener","reloading","errors","_endpoint","onRequestSuccess","_resp","onRequestError","_args","onLoadAllEndpointsSuccess","initialRequest","prevState","getResponseHeader","markShouldMeasure","args","responseText","Sentry","message","category","level","renderSearchInput","firstEndpoint","stateKeyOrDefault","urlOrDefault","renderError","Error","renderLoading","disableLog","unauthorizedErrors","Object","values","find","status","permissionErrors","shouldLogSentry","shouldRenderBadRequests","badRequests","filter","responseJSON","detail","map","Set","join","disableLogSentry","disableReport","disableErrorReport","shouldRenderLoading","renderComponent","renderBody","PropTypes","LoadingError","onRetry","StyledAlert","type","showIcon","trailingItems","onClick","priority","Alert","Panel","SentryDocumentTitle","title","orgSlug","projectSlug","noSuffix","pageTitle","documentTitle","PageContent","space","PageHeader","HeaderTitle","p","theme","text","headingColor","Array","isArray","routesWithPaths","path","lastAbsolutePathIndex","findLastIndex","startsWith","slice","useRouteContext","useContext","RouteContext","useRoutes","WrappedComponent","project","getDisplayName","SentryTypes","ERROR_NAME","PermissionDenied","organization","useEffect","scope","setFingerprint","setExtra","features","access","tct","link","href","withOrganization","withProject","RouteError","useLegacyStore","OrganizationStore","enrichScopeContext","e","reportDialogTimeout","clearTimeout","querySelector","remove","Heading","symbol","adblockSuspected","fontSizeLarge"],"sourceRoot":""}
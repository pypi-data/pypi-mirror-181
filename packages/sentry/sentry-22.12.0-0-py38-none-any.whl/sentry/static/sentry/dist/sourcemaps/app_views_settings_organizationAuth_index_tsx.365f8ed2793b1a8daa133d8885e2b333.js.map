{"version":3,"file":"chunks/app_views_settings_organizationAuth_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationAuth/providerItem.tsx","webpack:///./app/views/settings/organizationAuth/organizationAuthList.tsx","webpack:///./app/views/settings/organizationAuth/index.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {ReactNode} from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Organization, Scope} from 'sentry/types';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> & {\n  access?: Scope[];\n  message?: ReactNode;\n  organization?: Organization;\n};\n\nfunction PermissionAlert({\n  access = ['org:write'],\n  message = t(\n    'These settings can only be edited by users with the organization owner or manager role.'\n  ),\n  organization,\n  ...props\n}: Props) {\n  return (\n    <Access access={access} organization={organization}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"org-permission-alert\" type=\"warning\" showIcon {...props}>\n            {message}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport Button from 'sentry/components/button';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport {IconLock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AuthProvider} from 'sentry/types';\nimport {FeatureDisabledHooks} from 'sentry/types/hooks';\nimport {descopeFeatureName} from 'sentry/utils';\n\ntype RenderInstallButtonProps = {\n  hasFeature: boolean;\n  /**\n   * We pass the provider so that it may be passed into any hook provided\n   * callbacks.\n   */\n  provider: AuthProvider;\n};\n\ntype LockedFeatureProps = {\n  features: string[];\n  provider: AuthProvider;\n  className?: string;\n};\n\ntype FeatureRenderProps = {\n  features: string[];\n  hasFeature: boolean;\n  renderDisabled: (p: LockedFeatureProps) => React.ReactNode;\n  renderInstallButton: (p: RenderInstallButtonProps) => React.ReactNode;\n  children?: (p: FeatureRenderProps) => React.ReactNode;\n};\n\ntype Props = {\n  active: boolean;\n  provider: AuthProvider;\n  onConfigure?: (providerKey: string, e: React.MouseEvent) => void;\n};\n\nconst ProviderItem = ({provider, active, onConfigure}: Props) => {\n  const handleConfigure = (e: React.MouseEvent) => {\n    onConfigure?.(provider.key, e);\n  };\n\n  const renderDisabledLock = (p: LockedFeatureProps) => (\n    <LockedFeature provider={p.provider} features={p.features} />\n  );\n\n  const defaultRenderInstallButton = ({hasFeature}: RenderInstallButtonProps) => (\n    <Access access={['org:write']}>\n      {({hasAccess}) => (\n        <Button\n          type=\"submit\"\n          name=\"provider\"\n          size=\"sm\"\n          value={provider.key}\n          disabled={!hasFeature || !hasAccess}\n          onClick={handleConfigure}\n        >\n          {t('Configure')}\n        </Button>\n      )}\n    </Access>\n  );\n\n  // TODO(epurkhiser): We should probably use a more explicit hook name,\n  // instead of just the feature names (sso-basic, sso-saml2, etc).\n  const featureKey = provider.requiredFeature;\n  const hookName = featureKey\n    ? (`feature-disabled:${descopeFeatureName(featureKey)}` as keyof FeatureDisabledHooks)\n    : null;\n\n  const featureProps = hookName ? {hookName} : {};\n\n  const getProviderDescription = providerName => {\n    if (providerName === 'SAML2') {\n      return t(\n        'your preferred SAML2 compliant provider like Ping Identity, Google SAML, Keycloak, or VMware Identity Manager'\n      );\n    }\n\n    if (providerName === 'Google') {\n      return t('Google (OAuth)');\n    }\n\n    return providerName;\n  };\n\n  return (\n    <Feature\n      {...featureProps}\n      features={[featureKey].filter(f => f)}\n      renderDisabled={({children, ...props}) =>\n        typeof children === 'function' &&\n        // TODO(ts): the Feature component isn't correctly templatized to allow\n        // for custom props in the renderDisabled function\n        children({...props, renderDisabled: renderDisabledLock as any})\n      }\n    >\n      {({\n        hasFeature,\n        features,\n        renderDisabled,\n        renderInstallButton,\n      }: FeatureRenderProps) => (\n        <PanelItem center>\n          <ProviderInfo>\n            <ProviderLogo\n              className={`provider-logo ${provider.name\n                .replace(/\\s/g, '-')\n                .toLowerCase()}`}\n            />\n            <div>\n              <ProviderName>{provider.name}</ProviderName>\n              <ProviderDescription>\n                {t(\n                  'Enable your organization to sign in with %s.',\n                  getProviderDescription(provider.name)\n                )}\n              </ProviderDescription>\n            </div>\n          </ProviderInfo>\n\n          <FeatureBadge>\n            {!hasFeature && renderDisabled({provider, features})}\n          </FeatureBadge>\n\n          <div>\n            {active ? (\n              <ActiveIndicator />\n            ) : (\n              (renderInstallButton ?? defaultRenderInstallButton)({provider, hasFeature})\n            )}\n          </div>\n        </PanelItem>\n      )}\n    </Feature>\n  );\n};\n\nexport default ProviderItem;\n\nconst ProviderInfo = styled('div')`\n  flex: 1;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(2)};\n`;\n\nconst ProviderLogo = styled('div')`\n  height: 36px;\n  width: 36px;\n  border-radius: 3px;\n  margin-right: 0;\n  top: auto;\n`;\n\nconst ProviderName = styled('div')`\n  font-weight: bold;\n`;\n\nconst ProviderDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n`;\n\nconst FeatureBadge = styled('div')`\n  flex: 1;\n`;\n\nconst ActiveIndicator = styled('div')`\n  background: ${p => p.theme.green300};\n  color: ${p => p.theme.white};\n  padding: ${space(1)} ${space(1.5)};\n  border-radius: 2px;\n  font-size: 0.8em;\n`;\n\nActiveIndicator.defaultProps = {\n  children: t('Active'),\n};\n\nconst DisabledHovercard = styled(Hovercard)`\n  width: 350px;\n`;\n\nconst LockedFeature = ({provider, features, className}: LockedFeatureProps) => (\n  <DisabledHovercard\n    containerClassName={className}\n    body={\n      <FeatureDisabled\n        features={features}\n        hideHelpToggle\n        message={t('%s SSO is disabled.', provider.name)}\n        featureName={t('SSO Auth')}\n      />\n    }\n  >\n    <Tag role=\"status\" icon={<IconLock isSolid />}>\n      {t('disabled')}\n    </Tag>\n  </DisabledHovercard>\n);\n","import EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {AuthProvider, Organization} from 'sentry/types';\nimport {descopeFeatureName} from 'sentry/utils';\nimport getCsrfToken from 'sentry/utils/getCsrfToken';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/organization/permissionAlert';\n\nimport ProviderItem from './providerItem';\n\nconst PROVIDER_POPULARITY: Record<string, number> = {\n  google: 0,\n  github: 1,\n  okta: 2,\n  'active-directory': 3,\n  saml2: 4,\n  onelogin: 5,\n  rippling: 6,\n  auth0: 7,\n  jumpcloud: 8,\n};\n\ntype Props = {\n  organization: Organization;\n  providerList: AuthProvider[];\n  activeProvider?: AuthProvider;\n};\n\nconst OrganizationAuthList = ({organization, providerList, activeProvider}: Props) => {\n  const features = organization.features;\n\n  // Sort provider list twice: first, by popularity,\n  // and then a second time, to sort unavailable providers for the current plan to the end of the list.\n  const sortedByPopularity = (providerList ?? []).sort((a, b) => {\n    if (!(a.key in PROVIDER_POPULARITY)) {\n      return -1;\n    }\n    if (!(b.key in PROVIDER_POPULARITY)) {\n      return 1;\n    }\n    if (PROVIDER_POPULARITY[a.key] === PROVIDER_POPULARITY[b.key]) {\n      return 0;\n    }\n    return PROVIDER_POPULARITY[a.key] > PROVIDER_POPULARITY[b.key] ? 1 : -1;\n  });\n\n  const list = sortedByPopularity.sort((a, b) => {\n    const aEnabled = features.includes(descopeFeatureName(a.requiredFeature));\n    const bEnabled = features.includes(descopeFeatureName(b.requiredFeature));\n    if (aEnabled === bEnabled) {\n      return 0;\n    }\n    return aEnabled ? -1 : 1;\n  });\n\n  const warn2FADisable =\n    organization.require2FA &&\n    list.some(({requiredFeature}) =>\n      features.includes(descopeFeatureName(requiredFeature))\n    );\n\n  return (\n    <div className=\"sso\">\n      <SettingsPageHeader title=\"Authentication\" />\n      <PermissionAlert />\n      <Panel>\n        <PanelHeader>{t('Choose a provider')}</PanelHeader>\n        <PanelBody>\n          {!activeProvider && (\n            <PanelAlert type=\"info\">\n              {tct(\n                'Get started with Single Sign-on for your organization by selecting a provider. Read more in our [link:SSO documentation].',\n                {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/accounts/sso/\" />\n                  ),\n                }\n              )}\n            </PanelAlert>\n          )}\n\n          {warn2FADisable && (\n            <PanelAlert type=\"warning\">\n              {t('Require 2FA will be disabled if you enable SSO.')}\n            </PanelAlert>\n          )}\n\n          <form\n            action={`/organizations/${organization.slug}/auth/configure/`}\n            method=\"POST\"\n          >\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={getCsrfToken()} />\n            <input type=\"hidden\" name=\"init\" value=\"1\" />\n\n            {list.map(provider => (\n              <ProviderItem\n                key={provider.key}\n                provider={provider}\n                active={!!activeProvider && provider.key === activeProvider.key}\n              />\n            ))}\n            {list.length === 0 && (\n              <EmptyMessage>\n                {t('No authentication providers are available.')}\n              </EmptyMessage>\n            )}\n          </form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n};\n\nexport default withOrganization(OrganizationAuthList);\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {AuthProvider, Organization} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport OrganizationAuthList from './organizationAuthList';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  provider: AuthProvider | null;\n  providerList: AuthProvider[] | null;\n};\n\nclass OrganizationAuth extends AsyncView<Props, State> {\n  componentDidUpdate() {\n    const access = this.props.organization.access;\n\n    if (this.state.provider && access.includes('org:write')) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      const path = `/organizations/${this.props.params.orgId}/auth/configure/`;\n\n      // Don't break the back button by first replacing the current history\n      // state so pressing back skips this react view.\n      this.props.router.replace(path);\n      window.location.assign(path);\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],\n      ['provider', `/organizations/${this.props.params.orgId}/auth-provider/`],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Auth Settings'), this.props.organization.slug, false);\n  }\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleSendReminders = (_provider: AuthProvider) => {\n    this.setState({sendRemindersBusy: true});\n\n    this.api.request(\n      `/organizations/${this.props.params.orgId}/auth-provider/send-reminders/`,\n      {\n        method: 'POST',\n        data: {},\n        success: () => addSuccessMessage(t('Sent reminders to members')),\n        error: () => addErrorMessage(t('Failed to send reminders')),\n        complete: () => this.setState({sendRemindersBusy: false}),\n      }\n    );\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleConfigure = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'POST',\n      data: {provider, init: true},\n      success: data => {\n        // Redirect to auth provider URL\n        if (data && data.auth_url) {\n          window.location.href = data.auth_url;\n        }\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleDisableProvider = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'DELETE',\n      data: {provider},\n      success: () => {\n        this.setState({provider: null, busy: false});\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    const {providerList, provider} = this.state;\n\n    if (providerList === null) {\n      return null;\n    }\n\n    if (this.props.organization.access.includes('org:write') && provider) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      return this.renderLoading();\n    }\n\n    const activeProvider = providerList?.find(p => p.key === provider?.key);\n\n    return (\n      <OrganizationAuthList activeProvider={activeProvider} providerList={providerList} />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuth);\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","title","renderComponent","PermissionAlert","message","ProviderItem","provider","active","onConfigure","handleConfigure","e","key","renderDisabledLock","p","LockedFeature","features","defaultRenderInstallButton","hasFeature","name","size","value","disabled","onClick","featureKey","requiredFeature","hookName","descopeFeatureName","featureProps","filter","f","renderDisabled","renderInstallButton","center","ProviderInfo","ProviderLogo","className","replace","toLowerCase","ProviderName","ProviderDescription","providerName","FeatureBadge","ActiveIndicator","space","theme","fontSizeSmall","subText","green300","white","defaultProps","DisabledHovercard","Hovercard","containerClassName","body","hideHelpToggle","featureName","role","icon","isSolid","PROVIDER_POPULARITY","google","github","okta","saml2","onelogin","rippling","auth0","jumpcloud","OrganizationAuthList","providerList","activeProvider","list","sort","a","b","aEnabled","warn2FADisable","require2FA","some","tct","link","href","action","slug","method","getCsrfToken","map","length","OrganizationAuth","_provider","setState","sendRemindersBusy","api","request","params","orgId","data","success","addSuccessMessage","error","addErrorMessage","complete","busy","init","auth_url","window","location","componentDidUpdate","state","path","router","assign","getEndpoints","routeTitleGen","renderBody","renderLoading","find"],"sourceRoot":""}
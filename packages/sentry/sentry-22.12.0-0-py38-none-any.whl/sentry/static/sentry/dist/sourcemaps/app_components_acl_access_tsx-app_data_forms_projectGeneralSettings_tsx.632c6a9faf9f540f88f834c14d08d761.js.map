{"version":3,"file":"chunks/app_components_acl_access_tsx-app_data_forms_projectGeneralSettings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/data/forms/projectGeneralSettings.tsx","webpack:///./app/utils/slugify.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {createFilter} from 'react-select';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Field} from 'sentry/components/forms/types';\nimport platforms from 'sentry/data/platforms';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {convertMultilineFieldValue, extractMultilineFields} from 'sentry/utils';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport slugify from 'sentry/utils/slugify';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/';\n\nconst getResolveAgeAllowedValues = () => {\n  let i = 0;\n  const values: number[] = [];\n  while (i <= 720) {\n    values.push(i);\n    if (i < 12) {\n      i += 1;\n    } else if (i < 24) {\n      i += 3;\n    } else if (i < 36) {\n      i += 6;\n    } else if (i < 48) {\n      i += 12;\n    } else {\n      i += 24;\n    }\n  }\n  return values;\n};\n\nconst RESOLVE_AGE_ALLOWED_VALUES = getResolveAgeAllowedValues();\n\nconst ORG_DISABLED_REASON = t(\n  \"This option is enforced by your organization's settings and cannot be customized per-project.\"\n);\n\nconst PlatformWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport const fields: Record<string, Field> = {\n  name: {\n    name: 'name',\n    type: 'string',\n    required: true,\n    label: t('Name'),\n    placeholder: t('my-awesome-project'),\n    help: t('A name for this project'),\n    transformInput: slugify,\n    getData: (data: {name?: string}) => {\n      return {\n        name: data.name,\n        slug: data.name,\n      };\n    },\n\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t('You will be redirected to the new project slug after saving'),\n  },\n\n  platform: {\n    name: 'platform',\n    type: 'select',\n    label: t('Platform'),\n    options: platforms.map(({id, name}) => ({\n      value: id,\n      label: (\n        <PlatformWrapper key={id}>\n          <StyledPlatformIcon platform={id} />\n          {name}\n        </PlatformWrapper>\n      ),\n    })),\n    help: t('The primary platform for this project'),\n    filterOption: createFilter({\n      stringify: option => {\n        const matchedPlatform = platforms.find(({id}) => id === option.value);\n        return `${matchedPlatform?.name} ${option.value}`;\n      },\n    }),\n  },\n\n  subjectPrefix: {\n    name: 'subjectPrefix',\n    type: 'string',\n    label: t('Subject Prefix'),\n    placeholder: t('e.g. [my-org]'),\n    help: t('Choose a custom prefix for emails from this project'),\n  },\n\n  resolveAge: {\n    name: 'resolveAge',\n    type: 'range',\n    allowedValues: RESOLVE_AGE_ALLOWED_VALUES,\n    label: t('Auto Resolve'),\n    help: t(\n      \"Automatically resolve an issue if it hasn't been seen for this amount of time\"\n    ),\n    formatLabel: val => {\n      val = Number(val);\n      if (val === 0) {\n        return t('Disabled');\n      }\n\n      if (val > 23 && val % 24 === 0) {\n        // Based on allowed values, val % 24 should always be true\n        val = val / 24;\n        return tn('%s day', '%s days', val);\n      }\n\n      return tn('%s hour', '%s hours', val);\n    },\n    saveOnBlur: false,\n    saveMessage: tct(\n      '[strong:Caution]: Enabling auto resolve will immediately resolve anything that has not been seen within this period of time. There is no undo!',\n      {\n        strong: <strong />,\n      }\n    ),\n    saveMessageAlertType: 'warning',\n  },\n  allowedDomains: {\n    name: 'allowedDomains',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n    placeholder: t('https://example.com or example.com'),\n    label: t('Allowed Domains'),\n    help: t(\n      'Examples: https://example.com, *, *.example.com, *:80. Separate multiple entries with a newline'\n    ),\n    getValue: val => extractMultilineFields(val),\n    setValue: val => convertMultilineFieldValue(val),\n  },\n  scrapeJavaScript: {\n    name: 'scrapeJavaScript',\n    type: 'boolean',\n    // if this is off for the organization, it cannot be enabled for the project\n    disabled: ({organization, name}) => !organization[name],\n    disabledReason: ORG_DISABLED_REASON,\n    // `props` are the props given to FormField\n    setValue: (val, props) => props.organization && props.organization[props.name] && val,\n    label: t('Enable JavaScript source fetching'),\n    help: t('Allow Sentry to scrape missing JavaScript source context when possible'),\n  },\n  securityToken: {\n    name: 'securityToken',\n    type: 'string',\n    label: t('Security Token'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n    setValue: value => getDynamicText({value, fixed: '__SECURITY_TOKEN__'}),\n  },\n  securityTokenHeader: {\n    name: 'securityTokenHeader',\n    type: 'string',\n    placeholder: t('X-Sentry-Token'),\n    label: t('Security Token Header'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n  },\n  verifySSL: {\n    name: 'verifySSL',\n    type: 'boolean',\n    label: t('Verify TLS/SSL'),\n    help: t('Outbound requests will verify TLS (sometimes known as SSL) connections'),\n  },\n};\n","/**\n * Transforms the given string to a slugified version. (e.g. \"My Project\" => \"my-project\")\n *\n * Allows only lowercase alphanumeric values, hyphens, and underscores (should match backend validation rules).\n * Normalizes special characters to a-z where applicable (accents, ligatures, etc).\n * Converts spaces to hyphens.\n */\nexport default function slugify(str: string): string {\n  return str\n    .normalize('NFKD') // Converts accents/ligatures/etc to latin alphabet\n    .toLowerCase()\n    .replace(' ', '-')\n    .replace(/[^a-z0-9-_]/g, ''); // Remove all invalid characters\n}\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","route","RESOLVE_AGE_ALLOWED_VALUES","i","values","push","getResolveAgeAllowedValues","ORG_DISABLED_REASON","PlatformWrapper","StyledPlatformIcon","PlatformIcon","space","fields","name","required","label","placeholder","help","transformInput","slugify","getData","data","slug","saveOnBlur","saveMessageAlertType","saveMessage","platform","options","platforms","id","value","filterOption","createFilter","stringify","option","subjectPrefix","resolveAge","allowedValues","formatLabel","val","Number","tn","tct","strong","allowedDomains","multiline","autosize","maxRows","rows","getValue","extractMultilineFields","setValue","convertMultilineFieldValue","scrapeJavaScript","disabled","disabledReason","securityToken","getDynamicText","fixed","securityTokenHeader","verifySSL","str","normalize","toLowerCase","replace"],"sourceRoot":""}
{"version":3,"file":"chunks/app_views_settings_account_apiNewToken_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"gcAMA,MAAMA,GAA0B,OAAO,MAAK,oBAAZ,CAAa,sDAKvCC,GAAQ,OAAO,QAAO,oBAAd,CAAe,gHAQvBC,GAAgB,OAAO,OAAM,oBAAb,CAAc,2CAapC,SAASC,EAAiB,GAA6C,IAA7C,QAACC,EAAO,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAgB,EACnE,MAAMC,GAAeC,EAAAA,EAAAA,cACnB,CAACC,EAAgCC,KAC/B,IAAIC,EAA0B,GAEN,mBAAbL,IAKTK,EADED,EAAEE,OAAOC,QACAT,EAAQ,IAAIA,EAAOK,GAAiB,CAACL,GAErCA,EAAMU,QAAOC,GAAKA,IAAMN,IAGrCH,EAASK,EAAUD,GAAE,GAEvB,CAACN,EAAOE,IAGV,OACE,QAACP,EAAuB,UACrBI,EAAQa,KAAI,QAAEC,EAAaC,GAAY,SACtC,QAACC,EAAc,WACb,QAACnB,EAAK,YACJ,iBACEoB,KAAK,WACLhB,MAAOa,EACPX,SAAUI,GAAKH,EAAaU,EAAaP,GACzCL,SAAUA,EACVQ,SAASQ,EAAAA,EAAAA,IAAQjB,KAA0C,IAAhCA,EAAMkB,QAAQL,MAE3C,QAAChB,EAAa,UAAEiB,QATCD,EAWJ,KAIzB,CAtCSf,EAAgB,+BAwCzB,UAEMiB,GAAiB,OAAO,MAAK,oBAAZ,CAAa,kCAGbI,GAAKA,EAAEC,MAAMC,YAAYC,OAAK,oCAG9BH,GAAKA,EAAEC,MAAMC,YAAYE,QAAM,wCAG/BJ,GAAKA,EAAEC,MAAMC,YAAYG,OAAK,gB,wyBCpErD,MAAMC,EAAmCC,EAAAA,GAAAA,OACnCC,EAAuBC,EAAAA,GAAAA,KAAsBC,GAAK,CAACA,EAAGA,KACtDC,EAAkB,qCAET,MAAMC,UAAoBC,EAAAA,UAAU,2DACtC,KACTC,EAAAA,eAAAA,KAAoBH,EAAgB,KACrC,+BAEiB,KAChBG,EAAAA,eAAAA,KAAoBH,EAAgB,GACrC,CAEDI,SACE,OACE,QAAC,IAAmB,CAACC,OAAOC,EAAAA,EAAAA,GAAE,oBAAoB,UAChD,0BACE,QAAC,IAAkB,CAACD,OAAOC,EAAAA,EAAAA,GAAE,uBAC7B,QAAC,IAAS,WACPA,EAAAA,EAAAA,GACC,iKAGJ,QAAC,IAAS,WACPC,EAAAA,EAAAA,IACC,gFACA,CACEC,MAAM,QAAC,IAAY,CAACC,KAAK,qCAI/B,QAAC,KAAK,YACJ,QAAC,KAAW,WAAEH,EAAAA,EAAAA,GAAE,uBAChB,QAAC,IAAO,CACNI,UAAU,OACVC,YAAY,eACZC,YAAa,CAACC,OAAQlB,GACtBmB,gBAAiBC,KAAKD,gBACtBE,SAAUD,KAAKC,SACfC,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,aAAad,EAAAA,EAAAA,GAAE,gBAAgB,UAE/B,QAAC,IAAS,WACR,QAAC,IAAS,CAACe,KAAK,SAASC,OAAOhB,EAAAA,EAAAA,GAAE,UAAWiB,QAAQ,EAAOC,UAAQ,WACjE,QAAC,MAACtD,EAAK,SAAEE,GAAS,SACjB,QAAC,IAAgB,CACfA,SAAUA,EACVF,MAAOA,EACPD,QAAS4B,GACT,eASpB,EAzDmBI,EAAW,yB","sources":["webpack:///./app/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/account/apiNewToken.tsx"],"sourcesContent":["import {useCallback} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  choices: Choices;\n  value: (string | number)[];\n  disabled?: boolean;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nfunction MultipleCheckbox({choices, value, disabled, onChange}: Props) {\n  const handleChange = useCallback(\n    (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue: SelectedValue = [];\n\n      if (typeof onChange !== 'function') {\n        return;\n      }\n\n      if (e.target.checked) {\n        newValue = value ? [...value, selectedValue] : [value];\n      } else {\n        newValue = value.filter(v => v !== selectedValue);\n      }\n\n      onChange(newValue, e);\n    },\n    [value, onChange]\n  );\n\n  return (\n    <MultipleCheckboxWrapper>\n      {choices.map(([choiceValue, choiceLabel]) => (\n        <LabelContainer key={choiceValue}>\n          <Label>\n            <input\n              type=\"checkbox\"\n              value={choiceValue}\n              onChange={e => handleChange(choiceValue, e)}\n              disabled={disabled}\n              checked={defined(value) && value.indexOf(choiceValue) !== -1}\n            />\n            <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n          </Label>\n        </LabelContainer>\n      ))}\n    </MultipleCheckboxWrapper>\n  );\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    width: 25%;\n  }\n`;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport FormField from 'sentry/components/forms/formField';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {API_ACCESS_SCOPES, DEFAULT_API_ACCESS_SCOPES} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {Choices} from 'sentry/types';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst SORTED_DEFAULT_API_ACCESS_SCOPES = DEFAULT_API_ACCESS_SCOPES.sort();\nconst API_CHOICES: Choices = API_ACCESS_SCOPES.map(s => [s, s]);\nconst API_INDEX_ROUTE = '/settings/account/api/auth-tokens/';\n\nexport default class ApiNewToken extends Component {\n  onCancel = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  onSubmitSuccess = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  render() {\n    return (\n      <SentryDocumentTitle title={t('Create API Token')}>\n        <div>\n          <SettingsPageHeader title={t('Create New Token')} />\n          <TextBlock>\n            {t(\n              \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n            )}\n          </TextBlock>\n          <TextBlock>\n            {tct(\n              'For more information on how to use the web API, see our [link:documentation].',\n              {\n                link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n              }\n            )}\n          </TextBlock>\n          <Panel>\n            <PanelHeader>{t('Create New Token')}</PanelHeader>\n            <ApiForm\n              apiMethod=\"POST\"\n              apiEndpoint=\"/api-tokens/\"\n              initialData={{scopes: SORTED_DEFAULT_API_ACCESS_SCOPES}}\n              onSubmitSuccess={this.onSubmitSuccess}\n              onCancel={this.onCancel}\n              footerStyle={{\n                marginTop: 0,\n                paddingRight: 20,\n              }}\n              submitLabel={t('Create Token')}\n            >\n              <PanelBody>\n                <FormField name=\"scopes\" label={t('Scopes')} inline={false} required>\n                  {({value, onChange}) => (\n                    <MultipleCheckbox\n                      onChange={onChange}\n                      value={value}\n                      choices={API_CHOICES}\n                    />\n                  )}\n                </FormField>\n              </PanelBody>\n            </ApiForm>\n          </Panel>\n        </div>\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","choices","value","disabled","onChange","handleChange","useCallback","selectedValue","e","newValue","target","checked","filter","v","map","choiceValue","choiceLabel","LabelContainer","type","defined","indexOf","p","theme","breakpoints","small","medium","large","SORTED_DEFAULT_API_ACCESS_SCOPES","DEFAULT_API_ACCESS_SCOPES","API_CHOICES","API_ACCESS_SCOPES","s","API_INDEX_ROUTE","ApiNewToken","Component","browserHistory","render","title","t","tct","link","href","apiMethod","apiEndpoint","initialData","scopes","onSubmitSuccess","this","onCancel","footerStyle","marginTop","paddingRight","submitLabel","name","label","inline","required"],"sourceRoot":""}
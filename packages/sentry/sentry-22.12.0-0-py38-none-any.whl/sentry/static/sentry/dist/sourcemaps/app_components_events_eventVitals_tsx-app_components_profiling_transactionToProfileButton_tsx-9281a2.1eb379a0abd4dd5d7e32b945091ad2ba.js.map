{"version":3,"file":"chunks/app_components_events_eventVitals_tsx-app_components_profiling_transactionToProfileButton_tsx-9281a2.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/measurements/index.tsx","webpack:///./app/components/events/eventVitals.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/profiling/transactionToProfileButton.tsx","webpack:///./app/components/tagsTableRow.tsx","webpack:///./app/components/tagsTable.tsx","webpack:///./app/utils/performance/quickTrace/traceLiteQuery.tsx","webpack:///./app/utils/performance/quickTrace/quickTraceQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceFullQuery.tsx","webpack:///./app/utils/profiling/routes.tsx"],"sourcesContent":["import {getDuration} from 'sentry/utils/formatters';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport function formattedValue(record: Vital | undefined, value: number): string {\n  if (record && record.type === 'duration') {\n    return getDuration(value / 1000, 3);\n  }\n  if (record && record.type === 'integer') {\n    return value.toFixed(0);\n  }\n\n  return value.toFixed(3);\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {Panel} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFire, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {formattedValue} from 'sentry/utils/measurements/index';\nimport {\n  MOBILE_VITAL_DETAILS,\n  WEB_VITAL_DETAILS,\n} from 'sentry/utils/performance/vitals/constants';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\nimport {IconSize} from 'sentry/utils/theme';\n\nfunction isOutdatedSdk(event: Event): boolean {\n  if (!event.sdk?.version) {\n    return false;\n  }\n\n  const sdkVersion = event.sdk.version;\n  return (\n    sdkVersion.startsWith('5.26.') ||\n    sdkVersion.startsWith('5.27.0') ||\n    sdkVersion.startsWith('5.27.1') ||\n    sdkVersion.startsWith('5.27.2')\n  );\n}\n\ntype Props = {\n  event: Event;\n};\n\nexport default function EventVitals({event}: Props) {\n  return (\n    <Fragment>\n      <WebVitals event={event} />\n      <MobileVitals event={event} />\n    </Fragment>\n  );\n}\n\nfunction WebVitals({event}: Props) {\n  const measurementNames = Object.keys(event.measurements ?? {})\n    .filter(name => Boolean(WEB_VITAL_DETAILS[`measurements.${name}`]))\n    .sort();\n\n  if (measurementNames.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <SectionHeading>\n        {t('Web Vitals')}\n        {isOutdatedSdk(event) && (\n          <WarningIconContainer data-test-id=\"outdated-sdk-warning\" size=\"sm\">\n            <Tooltip\n              title={t(\n                'These vitals were collected using an outdated SDK version and may not be accurate. To ensure accurate web vitals in new transaction events, please update your SDK to the latest version.'\n              )}\n              position=\"top\"\n              containerDisplayMode=\"inline-block\"\n            >\n              <IconWarning size=\"sm\" />\n            </Tooltip>\n          </WarningIconContainer>\n        )}\n      </SectionHeading>\n      <Measurements>\n        {measurementNames.map(name => {\n          // Measurements are referred to by their full name `measurements.<name>`\n          // here but are stored using their abbreviated name `<name>`. Make sure\n          // to convert it appropriately.\n          const measurement = `measurements.${name}`;\n          const vital = WEB_VITAL_DETAILS[measurement];\n\n          return <EventVital key={name} event={event} name={name} vital={vital} />;\n        })}\n      </Measurements>\n    </Container>\n  );\n}\n\nfunction MobileVitals({event}: Props) {\n  const measurementNames = Object.keys(event.measurements ?? {})\n    .filter(name => Boolean(MOBILE_VITAL_DETAILS[`measurements.${name}`]))\n    .sort();\n\n  if (measurementNames.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <SectionHeading>{t('Mobile Vitals')}</SectionHeading>\n      <Measurements>\n        {measurementNames.map(name => {\n          // Measurements are referred to by their full name `measurements.<name>`\n          // here but are stored using their abbreviated name `<name>`. Make sure\n          // to convert it appropriately.\n          const measurement = `measurements.${name}`;\n          const vital = MOBILE_VITAL_DETAILS[measurement];\n\n          return <EventVital key={name} event={event} name={name} vital={vital} />;\n        })}\n      </Measurements>\n    </Container>\n  );\n}\n\ntype EventVitalProps = Props & {\n  name: string;\n  vital?: Vital;\n};\n\nfunction EventVital({event, name, vital}: EventVitalProps) {\n  const value = event.measurements?.[name].value ?? null;\n  if (value === null || !vital) {\n    return null;\n  }\n\n  const failedThreshold = defined(vital.poorThreshold) && value >= vital.poorThreshold;\n\n  const currentValue = formattedValue(vital, value);\n  const thresholdValue = formattedValue(vital, vital?.poorThreshold ?? 0);\n\n  return (\n    <EventVitalContainer>\n      <StyledPanel failedThreshold={failedThreshold}>\n        <Name>{vital.name ?? name}</Name>\n        <ValueRow>\n          {failedThreshold ? (\n            <FireIconContainer data-test-id=\"threshold-failed-warning\" size=\"sm\">\n              <Tooltip\n                title={t('Fails threshold at %s.', thresholdValue)}\n                position=\"top\"\n                containerDisplayMode=\"inline-block\"\n              >\n                <IconFire size=\"sm\" />\n              </Tooltip>\n            </FireIconContainer>\n          ) : null}\n          <Value failedThreshold={failedThreshold}>{currentValue}</Value>\n        </ValueRow>\n      </StyledPanel>\n    </EventVitalContainer>\n  );\n}\n\nconst Measurements = styled('div')`\n  display: grid;\n  grid-column-gap: ${space(1)};\n`;\n\nconst Container = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledPanel = styled(Panel)<{failedThreshold: boolean}>`\n  padding: ${space(1)} ${space(1.5)};\n  margin-bottom: ${space(1)};\n  ${p => p.failedThreshold && `border: 1px solid ${p.theme.red300};`}\n`;\n\nconst Name = styled('div')``;\n\nconst ValueRow = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst WarningIconContainer = styled('span')<{size: IconSize | string}>`\n  display: inline-block;\n  height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  line-height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  margin-left: ${space(0.5)};\n  color: ${p => p.theme.errorText};\n`;\n\nconst FireIconContainer = styled('span')<{size: IconSize | string}>`\n  display: inline-block;\n  height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  line-height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  margin-right: ${space(0.5)};\n  color: ${p => p.theme.errorText};\n`;\n\nconst Value = styled('span')<{failedThreshold: boolean}>`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  ${p => p.failedThreshold && `color: ${p.theme.errorText};`}\n`;\n\nexport const EventVitalContainer = styled('div')``;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${p => p.theme.overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {RequestState} from 'sentry/types/core';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {generateProfileFlamechartRoute} from 'sentry/utils/profiling/routes';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface Props {\n  orgId: string;\n  projectId: string;\n  transactionId: string;\n}\n\nfunction TransactionToProfileButton({transactionId, orgId, projectId}: Props) {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [profileIdState, setProfileIdState] = useState<RequestState<string>>({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    fetchProfileId(api, transactionId, orgId, projectId)\n      .then((profileId: ProfileId) => {\n        setProfileIdState({type: 'resolved', data: profileId.profile_id});\n      })\n      .catch(err => {\n        // If there isn't a matching profile, we get a 404. No need to raise an error\n        // in this case, but we should otherwise.\n        if (err.status !== 404) {\n          Sentry.captureException(err);\n        }\n      });\n  }, [api, transactionId, orgId, projectId]);\n\n  if (profileIdState.type !== 'resolved') {\n    return null;\n  }\n\n  function handleGoToProfile() {\n    trackAdvancedAnalyticsEvent('profiling_views.go_to_flamegraph', {\n      organization,\n      source: 'transaction_details',\n    });\n  }\n\n  const target = generateProfileFlamechartRoute({\n    orgSlug: orgId,\n    projectSlug: projectId,\n    profileId: profileIdState.data,\n  });\n\n  return (\n    <Button size=\"sm\" onClick={handleGoToProfile} to={target}>\n      {t('Go to Profile')}\n    </Button>\n  );\n}\n\ntype ProfileId = {\n  profile_id: string;\n};\n\nfunction fetchProfileId(\n  api: Client,\n  transactionId: string,\n  orgId: string,\n  projectId: string\n): Promise<ProfileId> {\n  return api.requestPromise(\n    `/projects/${orgId}/${projectId}/profiling/transactions/${transactionId}/`,\n    {\n      method: 'GET',\n    }\n  );\n}\n\nexport {TransactionToProfileButton};\n","import styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport {EventTag} from 'sentry/types/event';\n\nimport {AnnotatedText} from './events/meta/annotatedText';\n\ninterface Props {\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n  tag: EventTag;\n  meta?: Record<any, any>;\n}\n\nfunction TagsTableRow({tag, query, generateUrl, meta}: Props) {\n  const tagInQuery = query.includes(`${tag.key}:`);\n  const target = tagInQuery ? undefined : generateUrl(tag);\n  const keyMetaData = meta?.key?.[''];\n  const valueMetaData = meta?.value?.[''];\n\n  const renderTagValue = () => {\n    switch (tag.key) {\n      case 'release':\n        return <Version version={tag.value} anchor={false} withPackage />;\n      default:\n        return tag.value;\n    }\n  };\n  return (\n    <KeyValueTableRow\n      keyName={\n        !!keyMetaData && !tag.key ? (\n          <AnnotatedText value={tag.key} meta={keyMetaData} />\n        ) : (\n          <StyledTooltip title={tag.key} showOnlyOnOverflow>\n            {tag.key}\n          </StyledTooltip>\n        )\n      }\n      value={\n        !!valueMetaData && !tag.value ? (\n          <AnnotatedText value={tag.value} meta={valueMetaData} />\n        ) : keyMetaData?.err?.length ? (\n          <ValueContainer>{renderTagValue()}</ValueContainer>\n        ) : tagInQuery ? (\n          <StyledTooltip title={t('This tag is in the current filter conditions')}>\n            <ValueContainer>{renderTagValue()}</ValueContainer>\n          </StyledTooltip>\n        ) : (\n          <StyledTooltip title={renderTagValue()} showOnlyOnOverflow>\n            <Link to={target || ''}>{renderTagValue()}</Link>\n          </StyledTooltip>\n        )\n      }\n    />\n  );\n}\n\nexport default TagsTableRow;\n\nconst StyledTooltip = styled(Tooltip)`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst ValueContainer = styled('span')`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: normal;\n`;\n","import styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {AnnotatedText} from 'sentry/components/events/meta/annotatedText';\nimport {KeyValueTable} from 'sentry/components/keyValueTable';\nimport TagsTableRow from 'sentry/components/tagsTableRow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event, EventTag} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n};\n\nexport function TagsTable({event, query, generateUrl}: Props) {\n  const meta = event._meta?.tags;\n\n  return (\n    <StyledTagsTable>\n      <SectionHeading>{t('Tag Details')}</SectionHeading>\n      {!!meta?.[''] && !event.tags ? (\n        <AnnotatedText value={event.tags} meta={meta?.['']} />\n      ) : (\n        <KeyValueTable>\n          {event.tags.map((tag, index) => (\n            <TagsTableRow\n              key={tag.key}\n              tag={tag}\n              query={query}\n              generateUrl={generateUrl}\n              meta={meta?.[index]}\n            />\n          ))}\n        </KeyValueTable>\n      )}\n    </StyledTagsTable>\n  );\n}\n\nconst StyledTagsTable = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  PartialQuickTrace,\n  TraceLite,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype AdditionalQueryProps = {\n  eventId: string;\n};\n\ntype TraceLiteQueryChildrenProps = BaseTraceChildrenProps &\n  Omit<PartialQuickTrace, 'trace'> & {\n    trace: TraceLite | null;\n  };\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceLiteQueryChildrenProps) => React.ReactNode;\n  };\n\nfunction getTraceLiteRequestPayload({\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload = getTraceRequestPayload(props);\n  return Object.assign({event_id: eventId}, additionalApiPayload);\n}\n\nfunction EmptyTrace({children}: Pick<QueryProps, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: null,\n        type: 'partial',\n      })}\n    </Fragment>\n  );\n}\n\nfunction TraceLiteQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return <EmptyTrace>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceLite, AdditionalQueryProps>\n      route={`events-trace-light/${traceId}`}\n      getRequestPayload={getTraceLiteRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          trace: tableData || null,\n          type: 'partial',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default TraceLiteQuery;\n","import {Fragment} from 'react';\n\nimport {Event} from 'sentry/types/event';\nimport {DiscoverQueryProps} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {TraceFullQuery} from 'sentry/utils/performance/quickTrace/traceFullQuery';\nimport TraceLiteQuery from 'sentry/utils/performance/quickTrace/traceLiteQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  flattenRelevantPaths,\n  getTraceTimeRangeFromEvent,\n  isCurrentEvent,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype QueryProps = Omit<DiscoverQueryProps, 'api' | 'eventView'> & {\n  children: (props: QuickTraceQueryChildrenProps) => React.ReactNode;\n  event: Event | undefined;\n};\n\nexport default function QuickTraceQuery({children, event, ...props}: QueryProps) {\n  const renderEmpty = () => (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: [],\n        type: 'empty',\n        currentEvent: null,\n      })}\n    </Fragment>\n  );\n\n  if (!event) {\n    return renderEmpty();\n  }\n\n  const traceId = event.contexts?.trace?.trace_id;\n\n  if (!traceId) {\n    return renderEmpty();\n  }\n\n  const {start, end} = getTraceTimeRangeFromEvent(event);\n\n  return (\n    <TraceLiteQuery\n      eventId={event.id}\n      traceId={traceId}\n      start={start}\n      end={end}\n      {...props}\n    >\n      {traceLiteResults => (\n        <TraceFullQuery\n          eventId={event.id}\n          traceId={traceId}\n          start={start}\n          end={end}\n          {...props}\n        >\n          {traceFullResults => {\n            if (\n              !traceFullResults.isLoading &&\n              traceFullResults.error === null &&\n              traceFullResults.traces !== null\n            ) {\n              for (const subtrace of traceFullResults.traces) {\n                try {\n                  const trace = flattenRelevantPaths(event, subtrace);\n                  return children({\n                    ...traceFullResults,\n                    trace,\n                    currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n                  });\n                } catch {\n                  // let this fall through and check the next subtrace\n                  // or use the trace lite results\n                }\n              }\n            }\n\n            if (\n              !traceLiteResults.isLoading &&\n              traceLiteResults.error === null &&\n              traceLiteResults.trace !== null\n            ) {\n              const {trace} = traceLiteResults;\n              return children({\n                ...traceLiteResults,\n                currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n              });\n            }\n\n            return children({\n              // only use the light results loading state if it didn't error\n              // if it did, we should rely on the full results\n              isLoading: traceLiteResults.error\n                ? traceFullResults.isLoading\n                : traceLiteResults.isLoading || traceFullResults.isLoading,\n              // swallow any errors from the light results because we\n              // should rely on the full results in this situations\n              error: traceFullResults.error,\n              trace: [],\n              // if we reach this point but there were some traces in the full results,\n              // that means there were other transactions in the trace, but the current\n              // event could not be found\n              type: traceFullResults.traces?.length ? 'missing' : 'empty',\n              currentEvent: null,\n            });\n          }}\n        </TraceFullQuery>\n      )}\n    </TraceLiteQuery>\n  );\n}\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  FullQuickTrace,\n  TraceFull,\n  TraceFullDetailed,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype AdditionalQueryProps = {\n  detailed?: boolean;\n  eventId?: string;\n};\n\ntype TraceFullQueryChildrenProps<T> = BaseTraceChildrenProps &\n  Omit<FullQuickTrace, 'trace'> & {\n    /**\n     * The `event-trace` endpoint returns a full trace with the parent-child\n     * relationships. It can be flattened into a `QuickTraceEvent` if necessary.\n     */\n    traces: T | null;\n  };\n\ntype QueryProps<T> = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceFullQueryChildrenProps<T>) => React.ReactNode;\n  };\n\nfunction getTraceFullRequestPayload({\n  detailed,\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload: any = getTraceRequestPayload(props);\n  additionalApiPayload.detailed = detailed ? '1' : '0';\n  if (eventId) {\n    additionalApiPayload.event_id = eventId;\n  }\n  return additionalApiPayload;\n}\n\nfunction EmptyTrace<T>({children}: Pick<QueryProps<T>, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        traces: null,\n        type: 'full',\n      })}\n    </Fragment>\n  );\n}\n\nfunction GenericTraceFullQuery<T>({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps<T>) {\n  if (!traceId) {\n    return <EmptyTrace<T>>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<T, AdditionalQueryProps>\n      route={`events-trace/${traceId}`}\n      getRequestPayload={getTraceFullRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          traces: tableData || null,\n          type: 'full',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport const TraceFullQuery = (props: Omit<QueryProps<TraceFull[]>, 'detailed'>) => (\n  <GenericTraceFullQuery<TraceFull[]> {...props} detailed={false} />\n);\n\nexport const TraceFullDetailedQuery = (\n  props: Omit<QueryProps<TraceFullDetailed[]>, 'detailed'>\n) => <GenericTraceFullQuery<TraceFullDetailed[]> {...props} detailed />;\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n"],"names":["formattedValue","record","value","type","getDuration","toFixed","isOutdatedSdk","event","sdk","version","sdkVersion","startsWith","EventVitals","Fragment","WebVitals","MobileVitals","measurementNames","Object","keys","measurements","filter","name","Boolean","WEB_VITAL_DETAILS","sort","length","Container","t","WarningIconContainer","size","title","position","containerDisplayMode","Measurements","map","measurement","vital","EventVital","MOBILE_VITAL_DETAILS","failedThreshold","defined","poorThreshold","currentValue","thresholdValue","EventVitalContainer","StyledPanel","Name","ValueRow","FireIconContainer","Value","space","p","theme","fontSizeMedium","Panel","red300","iconSizes","errorText","fontSizeExtraLarge","KeyValueTable","KeyValueTableRow","keyName","Key","commonStyles","overflowEllipsis","backgroundSecondary","textColor","subText","TransactionToProfileButton","transactionId","orgId","projectId","api","useApi","organization","useOrganization","profileIdState","setProfileIdState","useState","useEffect","requestPromise","method","fetchProfileId","then","profileId","data","profile_id","catch","err","status","Sentry","target","generateProfileFlamechartRoute","orgSlug","projectSlug","onClick","trackAdvancedAnalyticsEvent","source","to","TagsTableRow","tag","query","generateUrl","meta","tagInQuery","includes","key","undefined","keyMetaData","valueMetaData","renderTagValue","anchor","withPackage","StyledTooltip","showOnlyOnOverflow","ValueContainer","Tooltip","TagsTable","_meta","tags","StyledTagsTable","index","getTraceLiteRequestPayload","eventId","props","additionalApiPayload","getTraceRequestPayload","assign","event_id","EmptyTrace","children","isLoading","error","trace","TraceLiteQuery","traceId","start","end","statsPeriod","eventView","makeEventView","route","getRequestPayload","tableData","rest","QuickTraceQuery","renderEmpty","currentEvent","contexts","trace_id","getTraceTimeRangeFromEvent","id","traceLiteResults","traceFullResults","traces","subtrace","flattenRelevantPaths","find","e","isCurrentEvent","getTraceFullRequestPayload","detailed","GenericTraceFullQuery","TraceFullQuery","TraceFullDetailedQuery","generateProfilingRouteWithQuery","pathname","generateProfilingRoute","generateProfileSummaryRouteWithQuery","transaction","generateProfileSummaryRoute","generateProfileFlamechartRouteWithQuery","generateProfileDetailsRouteWithQuery","generateProfileDetailsRoute"],"sourceRoot":""}
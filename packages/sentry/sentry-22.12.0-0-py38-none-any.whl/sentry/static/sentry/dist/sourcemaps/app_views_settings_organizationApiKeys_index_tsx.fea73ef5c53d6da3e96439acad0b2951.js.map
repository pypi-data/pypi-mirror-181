{"version":3,"file":"chunks/app_views_settings_organizationApiKeys_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeysList.tsx","webpack:///./app/views/settings/organizationApiKeys/index.tsx"],"sourcesContent":["import {ButtonProps} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\n\nimport Anchor from './anchor';\n\ntype Props = {\n  message: React.ReactNode;\n  onConfirm: () => void;\n  title: string;\n  children?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  priority?: ButtonProps['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nfunction LinkWithConfirmation({\n  className,\n  disabled,\n  title,\n  children,\n  ...otherProps\n}: Props) {\n  return (\n    <Confirm {...otherProps} disabled={disabled}>\n      <Anchor href=\"#\" className={className} disabled={disabled} title={title}>\n        {children}\n      </Anchor>\n    </Confirm>\n  );\n}\n\nexport default LinkWithConfirmation;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {PlainRoute, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport LinkWithConfirmation from 'sentry/components/links/linkWithConfirmation';\nimport {PanelTable} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {DeprecatedApiKey} from './types';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  /**\n   * Busy differs from loading in that busy is a result of an action like removing\n   */\n  busy: boolean;\n  keys: DeprecatedApiKey[];\n\n  /**\n   * Loading refers to fetching the API Keys\n   */\n  loading: boolean;\n\n  onAddApiKey: () => {};\n\n  onRemove: (id: DeprecatedApiKey['id']) => {};\n  routes: PlainRoute[];\n};\n\nfunction OrganizationApiKeysList({\n  params,\n  routes,\n  keys,\n  busy,\n  loading,\n  onAddApiKey,\n  onRemove,\n}: Props) {\n  const hasKeys = keys && keys.length;\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"sm\"\n      icon={<IconAdd size=\"xs\" isCircled />}\n      busy={busy}\n      disabled={busy}\n      onClick={onAddApiKey}\n    >\n      {t('New API Key')}\n    </Button>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('API Keys')} action={action} />\n\n      <TextBlock>\n        {tct(\n          `API keys grant access to the [api:developer web API].\n          If you're looking to configure a Sentry client, you'll need a\n          client key which is available in your project settings.`,\n          {\n            api: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n          }\n        )}\n      </TextBlock>\n\n      <AlertLink to=\"/settings/account/api/auth-tokens/\" priority=\"info\">\n        {tct(\n          'Until Sentry supports OAuth, you might want to switch to using [tokens:Auth Tokens] instead.',\n          {\n            tokens: <u />,\n          }\n        )}\n      </AlertLink>\n\n      <PanelTable\n        isLoading={loading}\n        isEmpty={!hasKeys}\n        emptyMessage={t('No API keys for this organization')}\n        headers={[t('Name'), t('Key'), t('Actions')]}\n      >\n        {keys &&\n          keys.map(({id, key, label}) => {\n            const apiDetailsUrl = recreateRoute(`${id}/`, {\n              params,\n              routes,\n            });\n\n            return (\n              <Fragment key={key}>\n                <Cell>\n                  <Link to={apiDetailsUrl}>{label}</Link>\n                </Cell>\n\n                <TextCopyInput size=\"sm\" monospace>\n                  {key}\n                </TextCopyInput>\n\n                <Cell>\n                  <LinkWithConfirmation\n                    aria-label={t('Remove API Key')}\n                    className=\"btn btn-default btn-sm\"\n                    onConfirm={() => onRemove(id)}\n                    message={t('Are you sure you want to remove this API key?')}\n                    title={t('Remove API Key?')}\n                  >\n                    <IconDelete size=\"xs\" css={{position: 'relative', top: '2px'}} />\n                  </LinkWithConfirmation>\n                </Cell>\n              </Fragment>\n            );\n          })}\n      </PanelTable>\n    </div>\n  );\n}\n\nconst Cell = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport default OrganizationApiKeysList;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport OrganizationApiKeysList from './organizationApiKeysList';\nimport {DeprecatedApiKey} from './types';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  keys: DeprecatedApiKey[];\n} & AsyncView['state'];\n\n/**\n * API Keys are deprecated, but there may be some legacy customers that still use it\n */\nclass OrganizationApiKeys extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['keys', `/organizations/${this.props.params.orgId}/api-keys/`]];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('API Keys'), this.props.organization.slug, false);\n  }\n\n  handleRemove = async (id: string) => {\n    const oldKeys = [...this.state.keys];\n\n    this.setState(state => ({\n      keys: state.keys.filter(({id: existingId}) => existingId !== id),\n    }));\n\n    try {\n      await this.api.requestPromise(\n        `/organizations/${this.props.params.orgId}/api-keys/${id}/`,\n        {\n          method: 'DELETE',\n          data: {},\n        }\n      );\n    } catch {\n      this.setState({keys: oldKeys, busy: false});\n      addErrorMessage(t('Error removing key'));\n    }\n  };\n\n  handleAddApiKey = async () => {\n    this.setState({\n      busy: true,\n    });\n\n    try {\n      const data = await this.api.requestPromise(\n        `/organizations/${this.props.params.orgId}/api-keys/`,\n        {\n          method: 'POST',\n          data: {},\n        }\n      );\n\n      if (data) {\n        this.setState({busy: false});\n        browserHistory.push(\n          recreateRoute(`${data.id}/`, {\n            params: this.props.params,\n            routes: this.props.routes,\n          })\n        );\n        addSuccessMessage(t('Created a new API key \"%s\"', data.label));\n      }\n    } catch {\n      this.setState({busy: false});\n    }\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    return (\n      <OrganizationApiKeysList\n        loading={this.state.loading}\n        busy={this.state.busy}\n        keys={this.state.keys}\n        onRemove={this.handleRemove}\n        onAddApiKey={this.handleAddApiKey}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeys);\n"],"names":["LinkWithConfirmation","className","disabled","title","children","otherProps","href","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","OrganizationApiKeysList","params","routes","keys","busy","loading","onAddApiKey","onRemove","hasKeys","length","action","priority","size","icon","isCircled","onClick","t","tct","api","to","tokens","isLoading","isEmpty","emptyMessage","headers","map","id","key","label","apiDetailsUrl","recreateRoute","Fragment","Cell","monospace","onConfirm","message","css","OrganizationApiKeys","async","oldKeys","state","setState","filter","existingId","requestPromise","props","orgId","method","data","addErrorMessage","browserHistory","addSuccessMessage","getEndpoints","routeTitleGen","organization","slug","renderLoading","renderBody","handleRemove","handleAddApiKey","withOrganization"],"sourceRoot":""}
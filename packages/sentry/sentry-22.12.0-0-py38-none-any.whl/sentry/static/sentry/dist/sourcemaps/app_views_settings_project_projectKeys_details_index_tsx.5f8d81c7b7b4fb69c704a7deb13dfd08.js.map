{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport InputControl from 'sentry/components/input';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {getExactDuration} from 'sentry/utils/formatters';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nconst PREDEFINED_RATE_LIMIT_VALUES = [\n  0, 60, 300, 900, 3600, 7200, 14400, 21600, 43200, 86400,\n];\n\ntype RateLimitValue = {\n  count: number;\n  window: number;\n};\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nfunction KeyRateLimitsForm({data, disabled, params}: Props) {\n  function handleChangeWindow(\n    onChange: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    onBlur: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    currentValueObj: RateLimitValue,\n    value: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {...currentValueObj, window: value};\n\n    onChange(valueObj, event);\n    onBlur(valueObj, event);\n  }\n\n  function handleChangeCount(\n    callback: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    value: RateLimitValue,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {\n      ...value,\n      count: Number(event.target.value),\n    };\n\n    callback(valueObj, event);\n  }\n\n  function getAllowedRateLimitValues(currentRateLimit?: number) {\n    const {rateLimit} = data;\n    const {window} = rateLimit ?? {};\n\n    // The slider should display other values if they are set via the API, but still offer to select only the predefined values\n    if (defined(window)) {\n      // If the API returns a value not found in the predefined values and the user selects another value through the UI,\n      // he will no longer be able to reselect the \"custom\" value in the slider\n      if (currentRateLimit !== window) {\n        return PREDEFINED_RATE_LIMIT_VALUES;\n      }\n\n      // If the API returns a value not found in the predefined values, that value will be added to the slider\n      if (!PREDEFINED_RATE_LIMIT_VALUES.includes(window)) {\n        return sortBy([...PREDEFINED_RATE_LIMIT_VALUES, window]);\n      }\n    }\n\n    return PREDEFINED_RATE_LIMIT_VALUES;\n  }\n\n  const {keyId, orgId, projectId} = params;\n  const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n\n  const disabledAlert = ({features}) => (\n    <FeatureDisabled\n      alert={PanelAlert}\n      features={features}\n      featureName={t('Key Rate Limits')}\n    />\n  );\n\n  return (\n    <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n      <Feature\n        features={['projects:rate-limits']}\n        hookName=\"feature-disabled:rate-limits\"\n        renderDisabled={({children, ...props}) =>\n          typeof children === 'function' &&\n          children({...props, renderDisabled: disabledAlert})\n        }\n      >\n        {({hasFeature, features, organization, project, renderDisabled}) => (\n          <Panel>\n            <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  `Rate limits provide a flexible way to manage your error\n                    volume. If you have a noisy project or environment you\n                    can configure a rate limit for this key to reduce the\n                    number of errors processed. To manage your transaction\n                    volume, we recommend adjusting your sample rate in your\n                    SDK configuration.`\n                )}\n              </PanelAlert>\n              {!hasFeature &&\n                typeof renderDisabled === 'function' &&\n                renderDisabled({\n                  organization,\n                  project,\n                  features,\n                  hasFeature,\n                  children: null,\n                })}\n              <FormField\n                name=\"rateLimit\"\n                label={t('Rate Limit')}\n                disabled={disabled || !hasFeature}\n                validate={({form}) => {\n                  // TODO(TS): is validate actually doing anything because it's an unexpected prop\n                  const isValid =\n                    form &&\n                    form.rateLimit &&\n                    typeof form.rateLimit.count !== 'undefined' &&\n                    typeof form.rateLimit.window !== 'undefined';\n\n                  if (isValid) {\n                    return [];\n                  }\n\n                  return [['rateLimit', t('Fill in both fields first')]];\n                }}\n                formatMessageValue={({count, window}: RateLimitValue) =>\n                  tct('[errors] in [timeWindow]', {\n                    errors: tn('%s error ', '%s errors ', count),\n                    timeWindow:\n                      window === 0 ? t('no time window') : getExactDuration(window),\n                  })\n                }\n                help={t(\n                  'Apply a rate limit to this credential to cap the amount of errors accepted during a time window.'\n                )}\n                inline={false}\n              >\n                {({onChange, onBlur, value}) => {\n                  const window = typeof value === 'object' ? value.window : undefined;\n                  return (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={typeof value === 'object' ? value.count : undefined}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={event => handleChangeCount(onChange, value, event)}\n                        onBlur={event => handleChangeCount(onBlur, value, event)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={getAllowedRateLimitValues(window)}\n                        value={window}\n                        placeholder={t('Window')}\n                        formatLabel={rangeValue => {\n                          if (typeof rangeValue === 'number') {\n                            if (rangeValue === 0) {\n                              return t('None');\n                            }\n                            return getExactDuration(rangeValue);\n                          }\n                          return undefined;\n                        }}\n                        disabled={disabled || !hasFeature}\n                        onChange={(rangeValue, event) =>\n                          handleChangeWindow(\n                            onChange,\n                            onBlur,\n                            value,\n                            Number(rangeValue),\n                            event\n                          )\n                        }\n                      />\n                    </RateLimitRow>\n                  );\n                }}\n              </FormField>\n            </PanelBody>\n          </Panel>\n        )}\n      </Feature>\n    </Form>\n  );\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport Field from 'sentry/components/forms/field';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport KeyRateLimitsForm from 'sentry/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  api: Client;\n  data: ProjectKey;\n  onRemove: () => void;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n};\n\nclass KeySettings extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  handleRemove = async () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n    const {api, onRemove, params} = this.props;\n    const {keyId, orgId, projectId} = params;\n\n    try {\n      await api.requestPromise(`/projects/${orgId}/${projectId}/keys/${keyId}/`, {\n        method: 'DELETE',\n      });\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  render() {\n    const {keyId, orgId, projectId} = this.props.params;\n    const {data} = this.props;\n    const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n    const loaderLink = getDynamicText({\n      value: data.dsn.cdn,\n      fixed: '__JS_SDK_LOADER_URL__',\n    });\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Form\n              saveOnBlur\n              allowUndo\n              apiEndpoint={apiEndpoint}\n              apiMethod=\"PUT\"\n              initialData={data}\n            >\n              <Panel>\n                <PanelHeader>{t('Details')}</PanelHeader>\n\n                <PanelBody>\n                  <TextField\n                    name=\"name\"\n                    label={t('Name')}\n                    disabled={!hasAccess}\n                    required={false}\n                    maxLength={64}\n                  />\n                  <BooleanField\n                    name=\"isActive\"\n                    label={t('Enabled')}\n                    required={false}\n                    disabled={!hasAccess}\n                    help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                  />\n                  <Field label={t('Created')}>\n                    <div className=\"controls\">\n                      <DateTime date={data.dateCreated} />\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <KeyRateLimitsForm\n              params={this.props.params}\n              data={data}\n              disabled={!hasAccess}\n            />\n\n            <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n              <Panel>\n                <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    help={tct(\n                      'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                      {\n                        link: (\n                          <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                            What does the script provide?\n                          </ExternalLink>\n                        ),\n                      }\n                    )}\n                    inline={false}\n                    flexibleControlStateSize\n                  >\n                    <TextCopyInput>\n                      {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                    </TextCopyInput>\n                  </Field>\n                  <SelectField\n                    name=\"browserSdkVersion\"\n                    options={\n                      data.browserSdk\n                        ? data.browserSdk.choices.map(([value, label]) => ({\n                            value,\n                            label,\n                          }))\n                        : []\n                    }\n                    placeholder={t('4.x')}\n                    allowClear={false}\n                    disabled={!hasAccess}\n                    help={t(\n                      'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                    )}\n                  />\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <Panel>\n              <PanelHeader>{t('Credentials')}</PanelHeader>\n              <PanelBody>\n                <PanelAlert type=\"info\" showIcon>\n                  {t(\n                    'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                  )}\n                </PanelAlert>\n\n                <ProjectKeyCredentials\n                  projectId={`${data.projectId}`}\n                  data={data}\n                  showPublicKey\n                  showSecretKey\n                  showProjectId\n                />\n              </PanelBody>\n            </Panel>\n\n            <Access access={['project:admin']}>\n              <Panel>\n                <PanelHeader>{t('Revoke Key')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    label={t('Revoke Key')}\n                    help={t(\n                      'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                    )}\n                  >\n                    <div>\n                      <Confirm\n                        priority=\"danger\"\n                        message={t(\n                          'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                        )}\n                        onConfirm={this.handleRemove}\n                        confirmText={t('Revoke Key')}\n                      >\n                        <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                      </Confirm>\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Access>\n          </Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default KeySettings;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  api: Client;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  emptyStats: boolean;\n  error: boolean;\n  loading: boolean;\n  series: Series[];\n  since: number;\n  until: number;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {keyId, orgId, projectId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${projectId}/keys/${keyId}/stats/`, {\n      query: {\n        since: this.state.since,\n        until: this.state.until,\n        resolution: '1d',\n      },\n      success: data => {\n        let emptyStats = true;\n        const dropped: Series['data'] = [];\n        const accepted: Series['data'] = [];\n        data.forEach(p => {\n          if (p.total) {\n            emptyStats = false;\n          }\n          dropped.push({name: p.ts * 1000, value: p.dropped});\n          accepted.push({name: p.ts * 1000, value: p.accepted});\n        });\n        const series = [\n          {\n            seriesName: t('Accepted'),\n            data: accepted,\n          },\n          {\n            seriesName: t('Rate Limited'),\n            data: dropped,\n          },\n        ];\n        this.setState({\n          series,\n          emptyStats,\n          error: false,\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({error: true, loading: false});\n      },\n    });\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'sentry/locale';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport KeySettings from 'sentry/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'sentry/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<\n  {\n    keyId: string;\n    orgId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {keyId, orgId, projectId} = this.props.params;\n    return [['data', `/projects/${orgId}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {orgId, projectId} = this.props.params;\n    browserHistory.push(`/${orgId}/${projectId}/settings/keys/`);\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const {params} = this.props;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} params={params} />\n\n        <KeySettings\n          api={this.api}\n          params={params}\n          data={data}\n          onRemove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Field from 'sentry/components/forms/field';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <Field\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </Field>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <Field\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showSecurityEndpoint && (\n        <Field\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showMinidump && (\n        <Field\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showUnreal && (\n        <Field\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showPublicKey && (\n        <Field label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showSecretKey && (\n        <Field label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showProjectId && (\n        <Field label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","AsyncView","AsyncComponent","getTitle","title","renderComponent","PermissionAlert","PREDEFINED_RATE_LIMIT_VALUES","KeyRateLimitsForm","data","disabled","params","handleChangeCount","callback","value","event","count","Number","target","getAllowedRateLimitValues","currentRateLimit","rateLimit","window","defined","sortBy","keyId","orgId","projectId","apiEndpoint","disabledAlert","features","alert","PanelAlert","featureName","saveOnBlur","apiMethod","initialData","hookName","renderDisabled","hasFeature","project","name","label","validate","form","formatMessageValue","tct","errors","tn","timeWindow","getExactDuration","help","inline","onChange","onBlur","undefined","RateLimitRow","min","placeholder","EventsIn","allowedValues","formatLabel","rangeValue","currentValueObj","valueObj","handleChangeWindow","space","p","theme","fontSizeRelativeSmall","KeySettings","loading","error","async","state","addLoadingMessage","api","onRemove","requestPromise","method","addSuccessMessage","_err","setState","addErrorMessage","loaderLink","getDynamicText","dsn","cdn","fixed","Fragment","allowUndo","required","maxLength","className","date","dateCreated","link","href","flexibleControlStateSize","options","browserSdk","choices","map","allowClear","showPublicKey","showSecretKey","showProjectId","priority","message","onConfirm","handleRemove","confirmText","KeyStats","until","Math","floor","Date","getTime","since","series","emptyStats","getInitialState","request","query","resolution","success","dropped","accepted","forEach","total","push","ts","seriesName","componentDidMount","fetchData","onRetry","withPadding","height","description","isGroupedByDate","colors","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","getEndpoints","renderBody","ProjectKeyCredentials","showDsn","showDsnPublic","showMinidump","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","useState","to","onClick","curr","public","StyledField","secret","security","minidump","unreal","Field"],"sourceRoot":""}
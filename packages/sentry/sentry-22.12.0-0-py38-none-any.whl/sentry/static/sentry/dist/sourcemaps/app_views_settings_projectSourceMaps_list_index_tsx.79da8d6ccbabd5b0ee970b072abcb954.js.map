{"version":3,"file":"chunks/app_views_settings_projectSourceMaps_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/list/sourceMapsArchiveRow.tsx","webpack:///./app/views/settings/projectSourceMaps/list/index.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              type=\"button\"\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SourceMapsArchive} from 'sentry/types';\n\ntype Props = {\n  archive: SourceMapsArchive;\n  onDelete: (name: string) => void;\n  orgId: string;\n  projectId: string;\n};\n\nconst SourceMapsArchiveRow = ({archive, orgId, projectId, onDelete}: Props) => {\n  const {name, date, fileCount} = archive;\n  const archiveLink = `/settings/${orgId}/projects/${projectId}/source-maps/${encodeURIComponent(\n    name\n  )}`;\n  return (\n    <Fragment>\n      <Column>\n        <TextOverflow>\n          <Link to={archiveLink}>\n            <Version version={name} anchor={false} tooltipRawVersion truncate />\n          </Link>\n        </TextOverflow>\n      </Column>\n      <ArtifactsColumn>\n        <Count value={fileCount} />\n      </ArtifactsColumn>\n      <Column>{t('release')}</Column>\n      <Column>\n        <DateTime date={date} />\n      </Column>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  onConfirm={() => onDelete(name)}\n                  message={t(\n                    'Are you sure you want to remove all artifacts in this archive?'\n                  )}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={t('Remove All Artifacts')}\n                    aria-label={t('Remove All Artifacts')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst ArtifactsColumn = styled(Column)`\n  padding-right: ${space(4)};\n  text-align: right;\n  justify-content: flex-end;\n`;\n\nconst ActionsColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n\nexport default SourceMapsArchiveRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, SourceMapsArchive} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport SourceMapsArchiveRow from './sourceMapsArchiveRow';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  archives: SourceMapsArchive[];\n};\n\nclass ProjectSourceMaps extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('Source Maps'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      archives: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['archives', this.getArchivesUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArchivesUrl() {\n    const {orgId, projectId} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/files/source-maps/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleDelete = async (name: string) => {\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n    try {\n      await this.api.requestPromise(this.getArchivesUrl(), {\n        method: 'DELETE',\n        query: {name},\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no archives that match your search.');\n    }\n\n    return t('There are no archives for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArchives() {\n    const {archives} = this.state;\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!archives.length) {\n      return null;\n    }\n\n    return archives.map(a => {\n      return (\n        <SourceMapsArchiveRow\n          key={a.name}\n          archive={a}\n          orgId={orgId}\n          projectId={projectId}\n          onDelete={this.handleDelete}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, archives, archivesPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Source Maps')}\n          action={\n            <SearchBar\n              placeholder={t('Filter Archives')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `These source map archives help Sentry identify where to look when Javascript is minified. By providing this information, you can get better context for your stack traces when debugging. To learn more about source maps, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/sourcemaps/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Archive'),\n            <ArtifactsColumn key=\"artifacts\">{t('Artifacts')}</ArtifactsColumn>,\n            t('Type'),\n            t('Date Created'),\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={archives.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArchives()}\n        </StyledPanelTable>\n        <Pagination pageLinks={archivesPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns:\n    minmax(120px, 1fr) max-content minmax(85px, max-content) minmax(265px, max-content)\n    75px;\n`;\n\nconst ArtifactsColumn = styled('div')`\n  text-align: right;\n  padding-right: ${space(1.5)};\n  margin-right: ${space(0.25)};\n`;\n\nexport default ProjectSourceMaps;\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","showIcon","t","Access","Component","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","Input","p","Button","theme","subText","space","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","title","renderComponent","SourceMapsArchiveRow","archive","orgId","projectId","onDelete","date","fileCount","archiveLink","encodeURIComponent","Fragment","Column","to","version","anchor","tooltipRawVersion","truncate","ArtifactsColumn","ActionsColumn","gap","disabled","onConfirm","message","ProjectSourceMaps","location","router","push","cursor","undefined","async","addLoadingMessage","api","requestPromise","getArchivesUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","routeTitleGen","getDefaultState","super","archives","getEndpoints","getQuery","decodeScalar","getEmptyMessage","renderLoading","renderBody","renderArchives","state","length","map","a","handleDelete","loading","archivesPageLinks","action","placeholder","handleSearch","tct","link","href","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","pageLinks","PanelTable"],"sourceRoot":""}
{"version":3,"file":"chunks/app_views_settings_organizationTeams_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/searchBar.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.tsx","webpack:///./app/views/settings/organizationTeams/organizationAccessRequests.tsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.tsx","webpack:///./app/views/settings/organizationTeams/index.tsx","webpack:///./app/views/settings/organizationTeams/roleOverwriteWarning.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              type=\"button\"\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organizations';\nimport {joinTeam, leaveTeam} from 'sentry/actionCreators/teams';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {t, tct, tn} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Team} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  openMembership: boolean;\n  organization: Organization;\n  team: Team;\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n};\n\nclass AllTeamsRow extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  reloadProjects() {\n    const {api, organization} = this.props;\n    // After a change in teams has happened, refresh the project store\n    fetchOrganizationDetails(api, organization.slug, {\n      loadProjects: true,\n    });\n  }\n\n  handleRequestAccess = () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // Update team so that `isPending` is true\n      TeamStore.onUpdateSuccess(team.slug, {\n        ...team,\n        isPending: true,\n      });\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = async () => {\n    const {team} = this.props;\n\n    await this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n\n    this.reloadProjects();\n  };\n\n  joinTeam = ({\n    successMessage,\n    errorMessage,\n  }: {\n    errorMessage: React.ReactNode;\n    successMessage: React.ReactNode;\n  }) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise<void>((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n\n          // Reload ProjectsStore\n          this.reloadProjects();\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  getTeamRoleName = () => {\n    const {organization, team} = this.props;\n    if (!organization.features.includes('team-roles') || !team.teamRole) {\n      return null;\n    }\n\n    const {teamRoleList} = organization;\n    const roleName = teamRoleList.find(r => r.id === team.teamRole)?.name;\n\n    return roleName;\n  };\n\n  render() {\n    const {team, openMembership, organization} = this.props;\n    const urlPrefix = `/settings/${organization.slug}/teams/`;\n\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open membership\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <div>\n          {canViewTeam ? (\n            <TeamLink data-test-id=\"team-link\" to={`${urlPrefix}${team.slug}/`}>\n              {display}\n            </TeamLink>\n          ) : (\n            display\n          )}\n        </div>\n        <div>{this.getTeamRoleName()}</div>\n        <div>\n          {this.state.loading ? (\n            <Button size=\"sm\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"sm\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button\n              size=\"sm\"\n              disabled\n              title={t(\n                'Your request to join this team is being reviewed by organization owners'\n              )}\n            >\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"sm\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"sm\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </div>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(150px, 4fr) minmax(90px, 1fr) min-content;\n  gap: ${space(2)};\n  align-items: center;\n\n  > div:last-child {\n    margin-left: auto;\n  }\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openCreateTeamModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Team} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport AllTeamsRow from './allTeamsRow';\n\ntype Props = {\n  access: Record<string, any>;\n  openMembership: boolean;\n  organization: Organization;\n  teamList: Array<Team>;\n};\n\nfunction AllTeamsList({organization, openMembership, teamList, access}: Props) {\n  const teamNodes = teamList.map(team => (\n    <AllTeamsRow\n      team={team}\n      organization={organization}\n      openMembership={openMembership}\n      key={team.slug}\n    />\n  ));\n\n  if (!teamNodes.length) {\n    const canCreateTeam = access.has('project:admin');\n\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: canCreateTeam\n            ? tct('You can always [link:create one].', {\n                link: (\n                  <StyledButton\n                    priority=\"link\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                      })\n                    }\n                    aria-label={t('Create team')}\n                  />\n                ),\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n\n  return <Fragment>{teamNodes}</Fragment>;\n}\n\nexport default AllTeamsList;\n\nconst StyledButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AccessRequest} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n  orgId: string;\n  requestList: AccessRequest[];\n};\n\ntype State = {\n  accessRequestBusy: Record<string, boolean>;\n};\n\ntype HandleOpts = {\n  errorMessage: string;\n  id: string;\n  isApproved: boolean;\n  successMessage: string;\n};\n\nclass OrganizationAccessRequests extends Component<Props, State> {\n  state: State = {\n    accessRequestBusy: {},\n  };\n\n  async handleAction({id, isApproved, successMessage, errorMessage}: HandleOpts) {\n    const {api, orgId, onRemoveAccessRequest} = this.props;\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: true},\n    }));\n\n    try {\n      await api.requestPromise(`/organizations/${orgId}/access-requests/${id}/`, {\n        method: 'PUT',\n        data: {isApproved},\n      });\n      onRemoveAccessRequest(id, isApproved);\n      addSuccessMessage(successMessage);\n    } catch {\n      addErrorMessage(errorMessage);\n    }\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: false},\n    }));\n  }\n\n  handleApprove = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: true,\n      successMessage: t('Team request approved'),\n      errorMessage: t('Error approving team request'),\n    });\n  };\n\n  handleDeny = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: false,\n      successMessage: t('Team request denied'),\n      errorMessage: t('Error denying team request'),\n    });\n  };\n\n  render() {\n    const {requestList} = this.props;\n    const {accessRequestBusy} = this.state;\n\n    if (!requestList || !requestList.length) {\n      return null;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Pending Team Requests')}</PanelHeader>\n\n        <PanelBody>\n          {requestList.map(({id, member, team, requester}) => {\n            const memberName =\n              member.user &&\n              (member.user.name || member.user.email || member.user.username);\n            const requesterName =\n              requester && (requester.name || requester.email || requester.username);\n            return (\n              <StyledPanelItem key={id}>\n                <div data-test-id=\"request-message\">\n                  {requesterName\n                    ? tct('[requesterName] requests to add [name] to the [team] team.', {\n                        requesterName,\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })\n                    : tct('[name] requests access to the [team] team.', {\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })}\n                </div>\n                <div>\n                  <StyledButton\n                    priority=\"primary\"\n                    size=\"sm\"\n                    onClick={e => this.handleApprove(id, e)}\n                    busy={accessRequestBusy[id]}\n                  >\n                    {t('Approve')}\n                  </StyledButton>\n                  <Button\n                    busy={accessRequestBusy[id]}\n                    onClick={e => this.handleDeny(id, e)}\n                    size=\"sm\"\n                  >\n                    {t('Deny')}\n                  </Button>\n                </div>\n              </StyledPanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: auto max-content;\n  gap: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(OrganizationAccessRequests);\n","import {useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport partition from 'lodash/partition';\n\nimport {openCreateTeamModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AccessRequest, Organization} from 'sentry/types';\nimport useTeams from 'sentry/utils/useTeams';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport {RoleOverwritePanelAlert} from 'sentry/views/settings/organizationTeams/roleOverwriteWarning';\n\nimport AllTeamsList from './allTeamsList';\nimport OrganizationAccessRequests from './organizationAccessRequests';\n\ntype Props = {\n  access: Set<string>;\n  features: Set<string>;\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n  organization: Organization;\n  requestList: AccessRequest[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\nfunction OrganizationTeams({\n  organization,\n  access,\n  features,\n  params,\n  requestList,\n  onRemoveAccessRequest,\n}: Props) {\n  const [teamQuery, setTeamQuery] = useState('');\n  const {initiallyLoaded} = useTeams({provideUserTeams: true});\n  const {teams, onSearch, loadMore, hasMore, fetching} = useTeams();\n\n  if (!organization) {\n    return null;\n  }\n  const canCreateTeams = access.has('project:admin');\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"sm\"\n      disabled={!canCreateTeams}\n      title={\n        !canCreateTeams ? t('You do not have permission to create teams') : undefined\n      }\n      onClick={() =>\n        openCreateTeamModal({\n          organization,\n        })\n      }\n      icon={<IconAdd size=\"xs\" isCircled />}\n    >\n      {t('Create Team')}\n    </Button>\n  );\n\n  const title = t('Teams');\n\n  const debouncedSearch = debounce(onSearch, DEFAULT_DEBOUNCE_DURATION);\n  function handleSearch(query: string) {\n    setTeamQuery(query);\n    debouncedSearch(query);\n  }\n\n  const {slug: orgSlug, orgRole, orgRoleList, teamRoleList} = organization;\n  const filteredTeams = teams.filter(team =>\n    `#${team.slug}`.toLowerCase().includes(teamQuery.toLowerCase())\n  );\n  const [userTeams, otherTeams] = partition(filteredTeams, team => team.isMember);\n\n  return (\n    <div data-test-id=\"team-list\">\n      <SentryDocumentTitle title={title} orgSlug={orgSlug} />\n      <SettingsPageHeader title={title} action={action} />\n\n      <OrganizationAccessRequests\n        orgId={params.orgId}\n        requestList={requestList}\n        onRemoveAccessRequest={onRemoveAccessRequest}\n      />\n      <StyledSearchBar\n        placeholder={t('Search teams')}\n        onChange={handleSearch}\n        query={teamQuery}\n      />\n      <Panel>\n        <PanelHeader>{t('Your Teams')}</PanelHeader>\n        <PanelBody>\n          {features.has('team-roles') && (\n            <RoleOverwritePanelAlert\n              orgRole={orgRole}\n              orgRoleList={orgRoleList}\n              teamRoleList={teamRoleList}\n              isSelf\n            />\n          )}\n          {initiallyLoaded ? (\n            <AllTeamsList\n              organization={organization}\n              teamList={userTeams.filter(team => team.slug.includes(teamQuery))}\n              access={access}\n              openMembership={false}\n            />\n          ) : (\n            <LoadingIndicator />\n          )}\n        </PanelBody>\n      </Panel>\n      <Panel>\n        <PanelHeader>{t('Other Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            organization={organization}\n            teamList={otherTeams}\n            access={access}\n            openMembership={\n              !!(features.has('open-membership') || access.has('org:write'))\n            }\n          />\n        </PanelBody>\n      </Panel>\n      {hasMore && (\n        <LoadMoreWrapper>\n          {fetching && <LoadingIndicator mini />}\n          <Button onClick={() => loadMore(teamQuery)}>{t('Show more')}</Button>\n        </LoadMoreWrapper>\n      )}\n    </div>\n  );\n}\n\nconst StyledSearchBar = styled(SearchBar)`\n  margin-bottom: ${space(2)};\n`;\n\nconst LoadMoreWrapper = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  align-items: center;\n  justify-content: end;\n  grid-auto-flow: column;\n`;\n\nexport default OrganizationTeams;\n","import {RouteComponentProps} from 'react-router';\n\nimport {loadStats} from 'sentry/actionCreators/projects';\nimport {Client} from 'sentry/api';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {AccessRequest, Organization, Team} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport OrganizationTeams from './organizationTeams';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: Team[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  requestList: AccessRequest[];\n};\n\nclass OrganizationTeamsContainer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    return [['requestList', `/organizations/${orgId}/access-requests/`]];\n  }\n\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: (new Date().getTime() / 1000 - 3600 * 24).toString(),\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  }\n\n  removeAccessRequest = (id: string, isApproved: boolean) => {\n    const requestToRemove = this.state.requestList.find(request => request.id === id);\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n    if (isApproved && requestToRemove) {\n      const team = requestToRemove.team;\n      TeamStore.onUpdateSuccess(team.slug, {\n        ...team,\n        memberCount: team.memberCount + 1,\n      });\n    }\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        requestList={this.state.requestList}\n        onRemoveAccessRequest={this.removeAccessRequest}\n      />\n    );\n  }\n}\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(OrganizationTeamsContainer));\n","import {PanelAlert} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconInfo} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {OrgRole, TeamRole} from 'sentry/types';\n\ntype Props = {\n  orgRole: OrgRole['id'] | undefined;\n  orgRoleList: OrgRole[];\n  teamRoleList: TeamRole[];\n  isSelf?: boolean;\n};\n\nexport const RoleOverwriteIcon: React.FC<Props> = props => {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return (\n    <Tooltip title={getOverwriteString(props)}>\n      <IconInfo size=\"sm\" color=\"gray300\" />\n    </Tooltip>\n  );\n};\n\nexport const RoleOverwritePanelAlert: React.FC<Props> = props => {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return <PanelAlert>{getOverwriteString(props)}</PanelAlert>;\n};\n\n/**\n * Check that the user's org role has a minimum team role that maps to the lowest\n * possible team role\n */\nexport function hasOrgRoleOverwrite(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList} = props;\n\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  return teamRoleList.findIndex(r => r.id === orgRoleObj?.minimumTeamRole) > 0;\n}\n\n/**\n * Standardize string so situations where org-level vs team-level roles is easier to recognize\n */\nexport function getOverwriteString(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList, isSelf} = props;\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  const teamRoleObj = teamRoleList.find(r => r.id === orgRoleObj?.minimumTeamRole);\n  if (!orgRoleObj || !teamRoleObj) {\n    return '';\n  }\n\n  return tct(\n    '[selfNoun] organization role as [article] [orgRole] has granted [selfPronoun] a minimum team-level role of [teamRole]',\n    {\n      selfNoun: isSelf ? 'Your' : \"This user's\",\n      selfPronoun: isSelf ? 'you' : 'them',\n      article: 'AEIOU'.includes(orgRoleObj.name[0]) ? 'an' : 'a',\n      orgRole: <strong>{orgRoleObj.name}</strong>,\n      teamRole: <strong>{teamRoleObj.name}</strong>,\n    }\n  );\n}\n\nexport default RoleOverwriteIcon;\n"],"names":["SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","t","Input","p","Button","theme","subText","space","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","AllTeamsRow","Component","loading","error","team","props","joinTeam","successMessage","tct","slug","errorMessage","TeamStore","isPending","_err","async","reloadProjects","api","organization","setState","Promise","resolve","reject","orgId","teamId","success","addSuccessMessage","addErrorMessage","Error","leaveTeam","features","includes","teamRole","teamRoleList","roleName","find","r","id","fetchOrganizationDetails","loadProjects","openMembership","urlPrefix","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamLink","to","getTeamRoleName","state","disabled","isMember","handleLeaveTeam","handleJoinTeam","handleRequestAccess","Link","withApi","PanelItem","AllTeamsList","teamList","access","teamNodes","map","length","canCreateTeam","has","root","noMargin","teamCreate","link","StyledButton","priority","openCreateTeamModal","Fragment","fontSizeLarge","OrganizationAccessRequests","accessRequestBusy","stopPropagation","handleAction","isApproved","onRemoveAccessRequest","requestPromise","method","data","requestList","member","requester","memberName","user","email","username","requesterName","StyledPanelItem","handleApprove","busy","handleDeny","OrganizationTeams","params","teamQuery","setTeamQuery","initiallyLoaded","useTeams","provideUserTeams","teams","loadMore","hasMore","fetching","canCreateTeams","action","undefined","isCircled","debouncedSearch","debounce","DEFAULT_DEBOUNCE_DURATION","orgSlug","orgRole","orgRoleList","filteredTeams","filter","toLowerCase","userTeams","otherTeams","partition","StyledSearchBar","placeholder","isSelf","LoadMoreWrapper","mini","OrganizationTeamsContainer","requestToRemove","request","getEndpoints","componentDidMount","fetchStats","loadStats","since","Date","getTime","toString","stat","group","renderBody","Set","removeAccessRequest","withOrganization","RoleOverwriteIcon","hasOrgRoleOverwrite","getOverwriteString","RoleOverwritePanelAlert","orgRoleObj","findIndex","minimumTeamRole","teamRoleObj","selfNoun","selfPronoun","article"],"sourceRoot":""}
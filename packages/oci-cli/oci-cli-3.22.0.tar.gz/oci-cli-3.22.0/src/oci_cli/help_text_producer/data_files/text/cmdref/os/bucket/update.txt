"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Examples


Description
===========

Performs a partial or full update of a bucket’s user-defined metadata.

Use UpdateBucket to move a bucket from one compartment to another
within the same tenancy. Supply the compartmentID of the compartment
that you want to move the bucket to. For more information about moving
resources between compartments, see Moving Resources to a Different
Compartment.


Usage
=====

   oci os bucket update [OPTIONS]


Required Parameters
===================

--bucket-name, --name, -bn [text]

The name of the bucket. Avoid entering confidential information.
Example: *my-new-bucket1*


Optional Parameters
===================

--auto-tiering [text]

The auto tiering status on the bucket. If in state *InfrequentAccess*,
objects are transitioned automatically between the ‘Standard’ and
‘InfrequentAccess’ tiers based on the access pattern of the objects.
When auto tiering is *Disabled*, there will be no automatic
transitions between storage tiers.

--compartment-id, -c [text]

The compartmentId for the compartment to move the bucket to.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. Example:
>>`<<{“Operations”: {“CostCenter”: “42”}} This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags. Example: *{“Department”: “Finance”}* This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

The entity tag (ETag) to match with the ETag of an existing resource.
If the specified ETag matches the ETag of the existing resource, GET
and HEAD requests will return the resource and PUT and POST requests
will upload the resource.

--kms-key-id [text]

The OCID of the Key Management master encryption key to associate with
the specified bucket. If this value is empty, the Update operation
will remove the associated key, if there is one, from the bucket. (The
bucket will continue to be encrypted, but with an encryption key
managed by Oracle.)

--metadata [complex type]

Arbitrary string, up to 4KB, of keys and values for user-defined
metadata. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--namespace-name, --namespace, -ns [text]

The Object Storage namespace used for the request. If not provided,
this parameter will be obtained internally using a call to ‘oci os ns
get’

--object-events-enabled [boolean]

Whether or not events are emitted for object state changes in this
bucket. By default, *objectEventsEnabled* is set to *false*. Set
*objectEventsEnabled* to *true* to emit events for object state
changes. For more information about events, see Overview of Events.

--public-access-type [text]

The type of public access enabled on this bucket. A bucket is set to
*NoPublicAccess* by default, which only allows an authenticated caller
to access the bucket and its contents. When *ObjectRead* is enabled on
the bucket, public access is allowed for the *GetObject*,
*HeadObject*, and *ListObjects* operations. When
*ObjectReadWithoutList* is enabled on the bucket, public access is
allowed for the *GetObject* and *HeadObject* operations.

Accepted values are:

   NoPublicAccess, ObjectRead, ObjectReadWithoutList

--versioning [text]

The versioning status on the bucket. If in state *Enabled*, multiple
versions of the same object can be kept in the bucket. When the object
is overwritten or deleted, previous versions will still be available.
When versioning is *Suspended*, the previous versions will still
remain but new versions will no longer be created when overwitten or
deleted. Versioning cannot be disabled on a bucket once enabled.

Accepted values are:

   Enabled, Suspended


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--query", "--raw-output", "--read-timeout",
"--region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-i", "-v"


Examples
========

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export bucket_name=<substitute-value-of-bucket_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/os/bucket/update.html#cmdoption-bucket-name

       oci os bucket update --bucket-name $bucket_name

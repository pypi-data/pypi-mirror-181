{"version":3,"file":"static/js/433.f6d37760.chunk.js","mappings":"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","sources":["../../core/src/app/time/TimezoneSelect.tsx","../../core/src/app/UserSettingsRoot.tsx","../../core/src/hooks/useDocumentTitle.tsx","../../ui/src/components/Menu.tsx","../../ui/src/components/MetadataTable.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Select.tsx","../../../node_modules/@blueprintjs/select/src/components/select/select.tsx"],"sourcesContent":["import {MenuDivider, MenuItem, Menu, Select} from '@dagster-io/ui';\nimport moment from 'moment-timezone';\nimport * as React from 'react';\n\nimport {TimezoneContext} from './TimezoneContext';\nimport {browserTimezone, browserTimezoneAbbreviation} from './browserTimezone';\n\nconst formatOffset = (mm: number) => {\n  const amm = Math.abs(mm);\n  // moment.tz.zone() offsets are inverted: https://momentjs.com/timezone/docs/#/zone-object/offset/\n  return `${mm < 0 ? '+' : '-'}${Math.floor(amm / 60)}:${amm % 60 < 10 ? '0' : ''}${amm % 60}`;\n};\n\nconst AllTimezoneItems = moment.tz\n  .names()\n  .map((key) => {\n    const offset = moment.tz.zone(key)?.utcOffset(Date.now()) || 0;\n    return {offsetLabel: `${formatOffset(offset)}`, offset, key};\n  })\n  .sort((a, b) => a.offset - b.offset);\n\nconst PopularTimezones = ['UTC', 'US/Pacific', 'US/Mountain', 'US/Central', 'US/Eastern'];\n\nconst offsetLabel = () => {\n  return `${browserTimezoneAbbreviation()} ${formatOffset(\n    moment.tz.zone(browserTimezone())?.utcOffset(Date.now()) || 0,\n  )}`;\n};\n\nconst SortedTimezoneItems = [\n  {\n    key: 'Automatic',\n    offsetLabel: offsetLabel(),\n    offset: 0,\n  },\n  {\n    key: 'divider-1',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => PopularTimezones.includes(t.key)),\n  {\n    key: 'divider-2',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => !PopularTimezones.includes(t.key)),\n];\n\ninterface Props {\n  trigger: (timezone: string) => React.ReactNode;\n}\n\nexport const TimezoneSelect: React.FC<Props> = ({trigger}) => {\n  const [timezone, setTimezone] = React.useContext(TimezoneContext);\n\n  return (\n    <Select<typeof SortedTimezoneItems[0]>\n      popoverProps={{\n        position: 'bottom-left',\n        modifiers: {offset: {enabled: true, offset: '-12px, 8px'}},\n      }}\n      activeItem={SortedTimezoneItems.find((tz) => tz.key === timezone)}\n      inputProps={{style: {width: '300px'}}}\n      items={SortedTimezoneItems}\n      itemPredicate={(query, tz) => tz.key.toLowerCase().includes(query.toLowerCase())}\n      itemRenderer={(tz, props) =>\n        tz.key.startsWith('divider') ? (\n          <MenuDivider key={tz.key} />\n        ) : (\n          <MenuItem\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            label={tz.offsetLabel}\n            key={tz.key}\n            text={tz.key}\n          />\n        )\n      }\n      itemListRenderer={({renderItem, filteredItems}) => {\n        const renderedItems = filteredItems.map(renderItem).filter(Boolean);\n        return <Menu>{renderedItems}</Menu>;\n      }}\n      noResults={<MenuItem disabled text=\"No results.\" />}\n      onItemSelect={(tz) => setTimezone(tz.key)}\n    >\n      {trigger(timezone)}\n    </Select>\n  );\n};\n","import {\n  Box,\n  ButtonLink,\n  Checkbox,\n  Colors,\n  Heading,\n  MetadataTable,\n  PageHeader,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {FeatureFlag, FeatureFlagType, getFeatureFlags, setFeatureFlags} from './Flags';\nimport {SHORTCUTS_STORAGE_KEY} from './ShortcutHandler';\nimport {useTrackPageView} from './analytics';\nimport {TimezoneSelect} from './time/TimezoneSelect';\nimport {automaticLabel} from './time/browserTimezone';\n\nexport interface SettingsRootProps {\n  tabs?: React.ReactNode;\n}\nconst UserSettingsRoot: React.FC<SettingsRootProps> = ({tabs}) => {\n  useTrackPageView();\n  useDocumentTitle('User settings');\n\n  const [flags, setFlags] = React.useState<FeatureFlagType[]>(() => getFeatureFlags());\n  const [shortcutsEnabled, setShortcutsEnabled] = useStateWithStorage(\n    SHORTCUTS_STORAGE_KEY,\n    (value: any) => (typeof value === 'boolean' ? value : true),\n  );\n\n  React.useEffect(() => {\n    setFeatureFlags(flags);\n  });\n\n  const toggleFlag = (flag: FeatureFlagType) => {\n    setFlags(flags.includes(flag) ? flags.filter((f) => f !== flag) : [...flags, flag]);\n    window.location.reload();\n  };\n\n  const trigger = React.useCallback(\n    (timezone: string) => (\n      <ButtonLink>{timezone === 'Automatic' ? automaticLabel() : timezone}</ButtonLink>\n    ),\n    [],\n  );\n\n  const toggleKeyboardShortcuts = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {checked} = e.target;\n    setShortcutsEnabled(checked);\n    // Delay slightly so that the switch visibly changes first.\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  };\n\n  return (\n    <div style={{height: '100vh', overflowY: 'auto'}}>\n      <PageHeader title={<Heading>User settings</Heading>} tabs={tabs} />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Box padding={{bottom: 8}}>\n          <Subheading>Preferences</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Timezone',\n              value: (\n                <Box margin={{bottom: 4}}>\n                  <TimezoneSelect trigger={trigger} />\n                </Box>\n              ),\n            },\n            {\n              key: 'Enable keyboard shortcuts',\n              value: (\n                <Checkbox\n                  checked={shortcutsEnabled}\n                  format=\"switch\"\n                  onChange={toggleKeyboardShortcuts}\n                />\n              ),\n            },\n          ]}\n        />\n      </Box>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n      >\n        <Box padding={{bottom: 8}}>\n          <Subheading>Experimental features</Subheading>\n        </Box>\n        <MetadataTable rows={getFeatureFlagRows(flags, toggleFlag)} />\n      </Box>\n    </div>\n  );\n};\n\nexport function getFeatureFlagRows(\n  flags: FeatureFlagType[],\n  toggleFlag: (flag: FeatureFlagType) => void,\n) {\n  return [\n    {\n      key: 'Debug console logging',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagDebugConsoleLogging)}\n          onChange={() => toggleFlag(FeatureFlag.flagDebugConsoleLogging)}\n        />\n      ),\n    },\n    {\n      key: 'Disable WebSockets',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagDisableWebsockets)}\n          onChange={() => toggleFlag(FeatureFlag.flagDisableWebsockets)}\n        />\n      ),\n    },\n    {\n      key: 'Experimental schedule/sensor logging view',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagSensorScheduleLogging)}\n          onChange={() => toggleFlag(FeatureFlag.flagSensorScheduleLogging)}\n        />\n      ),\n    },\n  ];\n}\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default UserSettingsRoot;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","/* eslint-disable no-restricted-imports */\nimport {\n  Intent,\n  Menu as BlueprintMenu,\n  MenuDivider as BlueprintMenuDivider,\n  MenuItem as BlueprintMenuItem,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconName, Icon, IconWrapper} from './Icon';\n\ninterface Props extends React.ComponentProps<typeof BlueprintMenu> {}\n\nexport const Menu: React.FC<Props> = (props) => {\n  return <StyledMenu {...props} />;\n};\n\nconst intentToTextColor = (intent: React.ComponentProps<typeof BlueprintMenuItem>['intent']) => {\n  switch (intent) {\n    case 'primary':\n      return Colors.Blue500;\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    default:\n      return Colors.Gray900;\n  }\n};\n\nconst intentToIconColor = (intent: React.ComponentProps<typeof BlueprintMenuItem>['intent']) => {\n  switch (intent) {\n    case 'primary':\n      return Colors.Blue500;\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    default:\n      return Colors.Gray900;\n  }\n};\n\nexport const iconWithColor = (icon?: IconName | JSX.Element, intent?: Intent) => {\n  if (icon) {\n    if (typeof icon === 'string') {\n      return <Icon name={icon} color={intentToIconColor(intent)} />;\n    }\n    return icon;\n  }\n  return null;\n};\n\nexport interface CommonMenuItemProps {\n  icon?: IconName | JSX.Element;\n}\n\ninterface ItemProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof BlueprintMenuItem>, 'href' | 'icon'> {}\n\nexport const MenuItem: React.FC<ItemProps> = (props) => {\n  const {icon, intent, ...rest} = props;\n  return (\n    <StyledMenuItem\n      {...rest}\n      $textColor={intentToTextColor(intent)}\n      icon={iconWithColor(icon, intent)}\n    />\n  );\n};\n\ninterface MenuExternalLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof BlueprintMenuItem>, 'href' | 'icon'> {\n  href: string;\n}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuExternalLink: React.FC<MenuExternalLinkProps> = (props) => {\n  const {icon, intent, ...rest} = props;\n  return (\n    <StyledMenuItem\n      {...rest}\n      target=\"_blank\"\n      rel=\"noreferrer nofollow\"\n      $textColor={intentToTextColor(intent)}\n      icon={iconWithColor(icon, intent)}\n    />\n  );\n};\n\nexport const MenuDivider = styled(BlueprintMenuDivider)`\n  border-top: 1px solid ${Colors.Gray100};\n  margin: 2px 0;\n`;\n\nconst StyledMenu = styled(BlueprintMenu)`\n  border-radius: 4px;\n  padding: 8px 4px;\n`;\n\ninterface StyledMenuItemProps extends React.ComponentProps<typeof BlueprintMenuItem> {\n  $textColor: string;\n}\n\nconst StyledMenuItem = styled(BlueprintMenuItem)<StyledMenuItemProps>`\n  border-radius: 4px;\n  color: ${({$textColor}) => $textColor};\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition: background-color 50ms, box-shadow 150ms;\n  align-items: flex-start;\n  font-size: 14px;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  &.bp3-intent-primary.bp3-active {\n    background-color: ${Colors.Blue500};\n\n    ${IconWrapper} {\n      background-color: ${Colors.White};\n    }\n  }\n\n  &.bp3-disabled ${IconWrapper} {\n    opacity: 0.5;\n  }\n\n  &.bp3-active ${IconWrapper} {\n    color: ${Colors.White};\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &:hover {\n    background: ${Colors.Gray100};\n    color: ${({$textColor}) => $textColor};\n  }\n\n  &:focus {\n    color: ${({$textColor}) => $textColor};\n    box-shadow: rgba(58, 151, 212, 0.6) 0 0 0 2px;\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Table, TableProps} from './Table';\n\nexport type MetadataTableRow = {key: string; label?: React.ReactNode; value: React.ReactNode};\n\ninterface Props {\n  dark?: boolean;\n  rows: (MetadataTableRow | null | undefined)[];\n  spacing: 0 | 2 | 4;\n}\n\nexport const MetadataTable = (props: Props) => {\n  const {rows, spacing, dark = false} = props;\n\n  return (\n    <StyledTable>\n      <tbody>\n        {rows.map((pair: MetadataTableRow | null | undefined) => {\n          if (!pair) {\n            return null;\n          }\n          const {key, label, value} = pair;\n          return (\n            <tr key={key}>\n              <td>\n                <Box padding={{vertical: spacing, right: 32}}>\n                  <MetadataKey $dark={dark}>{label ?? key}</MetadataKey>\n                </Box>\n              </td>\n              <td>\n                <Box padding={{vertical: spacing}}>{value}</Box>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nMetadataTable.defaultProps = {\n  spacing: 4,\n};\n\nexport const StyledTable = styled.table`\n  border-spacing: 0;\n  td {\n    vertical-align: top;\n  }\n\n  td .bp3-control {\n    margin-bottom: 0;\n  }\n`;\n\nconst MetadataKey = styled.div<{$dark: boolean}>`\n  color: ${({$dark}) => ($dark ? Colors.Gray200 : Colors.Gray600)};\n  font-weight: 400;\n`;\n\nexport const MetadataTableWIP = styled(Table)<TableProps>`\n  td:first-child {\n    white-space: nowrap;\n    width: 1px;\n    max-width: 400px;\n    word-break: break-word;\n    overflow: hidden;\n    padding-right: 24px;\n    text-overflow: ellipsis;\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp3-breadcrumbs {\n    height: auto;\n  }\n`;\n","/* eslint-disable no-restricted-imports */\nimport {IPopoverProps} from '@blueprintjs/core';\nimport {Select as BlueprintSelect, SelectProps} from '@blueprintjs/select';\n/* eslint-enable no-restricted-imports */\nimport deepmerge from 'deepmerge';\nimport * as React from 'react';\n\nexport const Select = <T,>(props: React.PropsWithChildren<SelectProps<T>>) => {\n  const popoverProps: Partial<IPopoverProps> = {\n    ...props.popoverProps,\n    minimal: true,\n    modifiers: deepmerge(\n      {offset: {enabled: true, offset: '0, 8px'}},\n      props.popoverProps?.modifiers || {},\n    ),\n    popoverClassName: `dagit-popover ${props.popoverProps?.className || ''}`,\n  };\n\n  return <BlueprintSelect {...props} popoverProps={popoverProps} />;\n};\n","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Button,\n    DISPLAYNAME_PREFIX,\n    InputGroupProps2,\n    InputGroup,\n    IPopoverProps,\n    IRef,\n    Keys,\n    Popover,\n    Position,\n    refHandler,\n    setRef,\n} from \"@blueprintjs/core\";\n\nimport { Classes, IListItemsProps } from \"../../common\";\nimport { IQueryListRendererProps, QueryList } from \"../query-list/queryList\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type SelectProps<T> = ISelectProps<T>;\n/** @deprecated use SelectProps */\nexport interface ISelectProps<T> extends IListItemsProps<T> {\n    /**\n     * Whether the dropdown list can be filtered.\n     * Disabling this option will remove the `InputGroup` and ignore `inputProps`.\n     *\n     * @default true\n     */\n    filterable?: boolean;\n\n    /**\n     * Whether the component is non-interactive.\n     * If true, the list's item renderer will not be called.\n     * Note that you'll also need to disable the component's children, if appropriate.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Props to spread to the query `InputGroup`. Use `query` and\n     * `onQueryChange` instead of `inputProps.value` and `inputProps.onChange`\n     * to control this input.\n     */\n    inputProps?: InputGroupProps2;\n\n    /** Props to spread to `Popover`. Note that `content` cannot be changed. */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    popoverProps?: Partial<IPopoverProps> & object;\n\n    /**\n     * Whether the active item should be reset to the first matching item _when\n     * the popover closes_. The query will also be reset to the empty string.\n     *\n     * @default false\n     */\n    resetOnClose?: boolean;\n}\n\nexport interface ISelectState {\n    isOpen: boolean;\n}\n\nexport class Select<T> extends AbstractPureComponent2<SelectProps<T>, ISelectState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Select`;\n\n    public static ofType<U>() {\n        return Select as new (props: SelectProps<U>) => Select<U>;\n    }\n\n    public state: ISelectState = { isOpen: false };\n\n    private TypedQueryList = QueryList.ofType<T>();\n\n    public inputElement: HTMLInputElement | null = null;\n\n    private queryList: QueryList<T> | null = null;\n\n    private previousFocusedElement: HTMLElement | undefined;\n\n    private handleInputRef: IRef<HTMLInputElement> = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n\n    private handleQueryListRef = (ref: QueryList<T> | null) => (this.queryList = ref);\n\n    public render() {\n        // omit props specific to this component, spread the rest.\n        const { filterable, inputProps, popoverProps, ...restProps } = this.props;\n\n        return (\n            <this.TypedQueryList\n                {...restProps}\n                onItemSelect={this.handleItemSelect}\n                ref={this.handleQueryListRef}\n                renderer={this.renderQueryList}\n            />\n        );\n    }\n\n    public componentDidUpdate(prevProps: SelectProps<T>, prevState: ISelectState) {\n        if (prevProps.inputProps?.inputRef !== this.props.inputProps?.inputRef) {\n            setRef(prevProps.inputProps?.inputRef, null);\n            this.handleInputRef = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n            setRef(this.props.inputProps?.inputRef, this.inputElement);\n        }\n\n        if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n    }\n\n    private renderQueryList = (listProps: IQueryListRendererProps<T>) => {\n        // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n        const { filterable = true, disabled = false, inputProps = {}, popoverProps = {} } = this.props;\n\n        const input = (\n            <InputGroup\n                leftIcon=\"search\"\n                placeholder=\"Filter...\"\n                rightElement={this.maybeRenderClearButton(listProps.query)}\n                {...inputProps}\n                inputRef={this.handleInputRef}\n                onChange={listProps.handleQueryChange}\n                value={listProps.query}\n            />\n        );\n\n        const { handleKeyDown, handleKeyUp } = listProps;\n        return (\n            /* eslint-disable-next-line deprecation/deprecation */\n            <Popover\n                autoFocus={false}\n                enforceFocus={false}\n                isOpen={this.state.isOpen}\n                disabled={disabled}\n                position={Position.BOTTOM_LEFT}\n                {...popoverProps}\n                className={classNames(listProps.className, popoverProps.className)}\n                onInteraction={this.handlePopoverInteraction}\n                popoverClassName={classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName)}\n                onOpening={this.handlePopoverOpening}\n                onOpened={this.handlePopoverOpened}\n                onClosing={this.handlePopoverClosing}\n            >\n                <div\n                    onKeyDown={this.state.isOpen ? handleKeyDown : this.handleTargetKeyDown}\n                    onKeyUp={this.state.isOpen ? handleKeyUp : undefined}\n                >\n                    {this.props.children}\n                </div>\n                <div onKeyDown={handleKeyDown} onKeyUp={handleKeyUp}>\n                    {filterable ? input : undefined}\n                    {listProps.itemList}\n                </div>\n                {/* eslint-disable-next-line deprecation/deprecation */}\n            </Popover>\n        );\n    };\n\n    private maybeRenderClearButton(query: string) {\n        return query.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={this.resetQuery} /> : undefined;\n    }\n\n    private handleTargetKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        // open popover when arrow key pressed on target while closed\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n            event.preventDefault();\n            this.setState({ isOpen: true });\n        }\n    };\n\n    private handleItemSelect = (item: T, event?: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isOpen: false });\n        this.props.onItemSelect?.(item, event);\n    };\n\n    private handlePopoverInteraction = (isOpen: boolean) => {\n        this.setState({ isOpen });\n        this.props.popoverProps?.onInteraction?.(isOpen);\n    };\n\n    private handlePopoverOpening = (node: HTMLElement) => {\n        // save currently focused element before popover steals focus, so we can restore it when closing.\n        this.previousFocusedElement = document.activeElement as HTMLElement;\n\n        if (this.props.resetOnClose) {\n            this.resetQuery();\n        }\n\n        this.props.popoverProps?.onOpening?.(node);\n    };\n\n    private handlePopoverOpened = (node: HTMLElement) => {\n        // scroll active item into view after popover transition completes and all dimensions are stable.\n        if (this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n\n        this.requestAnimationFrame(() => {\n            const { inputProps = {} } = this.props;\n            // autofocus is enabled by default\n            if (inputProps.autoFocus !== false) {\n                this.inputElement?.focus();\n            }\n        });\n\n        this.props.popoverProps?.onOpened?.(node);\n    };\n\n    private handlePopoverClosing = (node: HTMLElement) => {\n        // restore focus to saved element.\n        // timeout allows popover to begin closing and remove focus handlers beforehand.\n        this.requestAnimationFrame(() => {\n            if (this.previousFocusedElement !== undefined) {\n                this.previousFocusedElement.focus();\n                this.previousFocusedElement = undefined;\n            }\n        });\n\n        this.props.popoverProps?.onClosing?.(node);\n    };\n\n    private resetQuery = () => this.queryList && this.queryList.setQuery(\"\", true);\n}\n"],"names":["formatOffset","mm","amm","Math","abs","floor","AllTimezoneItems","moment","map","key","offset","utcOffset","Date","now","offsetLabel","sort","a","b","PopularTimezones","SortedTimezoneItems","browserTimezoneAbbreviation","browserTimezone","filter","t","includes","TimezoneSelect","trigger","React","TimezoneContext","timezone","setTimezone","Select","popoverProps","position","modifiers","enabled","activeItem","find","tz","inputProps","style","width","items","itemPredicate","query","toLowerCase","itemRenderer","props","startsWith","Menu","active","onClick","handleClick","label","text","itemListRenderer","renderItem","renderedItems","filteredItems","Boolean","noResults","disabled","onItemSelect","getFeatureFlagRows","flags","toggleFlag","value","Checkbox","format","checked","FeatureFlag","onChange","tabs","useTrackPageView","useDocumentTitle","getFeatureFlags","setFlags","useStateWithStorage","SHORTCUTS_STORAGE_KEY","shortcutsEnabled","setShortcutsEnabled","setFeatureFlags","ButtonLink","automaticLabel","height","overflowY","PageHeader","title","Box","padding","vertical","horizontal","bottom","MetadataTable","rows","margin","e","target","setTimeout","window","location","reload","border","side","color","Colors","flag","f","currentTitle","document","StyledMenu","intentToTextColor","intent","intentToIconColor","iconWithColor","icon","name","MenuItem","rest","StyledMenuItem","$textColor","MenuExternalLink","rel","MenuDivider","styled","BlueprintMenuDivider","BlueprintMenu","BlueprintMenuItem","IconWrapper","spacing","dark","StyledTable","pair","right","MetadataKey","$dark","defaultProps","MetadataTableWIP","Table","tags","PageHeaderContainer","background","top","left","flex","direction","justifyContent","alignItems","gap","wrap","minimal","deepmerge","popoverClassName","className","state","isOpen","TypedQueryList","inputElement","queryList","handleInputRef","inputRef","handleQueryListRef","ref","renderQueryList","listProps","filterable","input","leftIcon","placeholder","rightElement","maybeRenderClearButton","handleQueryChange","handleKeyDown","handleKeyUp","autoFocus","enforceFocus","onInteraction","handlePopoverInteraction","onOpening","handlePopoverOpening","onOpened","handlePopoverOpened","onClosing","handlePopoverClosing","onKeyDown","handleTargetKeyDown","onKeyUp","undefined","children","itemList","event","which","preventDefault","setState","handleItemSelect","item","node","previousFocusedElement","activeElement","resetOnClose","resetQuery","scrollActiveItemIntoView","requestAnimationFrame","focus","setQuery","ofType","render","this","restProps","renderer","componentDidUpdate","prevProps","prevState","length","displayName"],"sourceRoot":""}